{"version":3,"sources":["components/atoms/Toggle.tsx","../../../../src/components/switch/switch.tsx","pages/account/student/EducationStep.jsx"],"names":["Toggle","enabled","setEnabled","text","subText","className","Group","as","Label","passive","Description","checked","onChange","html","document","querySelector","classList","remove","localStorage","setItem","add","classNames","aria-hidden","GroupContext","createContext","DEFAULT_GROUP_TAG","Switch","props","passThroughProps","id","useId","groupContext","useContext","toggle","useCallback","handleClick","isDisabledReactIssue7711","event","handleKeyUp","Keys","handleKeyPress","slot","useMemo","propsWeControl","ref","role","tabIndex","onClick","onKeyUp","onKeyPress","Object","type","render","defaultTag","name","useState","switchElement","setSwitchElement","useLabels","labelledby","LabelProvider","useDescriptions","describedby","DescriptionProvider","context","switch","setSwitch","preventScroll","value","EducationStep","isLoaded","setIsLoaded","history","useHistory","useUserContext","values","setValues","setTimeout","saving","setSaving","validationSchema","Yup","education","required","grade","grade_subject","start_year","end_year","above_sixteen","fields","setFields","title","subtitle","initialValues","StudentStepOne","onSubmit","_values","wait","then","student","push","links","STUDENT_STEP_2","label","list","yearList","selectedItem","placeholder","onSelect","item","yearListWithFuture","color","CHOOSE_ACCOUNT","fullWidth","rounded","gradient","loading","goBack"],"mappings":"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","file":"static/js/6.def20adb.chunk.js","sourcesContent":["import { Switch } from '@headlessui/react'\nimport { classNames } from 'utils/classNames'\n\nconst Toggle = ({\n  enabled,\n  setEnabled,\n  text,\n  subText,\n  className,\n}: {\n  enabled: boolean\n  setEnabled: React.Dispatch<React.SetStateAction<boolean>>\n  text: string\n  subText?: string\n  className?: string\n}) => {\n  // const getThemeValue = () => {\n  //   const theme = localStorage.getItem('theme') || 'light'\n  //   return theme\n  // }\n  // useEffect(() => {\n  //   const html = document.querySelector('html')\n\n  //   const theme = getThemeValue()\n  //   if (theme === 'dark') {\n  //     html?.classList.remove('dark')\n  //     setEnabled(true)\n  //   } else {\n  //     localStorage.setItem('theme', 'dark')\n  //     setEnabled(false)\n  //   }\n  // }, [])\n\n  // const enableDarkMode = () => {\n  //   const theme = getThemeValue()\n  //   const html = document.querySelector('html')\n  //   if (\n  //     theme === 'dark' ||\n  //     window.matchMedia('(prefers-color-scheme: dark)').matches\n  //   ) {\n  //     localStorage.setItem('theme', 'light')\n  //     setEnabled(true)\n  //     html?.classList.remove('dark')\n  //   } else {\n  //     html?.classList.add('dark')\n  //     localStorage.setItem('theme', 'dark')\n  //     setEnabled(false)\n  //   }\n  // }\n\n  // to set value to local star --- useState\n  // to set value to storage --- localStorage\n\n  // #1 - First load storage value\n  // #2 - if value is 'dark' set value to true and add 'dark' class\n  // #3 - if value is 'light' set value to false and remove 'dark' class\n  // for on change values\n  // #4 - if current value is 'dark' set value to false and remove 'dark' class and change value from localStorage\n  // #4 - if current value is 'light' set value to true and add  'dark' class and change value from localStorage\n\n  const changeTheme = () => {\n    const html = document.querySelector('html')\n\n    if (enabled) {\n      setEnabled(false)\n      html?.classList.remove('dark')\n      localStorage.setItem('theme', 'light')\n    } else {\n      setEnabled(true)\n      html?.classList.add('dark')\n      localStorage.setItem('theme', 'dark')\n    }\n  }\n\n  return (\n    <Switch.Group\n      as=\"div\"\n      className={`flex items-center justify-between ${className}`}\n    >\n      <span className=\"flex-grow flex flex-col items-start\">\n        <Switch.Label\n          as=\"span\"\n          className=\"text-sm font-medium text-white\"\n          passive\n        >\n          {text}\n        </Switch.Label>\n        <Switch.Description as=\"span\" className=\"text-sm text-gray-500\">\n          {subText}\n        </Switch.Description>\n      </span>\n      <Switch\n        checked={enabled}\n        onChange={changeTheme}\n        className={classNames(\n          enabled\n            ? 'bg-gradient-to-r from-pink-500 to-yellow-500'\n            : 'bg-gray-800',\n          'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? 'translate-x-5' : 'translate-x-0',\n            'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200'\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  )\n}\nexport default Toggle\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n","/* eslint-disable quotes */\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Toggle from 'components/atoms/Toggle'\nimport Loading from 'components/Loading'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\nimport { yearList, yearListWithFuture } from 'values/values'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { StudentStepOne } from 'initials'\nimport { useUserContext } from 'context/UserContext'\n\nconst EducationStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n  const { values, setValues } = useUserContext()\n  //capture inputs\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const [saving, setSaving] = useState(false)\n\n  const onSubmit = (_values) => {\n    setSaving(true)\n    wait(3000).then(() => {\n      setSaving(false)\n      setValues({\n        ...values,\n        student: {\n          ...values.student,\n          education: {\n            ...values.education,\n            education: _values.education,\n            grade: _values.grade,\n            grade_subject: _values.grade_subject,\n            start_year: fields.start_year,\n            end_year: fields.end_year,\n          },\n        },\n      })\n      history.push(links.STUDENT_STEP_2)\n    })\n  }\n\n  const validationSchema = Yup.object({\n    education: Yup.string().required('Please add education'),\n    grade: Yup.string().required('Please add grade'),\n    grade_subject: Yup.string().required('Please add grade subject'),\n  })\n\n  const [fields, setFields] = useState({\n    start_year: '',\n    end_year: '',\n    above_sixteen: false,\n  })\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title=\"Education Information\"\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={StudentStepOne}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Education\"\n                id=\"education\"\n                name=\"education\"\n                required\n              />\n\n              <FormInput\n                label=\"Grade / title\"\n                id=\"grade\"\n                name=\"grade\"\n                required\n              />\n              <FormInput\n                label=\"Graduation subject\"\n                id=\"grade_subject\"\n                name=\"grade_subject\"\n                required\n              />\n              <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2\">\n                <div className=\"\">\n                  <Selector\n                    label={'Start year'}\n                    list={yearList}\n                    selectedItem={fields.start_year}\n                    placeholder={'-'}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        start_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n\n                <div className=\"\">\n                  <Selector\n                    label={'End year (or expected)'}\n                    placeholder={'-'}\n                    list={yearListWithFuture}\n                    selectedItem={fields.end_year}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        end_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div>\n                <Toggle\n                  className=\"mt-2\"\n                  enabled={fields.above_sixteen}\n                  text={\"I'm over 16 years old\"}\n                  setEnabled={() =>\n                    setFields({\n                      ...fields,\n                      above_sixteen: !fields.above_sixteen,\n                    })\n                  }\n                />\n              </div>\n              <div>\n                <TextButton\n                  color=\"gray\"\n                  onClick={() => history.push(links.CHOOSE_ACCOUNT)}\n                  text={\"I'm not a student\"}\n                  className=\"text-center py-2\"\n                />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  type=\"submit\"\n                  loading={saving}\n                  label=\"Next Step\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          onClick={history.goBack}\n          text=\"Go back\"\n          className=\"inline-block mt-4\"\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default EducationStep\n"],"sourceRoot":""}
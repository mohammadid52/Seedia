{"version":3,"sources":["hooks/useUser.ts","assets/svg/placeholder.png","components/SideCard.tsx","components/DiscoverButton.tsx","pages/dashboard/PostPhotoModal.tsx","components/event/CreateEvent.tsx","pages/dashboard/PostInput.tsx","pages/dashboard/ListPosts.tsx","pages/dashboard/AboutMe.tsx","pages/dashboard/index.tsx"],"names":["useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","news","name","readers","SideCard","className","secondary","cardTitle","content","map","_news","idx","DiscoverCard","extraItems","fetchEvents","shortEventsData","href","links","groups","length","ev","viewEvent","eventName","item","link","PostPhotoModal","open","setOpen","isPhoto","postingIn","customInId","setNotification","useNotifications","usePostContext","setPosts","posts","useMutation","addPost","onSuccess","post","unshift","show","title","buttonText","buttonUrl","postById","postUrl","mutate","isError","error","useState","media","setMedia","upload","uploadMediaToServer","a","modifiedData","postData","postType","text","altText","postedIn","id","nanoid","url","location","type","postImageRef","useRef","onAltText","setOnAltText","setAltText","disablePadding","header","value","onChange","e","target","textarea","rows","gradient","rounded","onClick","invert","label","size","src","URL","createObjectURL","alt","controls","controlsList","current","click","ref","img","files","accept","loading","preventDefault","fd","FormData","append","CreateEvent","eventData","fullName","validationSchema","Yup","required","min","max","eventDescription","initialValues","startDate","Date","endDate","startTime","endTime","timezone","formRef","postMutation","createEvent","message","eventId","values","setValues","uploadMultipleImages","b","finalImageList","coverPhoto","find","originalname","profilePhoto","setCoverPhoto","setProfilePhoto","uploadFunction","setTimeout","onSubmit","editMode","isEmpty","useEffect","coverPicture","profilePicture","setSelectedTimeZone","profileImageSelectorRef","coverImageSelectorRef","selectedTimeZone","enableReinitialize","innerRef","showFileExplorerForCover","placeholder","showFileExplorerForProfile","avatarPlaceholder","selectedItem","list","t","cols","errors","toString","disabled","PostInput","customButtons","showPostModal","setShowPostModal","showOtherModals","setShowOtherModals","showEventModal","setShowEventModal","defaultButtons","Icon","HiOutlinePhotograph","BsCameraVideo","bgColor","BiCalendarEvent","RiArticleLine","ListPosts","skip","fetchFeed","limit","_posts","isSuccess","postCount","count","Meta","pageTitle","Post","userId","EmptyState","animation","animationData","PersonalCard","authUser","user","showModal","setShowModal","saving","setSaving","_image","setImage","onImageSelect","useUserContext","onSave","config","headers","network","updatedData","isCover","password","console","isBusiness","useAccountType","fetchAvgViews","postViews","setIsCover","React","Modal","disableBackdropClose","Button","style","backgroundImage","noop","getProfile","business","company","jobTitle","pwvpCount","myItems","Dashboard","Loading","DashboardHeader","Sidebar","DashboardLayout","firstColClass","firstCol","secondCol","thirdCol"],"mappings":"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","file":"static/js/24.30c8387f.chunk.js","sourcesContent":["import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news • {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { links } from 'constants/Links'\nimport { useQuery } from 'react-query'\nimport { fetchEvents } from 'apis/queries'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  const { isFetched, isLoading, data } = useQuery('short-event-names', () =>\n    fetchEvents(true)\n  )\n\n  const shortEventsData: { _id: string; eventName: string }[] =\n    isFetched && !isLoading ? data?.data?.data : []\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\"flex flex-col\">\n            <div className=\" cursor-pointer flex  items-center justify-between\">\n              <div className=\"hover:underline \">Events</div>\n              <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n                +\n              </div>\n            </div>\n            {shortEventsData &&\n              shortEventsData.length > 0 &&\n              shortEventsData.map((ev) => (\n                <a\n                  href={links.viewEvent(ev._id)}\n                  className=\"py-2 text-xs font-medium text-gray-500 dark:text-gray-500 hover:underline cursor-pointer\"\n                >\n                  {ev.eventName}\n                </a>\n              ))}\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import { addPost, uploadMediaToServer } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport { nanoid } from 'nanoid'\nimport React, { useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostPhotoModal = ({\n  open,\n  setOpen,\n  isPhoto = true,\n  postingIn = 'general',\n  customInId,\n}: {\n  open: boolean\n  postingIn?: IPost['postedIn']\n  customInId?: string\n  isPhoto: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n\n  const { setPosts, posts } = usePostContext()\n\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const post = data.data.data\n      posts.unshift(post)\n      setPosts([...posts])\n\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(post.postUrl),\n      })\n    },\n  })\n\n  const [media, setMedia] = useState(null)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a) => {\n      const modifiedData = {\n        postData: {\n          postType: isPhoto ? 'withPhoto' : 'withVideo',\n          text: altText || '',\n          postedIn: postingIn,\n          customInId: customInId,\n          links: [\n            {\n              id: nanoid(12),\n              url: a?.data?.data?.location,\n              type: isPhoto ? 'image' : 'video',\n            },\n          ],\n        },\n      }\n      mutate(modifiedData)\n    },\n  })\n\n  const postImageRef: any = useRef()\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setMedia(img)\n  }\n\n  const showFileExplorer = () => postImageRef?.current?.click()\n\n  const onCancel = () => {\n    setMedia(null)\n    setOpen(false)\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const [onAltText, setOnAltText] = useState(false)\n  const [altText, setAltText] = useState('')\n\n  const onAltTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target\n    setAltText(value)\n  }\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`Edit your ${isPhoto ? 'photo' : 'video'}`}\n      open={open}\n    >\n      <div className=\" min-w-132 max-w-132 min-h-56 max-h-132 flex items-center justify-center overflow-y-auto\">\n        {media ? (\n          <div className=\"\">\n            {onAltText ? (\n              <div className=\"px-12\">\n                <h4 className=\"mb-1 text-gray-600 dark:text-gray-500\">\n                  Alt text\n                </h4>\n                <p className=\"dark:text-gray-700 text-gray-400 mb-2\">\n                  Alt text describes images for people who have trouble seeing\n                  them. If you don’t add alt text, it may be automatically\n                  generated after you post. You can edit it anytime.\n                </p>\n                <NormalFormInput\n                  value={altText}\n                  onChange={onAltTextChange}\n                  textarea\n                  rows={6}\n                />\n                <div className=\"mt-5 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    onClick={() => {\n                      setAltText('')\n                      setOnAltText(false)\n                    }}\n                    invert\n                    label=\"Cancel\"\n                    size=\"sm\"\n                  />\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    label=\"Save\"\n                    onClick={() => {\n                      setOnAltText(false)\n                    }}\n                    size=\"sm\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div>\n                {isPhoto ? (\n                  <img\n                    className=\"w-full\"\n                    src={URL.createObjectURL(media)}\n                    alt=\"\"\n                  />\n                ) : (\n                  <video\n                    controls\n                    className=\"w-full\"\n                    controlsList=\"nodownload\"\n                    src={URL.createObjectURL(media)}\n                  />\n                )}\n              </div>\n            )}\n            <div className=\"absolute bottom-5 left-5 pt-4 mb-2 pl-4\">\n              <Button\n                onClick={() => setOnAltText(!onAltText)}\n                invert={!onAltText}\n                label=\"Alt text\"\n              />\n            </div>\n          </div>\n        ) : (\n          <Button\n            onClick={showFileExplorer}\n            label={`Select ${isPhoto ? 'image' : 'video'} to share`}\n            gradient\n            invert\n            size=\"lg\"\n          />\n        )}\n\n        {/* HIDDEN IMAGE INPUT */}\n        <input\n          // @ts-ignore\n          ref={postImageRef}\n          className=\"hidden\"\n          type=\"file\"\n          onChange={onImageSelect}\n          accept={isPhoto ? 'image/*' : 'video/*'}\n        />\n      </div>\n      <div className=\"mt-5 border-t border-gray-200 dark:border-gray-700 pt-4 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          onClick={onCancel}\n          invert\n          label=\"Cancel\"\n          size=\"lg\"\n        />\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          loading={isLoading || upload.isLoading}\n          label=\"Done\"\n          onClick={onSubmit}\n          size=\"lg\"\n        />\n      </div>\n      {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n    </Modal>\n  )\n}\n\nexport default PostPhotoModal\n","import { addPost, createEvent, uploadMultipleImages } from 'apis/mutations'\nimport placeholder from 'assets/svg/placeholder.png'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormSelector from 'components/atoms/FormSelector'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IEvent } from 'interfaces/UniversalInterface'\nimport { isEmpty, map } from 'lodash'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { timezone } from 'values/values'\nimport * as Yup from 'yup'\n\nconst CreateEvent = ({\n  open,\n  setOpen,\n  eventData,\n  fullName = '',\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  eventData?: IEvent\n  fullName: string\n}) => {\n  const validationSchema = Yup.object({\n    eventName: Yup.string().required('Event Name is required').min(10).max(150),\n    eventDescription: Yup.string()\n      .required('Event Description is required')\n      .min(10)\n      .max(600),\n\n    // startTime\n  })\n\n  // @ts-ignore\n  const initialValues: IEvent = {\n    eventName: eventData?.eventName || '',\n    eventDescription: eventData?.eventDescription || '',\n    startDate: eventData?.startDate || new Date(),\n    endDate: eventData?.endDate || new Date(),\n    startTime: eventData?.startTime || '',\n    endTime: eventData?.endTime || '',\n    timezone: eventData?.timezone || '',\n  }\n\n  const formRef = useRef()\n  const { setNotification } = useNotifications()\n\n  const postMutation = useMutation(addPost)\n\n  const { mutate, isLoading, isError, error } = useMutation(createEvent, {\n    onSuccess: (data) => {\n      // console.log(data)\n      const message = data.data.message\n      const eventId = data.data.data\n      setNotification({\n        show: true,\n        title: message,\n        buttonText: 'View',\n        buttonUrl: links.viewEvent(eventId),\n      })\n\n      postMutation.mutate({\n        postData: {\n          text: `${fullName} has organized an event.`,\n          postType: 'event',\n          customInId: eventId,\n        },\n      })\n    },\n  })\n\n  const [values, setValues] = useState(null)\n\n  const upload = useMutation(uploadMultipleImages, {\n    onSuccess: (a, b) => {\n      if (values) {\n        if (a.data.data && a.data.data.length) {\n          const finalImageList: any[] = map(a.data.data, (img) => img)\n\n          mutate({\n            ...values,\n            coverPhoto: finalImageList.find(\n              (img) => img.originalname === coverPhoto.name\n            )?.location,\n\n            profilePhoto: finalImageList.find(\n              (img) => img.originalname === profilePhoto.name\n            )?.location,\n          })\n        } else {\n          mutate({\n            ...values,\n          })\n        }\n        setOpen(false)\n        setCoverPhoto(null)\n        setProfilePhoto(null)\n      }\n    },\n  })\n\n  const uploadFunction = () => {\n    const fd = new FormData()\n\n    fd.append('images', profilePhoto)\n    fd.append('images', coverPhoto)\n\n    setTimeout(() => {\n      upload.mutate(fd)\n    }, 500)\n  }\n\n  const onSubmit = async (values: any) => {\n    setValues({ ...values })\n    uploadFunction()\n  }\n\n  const editMode = !isEmpty(eventData)\n\n  useEffect(() => {\n    if (editMode) {\n      setCoverPhoto(eventData.coverPicture)\n      setProfilePhoto(eventData.profilePicture)\n      setSelectedTimeZone(eventData?.timezone || timezone[0].text)\n    }\n  }, [editMode])\n\n  const profileImageSelectorRef = useRef()\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageSelectorRef = useRef()\n\n  const showFileExplorerForCover = () =>\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n\n  const [profilePhoto, setProfilePhoto] = useState<any>()\n\n  const [coverPhoto, setCoverPhoto] = useState<any>()\n\n  const [selectedTimeZone, setSelectedTimeZone] = useState(timezone[0].text)\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`${editMode ? 'Edit' : 'Create'} event`}\n      open={open}\n    >\n      <div className=\" min-w-200 pb-4  max-w-200 min-h-164 max-h-164 overflow-y-auto\">\n        <div className=\"px-1\">\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={coverImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setCoverPhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={profileImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setProfilePhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            enableReinitialize={editMode}\n            innerRef={formRef}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6 \">\n              <div className=\" overflow-hidden  bg-white dark:bg-gray-900\">\n                <div className=\"relative  group\">\n                  <div className=\"absolute top-0 right-0 p-4\">\n                    <AiOutlineEdit className=\"bg-gray-100   transition-all hover:bg-gray-300 duration-300 rounded-full p-2 text-gray-700 h-8 w-8\" />\n                  </div>\n                  <img\n                    alt=\"\"\n                    onClick={() => showFileExplorerForCover()}\n                    src={\n                      coverPhoto\n                        ? typeof coverPhoto === 'string'\n                          ? coverPhoto\n                          : URL.createObjectURL(coverPhoto)\n                        : placeholder\n                    }\n                    className=\"w-full lg:h-36 sm:h-24 object-cover h-20\"\n                  />\n                </div>\n                <div className=\"flex  relative justify-start mr-8 ml-8 -mt-12\">\n                  <img\n                    onClick={() => showFileExplorerForProfile()}\n                    alt=\"\"\n                    src={\n                      profilePhoto\n                        ? typeof profilePhoto === 'string'\n                          ? profilePhoto\n                          : URL.createObjectURL(profilePhoto)\n                        : avatarPlaceholder\n                    }\n                    className=\" border-solid  lg:h-24 lg:w-24 h-16 w-16  border-white border-2 -mt-3\"\n                  />\n                </div>\n              </div>\n              <div className=\"px-8 space-y-4\">\n                <h3 className=\"dark:text-white text-gray-900 font-semibold \">\n                  Details\n                </h3>\n                <FormInput\n                  label=\"Event Name\"\n                  id=\"eventName\"\n                  name=\"eventName\"\n                  required\n                />\n\n                <FormSelector\n                  label=\"Timezone\"\n                  required\n                  name=\"timezone\"\n                  selectedItem={selectedTimeZone}\n                  list={timezone.map((t) => ({ name: t.text, id: t.value }))}\n                  placeholder=\"What is the purpose of this group?\"\n                />\n\n                <div className=\"flex items-center justify-between w-full gap-x-2\">\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startDate\"\n                        label=\"Start date\"\n                        type=\"date\"\n                      />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startTime\"\n                        label=\"Start time\"\n                        required\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput name=\"endDate\" label=\"End date\" type=\"date\" />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"endTime\"\n                        required\n                        label=\"End time\"\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <FormInput\n                  label=\"Description\"\n                  required\n                  id=\"eventDescription\"\n                  name=\"eventDescription\"\n                  placeholder=\"Ex. Topics, schedule, etc.\"\n                  textarea\n                  rows={2}\n                  cols={255}\n                />\n              </div>\n\n              {isError && (\n                <div className=\"px-8\">\n                  <Error errors={[error.toString()]} />\n                </div>\n              )}\n              <div className=\"flex p-4 items-center justify-end\">\n                <Button\n                  rounded=\"rounded-full\"\n                  loading={upload.isLoading || isLoading}\n                  disabled={upload.isLoading || isLoading}\n                  gradient\n                  size=\"lg\"\n                  type=\"submit\"\n                  label=\"Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default CreateEvent\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport CreateEvent from 'components/event/CreateEvent'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport PostModal from 'pages/dashboard/PostModal'\nimport PostPhotoModal from 'pages/dashboard/PostPhotoModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n  postingIn = 'general',\n  customInId,\n  fullName = '',\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n  postingIn?: IPost['postedIn']\n  fullName: string\n  customInId?: string\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n  const [showOtherModals, setShowOtherModals] = useState('init')\n  const [showEventModal, setShowEventModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n        onClick={() => setShowOtherModals('photo')}\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        onClick={() => setShowOtherModals('video')}\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        onClick={() => setShowEventModal(true)}\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal\n          customInId={customInId}\n          postingIn={postingIn}\n          setShowOtherModals={setShowOtherModals}\n          open={showPostModal}\n          setOpen={setShowPostModal}\n        />\n      )}\n      {(showOtherModals === 'photo' || showOtherModals === 'video') && (\n        <PostPhotoModal\n          isPhoto={showOtherModals === 'photo'}\n          open\n          setOpen={() => setShowOtherModals('init')}\n        />\n      )}\n      <CreateEvent\n        fullName={fullName}\n        open={showEventModal}\n        setOpen={setShowEventModal}\n      />\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","import { fetchFeed } from 'apis/queries'\nimport animationData from 'assets/animation/caught-up.json'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport { usePostContext } from 'context/PostContext'\nimport { IParent, IPost } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useQuery } from 'react-query'\n\nconst ListPosts = ({ userData }: { userData: IParent }) => {\n  const [skip, setSkip] = useState(0)\n\n  const { setPosts, posts } = usePostContext()\n\n  const { data, refetch, isLoading, isFetched, isSuccess } = useQuery(\n    'list-posts',\n    () => {\n      return fetchFeed({ limit: 10, skip })\n    },\n    {\n      onSuccess: (data) => {\n        const _posts = data?.data?.data?.posts\n        if (_posts && _posts.length > 0) {\n          setPosts([..._posts])\n        }\n      },\n    }\n  )\n\n  const fetchMoreData = () => {\n    setSkip(skip + 10)\n    refetch()\n  }\n\n  const postCount =\n    !isLoading && isFetched && isSuccess ? data?.data?.data?.count || 0 : 0\n\n  return (\n    <div className=\"\">\n      <Meta pageTitle={`(${postCount || 0}) Feed | 13RMS`} />\n      {posts && posts.length > 0 ? (\n        <div className=\"grid pb-24 grid-cols-1 gap-y-6\">\n          {posts.map((post: IPost) => (\n            <Post userData={userData} userId={userData._id} post={post} />\n          ))}\n        </div>\n      ) : (\n        // <InfiniteScroll\n        //   endMessage={\n        //     <div className=\"text-center\">\n        //       <span className=\"dark:text-gray-600 text-center text-gray-400\">\n        //         •\n        //       </span>\n        //     </div>\n        //   }\n        //   dataLength={postCount}\n        //   scrollableTarget=\"main_content\"\n        //   next={fetchMoreData}\n        //   hasMore={postCount > posts.length}\n        //   loader={<h4>Loading...</h4>}\n        // >\n\n        // </InfiniteScroll>\n        <EmptyState animation={animationData} title=\"You're all caught up\" />\n      )}\n    </div>\n  )\n}\n\nexport default ListPosts\n","import { fetchAvgViews } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport DiscoverCard from 'components/DiscoverButton'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { useUserContext } from 'context/UserContext'\nimport { network } from 'helpers'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { noop } from 'lodash'\nimport React, { useState } from 'react'\nimport { BsFillBookmarkFill } from 'react-icons/bs'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PersonalCard = ({\n  className,\n  authUser,\n  userData: user,\n}: {\n  className?: string\n  authUser: boolean\n  userData?: IParent\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowModal(true)\n  }\n\n  const { setValues } = useUserContext()\n  const { setNotification } = useNotifications()\n\n  const onSave = async () => {\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...user,\n          [isCover ? 'coverPicture' : 'profilePicture']: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post('/user/update', {\n          ...updatedData,\n        })\n\n        setNotification({\n          show: true,\n          title: `${isCover ? 'Cover' : 'Profile'} photo changed successfully`,\n        })\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setShowModal(false)\n    }\n    setSaving(false)\n  }\n\n  const { isBusiness } = useAccountType(user)\n\n  const { data } = useQuery('average-post-views', () => fetchAvgViews())\n\n  const postViews = data?.data?.data || 0\n\n  const [isCover, setIsCover] = useState(false)\n\n  const profileImageSelectorRef = React.useRef()\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    {\n      setIsCover(false)\n      /*@ts-ignore*/\n      return profileImageSelectorRef?.current?.click()\n    }\n\n  const coverImageSelectorRef = React.useRef()\n  const showFileExplorerForCover = () => {\n    setIsCover(true)\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n  }\n  const coverImageStyles =\n    'max-h-72 rounded-md sm:overflow-hidden w-full  object-cover'\n  const profileImageStyles = 'md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full'\n  return (\n    <>\n      {authUser && (\n        <Modal\n          header={`${isCover ? 'Cover' : 'Profile'} Photo`}\n          disableBackdropClose\n          open={showModal}\n          setOpen={setShowModal}\n        >\n          <div\n            className={`${\n              isCover\n                ? ' lg:min-w-256 sm:min-w-172 min-w-32'\n                : 'sm:min-w-64 sm:min-h-64'\n            }`}\n          >\n            <div\n              className={`relative ${\n                isCover\n                  ? 'sm:min-h-72 min-h-48'\n                  : 'min-h-48 flex items-center justify-center'\n              } `}\n            >\n              {_image && (\n                <img\n                  className={`shadow-xl ${\n                    isCover ? coverImageStyles : profileImageStyles\n                  }`}\n                  // @ts-ignore\n                  src={URL.createObjectURL(_image)}\n                  alt=\"\"\n                />\n              )}\n            </div>\n            <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={saving}\n                disabled={saving}\n                onClick={onSave}\n                type=\"submit\"\n                label=\"Save\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* HIDDEN IMAGE INPUT -- For Profile Picture*/}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT -- For Cover Picture*/}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {/* ------------ Profile Card ---------*/}\n      <div\n        className={`rounded-lg   border dark:border-gray-700 transition-all  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800`}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${\n              user?.coverPicture\n                ? user?.coverPicture\n                : 'https://source.unsplash.com/1600x900/?nature,water'\n            })`,\n          }}\n          onClick={() => (authUser ? showFileExplorerForCover() : noop)}\n          className=\"w-full lg:h-20 cursor-pointer sm:h-24 bg-center bg-no-repeat bg-cover h-20\"\n        />\n        <div className=\"flex justify-center -mt-8\">\n          <img\n            alt=\"\"\n            title=\"change photo\"\n            onClick={() => (authUser ? showFileExplorerForProfile() : noop)}\n            src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n            className=\"rounded-full border-gradient border-transparent cursor-pointer border-solid lg:h-16 lg:w-16 h-12 w-12 border-2 shadow-xl -mt-3\"\n          />\n        </div>\n        <div className=\"text-center px-3 pb-6 pt-2\">\n          <a\n            href={links.getProfile(user, true)}\n            className=\"dark:text-white  text-gray-900 text-base font-bold \"\n          >\n            {user.fullName}\n          </a>\n          <p className=\"text-sm font-medium dark:text-gray-500 text-gray-500 \">\n            {isBusiness ? user.business.name : user.company.jobTitle}\n          </p>\n        </div>\n        <div className=\"flex gap-y-2  flex-col border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Who viewed your profile</h6>\n            <span className=\"text-link font-semibold\">{user.pwvpCount}</span>\n          </div>\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Views of your post</h6>\n            <span className=\"text-link font-semibold\">{postViews}</span>\n          </div>\n        </div>\n        <a\n          href={links.myItems()}\n          className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-start px-4 border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\"\n        >\n          <BsFillBookmarkFill className=\"mr-2\" />\n          <p>My Items</p>\n        </a>\n      </div>\n      {/* ------------ Profile Card Ends ---------*/}\n\n      {/* // ~~~~~~~~~~~~~~~~~~~Discover Cards ~~~~~~~~~~~~~~~~~~~~ // */}\n      <DiscoverCard />\n    </>\n  )\n}\nexport default PersonalCard\n","import Loading from 'components/Loading'\nimport Sidebar from 'components/Sidebar'\nimport SideCard from 'components/SideCard'\nimport useUser from 'hooks/useUser'\nimport { IParent, NavProps } from 'interfaces/UniversalInterface'\nimport ListPosts from 'pages/dashboard/ListPosts'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport PersonalCard from './AboutMe'\nimport PostInput from './PostInput'\n\ninterface DashboardProps extends NavProps {\n  userData: IParent\n}\n\nconst Dashboard = ({ userData }: DashboardProps) => {\n  const { isFetched, isLoading, iAmOwnerOfThisProfile } = useUser(\n    userData._id,\n    userData\n  )\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n\n      <Sidebar />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`max-h-152 lg:block  xl:block w-full  `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              <PersonalCard\n                authUser={iAmOwnerOfThisProfile}\n                userData={userData}\n              />\n              {/* <GroupList secondary userId={userData._id} /> */}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              <PostInput\n                fullName={userData.fullName}\n                profilePicture={userData?.profilePicture}\n              />\n              <ListPosts userData={userData} />\n            </div>\n          }\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n            </div>\n          }\n        />\n      </div>\n    </div>\n    // </Sidebar>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}
{"version":3,"sources":["utils/functions/index.js","components/atoms/form/FormError.tsx","../../../../src/components/description/description.tsx","components/atoms/FormInput.tsx","../node_modules/lodash/map.js","../node_modules/lodash/_baseMap.js","components/atoms/Title.tsx","../../../../src/components/label/label.tsx","components/Dropdown/Dropdown.tsx","components/Spinner.tsx","components/atoms/SectionTitle.tsx","../../../src/hooks/use-focus-trap.ts","../../../src/hooks/use-inert-others.ts","../../../src/internal/portal-force-root.tsx","../../../../src/components/portal/portal.tsx","../../../src/internal/stack-context.tsx","../../../../src/components/dialog/dialog.tsx","components/atoms/products/Section.tsx","pages/products/QuickOverview.tsx","pages/products/Product.tsx","assets/svg/placeholder.png","../../../../src/components/radio-group/radio-group.tsx","../../../src/hooks/use-flags.ts","components/atoms/Label.tsx","pages/store/BannerImage.tsx","pages/store/OpenStore.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","getTags","filter","tags","getFromNowTime","time","moment","fromNow","FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","DescriptionContext","createContext","useDescriptionContext","context","useContext","err","Error","useDescriptions","useState","descriptionIds","setDescriptionIds","useMemo","props","register","useCallback","existing","clone","idx","contextBag","slot","name","Description","id","useId","useIsoMorphicEffect","passThroughProps","propsWeControl","render","defaultTag","FormInput","label","type","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","onClick","arrayMap","require","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","baseEach","isArrayLike","index","result","Array","Title","children","size","fontWeight","textColor","isLoading","LabelContext","useLabelContext","useLabels","labelIds","setLabelIds","Label","passive","allProps","Dropdown","list","as","Button","Fragment","Items","item","Item","active","style","zIndex","stopPropagation","classNames","Icon","Spinner","SectionTitle","title","gradient","Features","useFocusTrap","container","features","All","initialFocus","containers","restoreElement","useRef","window","document","previousActiveElement","mounted","useIsMounted","featuresRestoreFocus","featuresInitialFocus","useEffect","focusElement","activeElement","focusIn","Focus","FocusResult","useWindowEvent","event","Keys","allContainers","Set","previous","toElement","contains","interactables","originals","inert","element","restore","original","ForcePortalRootContext","ForcePortalRoot","force","usePortalTarget","forceInRoot","groupTarget","existingRoot","root","setTarget","DEFAULT_PORTAL_TAG","Portal","passthroughProps","ready","useServerHandoffComplete","createPortal","DEFAULT_GROUP_TAG","PortalGroupContext","StackMessage","StackContext","StackProvider","onUpdate","parentUpdate","notify","args","DialogStates","ActionTypes","reducers","state","action","titleId","DialogContext","useDialogContext","component","Dialog","stateReducer","match","DialogRenderFeatures","DialogRoot","forwardRefWithAs","open","onClose","rest","nestedDialogCount","setNestedDialogCount","usesOpenClosedState","useOpenClosed","State","internalDialogRef","dialogRef","useSyncRefs","hasOpen","hasOnClose","dialogState","visible","useReducer","descriptionId","dispatch","close","setTitleId","enabled","hasNestedDialogs","hasParentDialog","position","parent","FocusTrapFeatures","leaf","child","interactable","useInertOthers","overflow","paddingRight","scrollbarWidth","observer","IntersectionObserver","entries","entry","describedby","DescriptionProvider","Open","ref","role","onKeyDown","message","count","React","Overlay","overlayRef","handleClick","isDisabledReactIssue7711","Object","Section","showChildren","noDataText","_ref","QuickOverview","setShow","product","availableColors","class","selectedClass","selectedColor","setSelectedColor","availableSizes","inStock","selectedSize","setSelectedSize","Root","fontSize","Child","images","src","url","alt","productName","price","rating","href","reviews","color","Option","background","code","checked","fullWidth","Product","showWhoPurchased","purchasedBy","loadingFriends","quickOverviewModal","setQuickOverviewModal","dropdownList","friend","links","getProfileById","profileUrl","other","template","fullName","coverPicture","_id","getProductUrl","options","propsRef","radio","RadioGroupContext","useRadioGroupContext","RadioGroup","labelledby","LabelProvider","radioGroupRef","firstOption","option","containsCheckedOption","triggerChange","nextValue","nextOption","useTreeWalker","accept","node","NodeFilter","walk","handleKeyDown","all","activeOption","registerOption","RegisterOption","api","change","OptionState","optionRef","initialFlags","flags","setFlags","addFlag","hasFlag","removeFlag","toggleFlag","useFlags","radioGroupDisabled","radioGroupValue","handleFocus","handleBlur","isFirstOption","isDisabled","tabIndex","undefined","onFocus","onBlur","text","BannerImage","onImageSelect","media","setMedia","bannerRef","backgroundImage","URL","createObjectURL","current","click","memo","ListProducts","userId","onLoad","useQuery","fetchAllProducts","data","isFetched","isSuccess","products","OpenStore","userData","upload","useMutation","uploadMediaToServer","onSuccess","a","b","values","formRef","finalInput","bannerImage","location","selectedProducts","mutate","storeData","setSelectedProducts","openStore","creatingStore","history","useHistory","push","validationSchema","Yup","buttonLabel","min","max","buttonLink","customMaxWidth","pageTitle","initialValues","innerRef","onSubmit","fd","FormData","append","setFieldValue","files","rounded","loading"],"mappings":"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","file":"static/js/20.57c130ef.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str\n      .split(' ')\n      .filter(\n        (tags) =>\n          tags !== 'in' ||\n          tags !== 'or' ||\n          tags !== 'of' ||\n          tags !== 'the' ||\n          tags !== 'is' ||\n          tags !== 'can' ||\n          tags !== 'so' ||\n          tags !== '.' ||\n          tags !== 'to'\n      )\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","import React from 'react'\n\nconst Title = ({\n  className,\n  children,\n  size = 'text-3xl',\n  fontWeight = 'font-semibld',\n  textColor = 'text-gray-900 dark:text-white',\n  isLoading = false,\n}: {\n  className?: string\n  size?: string\n  isLoading?: boolean\n  textColor?: string\n  fontWeight?: string\n  children: React.ReactNode\n}) => {\n  if (isLoading) {\n    return (\n      <div\n        className={`h-4 animate-pulse bg-gray-400 rounded ${className} ${size} ${fontWeight} ${textColor}`}\n      ></div>\n    )\n  }\n  return (\n    <h1 className={`${className} ${size} ${fontWeight} ${textColor}`}>\n      {children}\n    </h1>\n  )\n}\n\nexport default Title\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","const SectionTitle = ({\n  title,\n  gradient = true,\n  className,\n}: {\n  title: string\n  gradient?: boolean\n  className?: string\n}) => {\n  return (\n    <h2\n      className={`${className} text-2xl mb-6 font-extrabold ${\n        gradient ? 'gradient-border' : ''\n      } border-b pb-2 tracking-tight\n         dark:text-white text-gray-900`}\n    >\n      {title}\n    </h2>\n  )\n}\n\nexport default SectionTitle\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n  useEffect,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from './use-window-event'\nimport { useIsMounted } from './use-is-mounted'\n\nexport enum Features {\n  /** No features enabled for the `useFocusTrap` hook. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the component that uses this `useFocusTrap` hook. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport function useFocusTrap(\n  container: MutableRefObject<HTMLElement | null>,\n  features: Features = Features.All,\n  {\n    initialFocus,\n    containers,\n  }: {\n    initialFocus?: MutableRefObject<HTMLElement | null>\n    containers?: MutableRefObject<Set<MutableRefObject<HTMLElement | null>>>\n  } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useIsMounted()\n\n  let featuresRestoreFocus = Boolean(features & Features.RestoreFocus)\n  let featuresInitialFocus = Boolean(features & Features.InitialFocus)\n\n  // Capture the currently focused element, before we enable the focus trap.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    restoreElement.current = document.activeElement as HTMLElement\n  }, [featuresRestoreFocus])\n\n  // Restore the focus when we unmount the component.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    return () => {\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n    }\n  }, [featuresRestoreFocus])\n\n  // Handle initial focus\n  useEffect(() => {\n    if (!featuresInitialFocus) return\n    if (!container.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus?.current) {\n      if (initialFocus?.current === activeElement) {\n        previousActiveElement.current = activeElement\n        return // Initial focus ref is already the active element\n      }\n    } else if (container.current.contains(activeElement)) {\n      previousActiveElement.current = activeElement\n      return // Already focused within Dialog\n    }\n\n    // Try to focus the initialFocus ref\n    if (initialFocus?.current) {\n      focusElement(initialFocus.current)\n    } else {\n      if (focusIn(container.current, Focus.First) === FocusResult.Error) {\n        throw new Error('There are no focusable elements inside the <FocusTrap />')\n      }\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n  }, [container, initialFocus, featuresInitialFocus])\n\n  // Handle `Tab` & `Shift+Tab` keyboard events\n  useWindowEvent('keydown', event => {\n    if (!(features & Features.TabLock)) return\n\n    if (!container.current) return\n    if (event.key !== Keys.Tab) return\n\n    event.preventDefault()\n\n    if (\n      focusIn(\n        container.current,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      ) === FocusResult.Success\n    ) {\n      previousActiveElement.current = document.activeElement as HTMLElement\n    }\n  })\n\n  // Prevent programmatically escaping the container\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!(features & Features.FocusLock)) return\n\n      let allContainers = new Set(containers?.current)\n      allContainers.add(container)\n\n      if (!allContainers.size) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n\nfunction contains(containers: Set<MutableRefObject<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.current?.contains(element)) return true\n  }\n\n  return false\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n\n  // Types\n  MutableRefObject,\n  ReactNode,\n} from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (\n  message: StackMessage,\n  type: string,\n  element: MutableRefObject<HTMLElement | null>\n) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n  type,\n  element,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n  type: string\n  element: MutableRefObject<HTMLElement | null>\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  useIsoMorphicEffect(() => {\n    notify(StackMessage.Add, type, element)\n    return () => notify(StackMessage.Remove, type, element)\n  }, [notify, type, element])\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MutableRefObject,\n  Ref,\n  useState,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open?: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n  let [nestedDialogCount, setNestedDialogCount] = useState(0)\n\n  let usesOpenClosedState = useOpenClosed()\n  if (open === undefined && usesOpenClosedState !== null) {\n    // Update the `open` prop based on the open closed state\n    open = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  let containers = useRef<Set<MutableRefObject<HTMLElement | null>>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return dialogState === DialogStates.Open\n  })()\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  let ready = useServerHandoffComplete()\n  let enabled = ready && dialogState === DialogStates.Open\n  let hasNestedDialogs = nestedDialogCount > 1 // 1 is the current dialog\n  let hasParentDialog = useContext(DialogContext) !== null\n\n  // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n  let position = !hasNestedDialogs ? 'leaf' : 'parent'\n\n  useFocusTrap(\n    internalDialogRef,\n    enabled\n      ? match(position, {\n          parent: FocusTrapFeatures.RestoreFocus,\n          leaf: FocusTrapFeatures.All,\n        })\n      : FocusTrapFeatures.None,\n    { initialFocus, containers }\n  )\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false)\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    if (internalDialogRef.current?.contains(target)) return\n\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (hasParentDialog) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState, hasParentDialog])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n\n    // Handle `Escape` to close\n    onKeyDown(event: ReactKeyboardEvent) {\n      if (event.key !== Keys.Escape) return\n      if (dialogState !== DialogStates.Open) return\n      if (hasNestedDialogs) return\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      type=\"Dialog\"\n      element={internalDialogRef}\n      onUpdate={useCallback((message, type, element) => {\n        if (type !== 'Dialog') return\n\n        match(message, {\n          [StackMessage.Add]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count + 1)\n          },\n          [StackMessage.Remove]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count - 1)\n          },\n        })\n      }, [])}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","import SectionTitle from 'components/atoms/SectionTitle'\nimport { LegacyRef } from 'react'\n\nconst Section = ({\n  children,\n  title = '',\n  showChildren,\n  // @ts-ignore\n  noDataText = '',\n  _ref,\n}: {\n  _ref?: LegacyRef<HTMLDivElement> | undefined\n  showChildren?: boolean\n  children: React.ReactNode\n  title?: string\n  noDataText?: string\n}) => {\n  return (\n    <div ref={_ref} className=\"py-16 \">\n      {title && <h2 className=\"sr-only\">{title}</h2>}\n      {title && <SectionTitle title={title} />}\n\n      {showChildren ? (\n        <div className=\" grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n          {children}\n        </div>\n      ) : (\n        <p className=\"text-xl font-light mt-8 tracking-tight dark:text-gray-400 text-gray-900\">\n          {/* eslint-disable-next-line quotes */}\n          {noDataText || \"Uh oh! We coudn't find any products for this user\"}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","import { Dialog, RadioGroup, Transition } from '@headlessui/react'\nimport { StarIcon, XIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport React, { Fragment, useState } from 'react'\nimport { classNames } from 'utils/classNames'\n\nconst QuickOverview = ({ show, setShow, product }: any) => {\n  const [selectedColor, setSelectedColor] = useState(\n    product\n      ? product.availableColors[0]\n      : { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' }\n  )\n  const [selectedSize, setSelectedSize] = useState(\n    product ? product.availableSizes[1] : { name: 'XXS', inStock: false }\n  )\n\n  return (\n    <Transition.Root show={show} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        onClose={setShow}\n      >\n        <div\n          className=\"pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0\"\n          style={{ fontSize: 0 }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden md:inline-block md:align-middle md:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 md:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 md:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n          >\n            <div className=\"flex text-base  text-left transform transition w-full md:inline-block md:max-w-2xl md:px-4 md:my-8 md:align-middle lg:max-w-4xl\">\n              <div className=\"w-full relative flex items-center bg-white dark:bg-gray-900 px-4 pt-14 pb-8 overflow-hidden shadow-2xl sm:px-6 sm:pt-8 md:p-6 lg:p-8\">\n                <button\n                  type=\"button\"\n                  className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-500 sm:top-8 sm:right-6 md:top-6 md:right-6 lg:top-8 lg:right-8\"\n                  onClick={() => setShow(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <div className=\"w-full grid grid-cols-1 gap-y-8 gap-x-6 items-start sm:grid-cols-12 lg:gap-x-8\">\n                  <div className=\"aspect-w-2 aspect-h-3 rounded-lg bg-gray-100 dark:bg-gray-700 overflow-hidden sm:col-span-4 lg:col-span-5\">\n                    {product?.images?.length > 0 ? (\n                      <img\n                        src={product.images[0].url}\n                        alt={product.images[0].alt}\n                        className=\"object-center object-cover\"\n                      />\n                    ) : (\n                      <div />\n                    )}\n                  </div>\n                  <div className=\"sm:col-span-8 lg:col-span-7\">\n                    <h2 className=\"text-2xl font-extrabold dark:text-white text-gray-900 sm:pr-12\">\n                      {product.productName}\n                    </h2>\n\n                    <section\n                      aria-labelledby=\"information-heading\"\n                      className=\"mt-2\"\n                    >\n                      <h3 id=\"information-heading\" className=\"sr-only\">\n                        Product information\n                      </h3>\n\n                      <p className=\"text-2xl text-gray-900 dark:text-white\">\n                        ${product.price}\n                      </p>\n\n                      {/* Reviews */}\n                      <div className=\"mt-6\">\n                        <h4 className=\"sr-only\">Reviews</h4>\n                        <div className=\"flex items-center\">\n                          <div className=\"flex items-center\">\n                            {[0, 1, 2, 3, 4].map((rating) => (\n                              <StarIcon\n                                key={rating}\n                                className={classNames(\n                                  4 > rating\n                                    ? 'text-yellow-500'\n                                    : 'text-gray-200',\n                                  'h-5 w-5 flex-shrink-0'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ))}\n                          </div>\n                          <p className=\"sr-only\">\n                            {product.rating} out of 5 stars\n                          </p>\n                          <a\n                            href=\"#/\"\n                            className=\"ml-3 text-sm font-medium gradient-text\"\n                          >\n                            {product?.reviews?.length} reviews\n                          </a>\n                        </div>\n                      </div>\n                    </section>\n\n                    <section\n                      aria-labelledby=\"options-heading\"\n                      className=\"mt-10\"\n                    >\n                      <h3 id=\"options-heading\" className=\"sr-only\">\n                        Product options\n                      </h3>\n\n                      <form>\n                        {/* Colors */}\n                        {product?.availableColors &&\n                          product?.availableColors?.length > 0 && (\n                            <div>\n                              <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                Color\n                              </h4>\n\n                              <RadioGroup\n                                value={selectedColor}\n                                onChange={setSelectedColor}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a color\n                                </RadioGroup.Label>\n                                <div className=\"flex items-center space-x-3\">\n                                  {product.availableColors.map((color: any) => (\n                                    <RadioGroup.Option\n                                      key={color.name}\n                                      value={color}\n                                      style={{ background: color.code }}\n                                      className={({ active, checked }) =>\n                                        classNames(\n                                          active && checked\n                                            ? 'ring ring-offset-1'\n                                            : '',\n                                          !active && checked ? 'ring-2' : '',\n                                          '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                                        )\n                                      }\n                                    >\n                                      <RadioGroup.Label\n                                        as=\"p\"\n                                        className=\"sr-only\"\n                                      >\n                                        {color.name}\n                                      </RadioGroup.Label>\n                                      <span\n                                        aria-hidden=\"true\"\n                                        className={classNames(\n                                          color.class,\n                                          'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                                        )}\n                                      />\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        {/* Sizes */}\n                        {product?.availableSizes &&\n                          product?.availableSizes?.length > 0 && (\n                            <div className=\"mt-10\">\n                              <div className=\"flex items-center justify-between\">\n                                <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                  Size\n                                </h4>\n                                <a\n                                  href=\"#/\"\n                                  className=\"text-sm font-medium gradient-text \"\n                                >\n                                  Size guide\n                                </a>\n                              </div>\n\n                              <RadioGroup\n                                value={selectedSize}\n                                onChange={setSelectedSize}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a size\n                                </RadioGroup.Label>\n                                <div className=\"grid grid-cols-4 gap-4\">\n                                  {product.availableSizes.map((size: any) => (\n                                    <RadioGroup.Option\n                                      key={size.name}\n                                      value={size}\n                                      // disabled={!size.inStock}\n                                      className={({ active }) =>\n                                        classNames(\n                                          'bg-gray-50 text-gray-200 cursor-not-allowed',\n                                          active\n                                            ? 'ring-2 ring-indigo-500'\n                                            : '',\n                                          'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1'\n                                        )\n                                      }\n                                    >\n                                      {({ active, checked }) => (\n                                        <>\n                                          <RadioGroup.Label as=\"p\">\n                                            {size.name}\n                                          </RadioGroup.Label>\n                                          <div\n                                            className={classNames(\n                                              active ? 'border' : 'border-2',\n                                              checked\n                                                ? 'border-indigo-500'\n                                                : 'border-transparent',\n                                              'absolute -inset-px rounded-md pointer-events-none'\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                        </>\n                                      )}\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        <Button\n                          size=\"xl\"\n                          className=\"mt-10\"\n                          fullWidth\n                          gradient\n                          label=\"Add to bag\"\n                        />\n                      </form>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default QuickOverview\n","import Dropdown from 'components/Dropdown/Dropdown'\nimport { links } from 'constants/Links'\nimport { IProduct, IShortProfile } from 'interfaces/UniversalInterface'\nimport QuickOverview from 'pages/products/QuickOverview'\nimport { useState } from 'react'\nimport { eclipse } from 'utils/functions'\n\nconst Product = ({\n  product,\n  showWhoPurchased = false,\n  purchasedBy,\n  loadingFriends,\n}: {\n  loadingFriends?: boolean\n  product: IProduct\n  showWhoPurchased?: boolean\n  purchasedBy?: IShortProfile[]\n}) => {\n  const [quickOverviewModal, setQuickOverviewModal] = useState(false)\n\n  const dropdownList = [\n    {\n      id: '1',\n      name: 'Add to bag',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '2',\n      name: 'Add to favorites',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '3',\n      name: 'Quick Overview',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n  ]\n\n  return (\n    <>\n      <QuickOverview\n        product={product}\n        show={quickOverviewModal}\n        setShow={setQuickOverviewModal}\n      />\n      <div className=\"group\">\n        {showWhoPurchased && !loadingFriends && (\n          <div className=\"mb-2 cursor-pointer \">\n            <div className=\"flex overflow-hidden -space-x-1\">\n              {purchasedBy.map((friend) => (\n                <a\n                  href={links.getProfileById(\n                    friend.profileUrl,\n                    friend?.other?.template,\n                    'private'\n                  )}\n                >\n                  <img\n                    title={friend.fullName}\n                    key={friend._id}\n                    className=\"inline-block h-8 w-8 rounded-full ring-2 ring-white dark:ring-gray-800\"\n                    src={friend.coverPicture}\n                    alt={''}\n                  />\n                </a>\n              ))}\n            </div>\n          </div>\n        )}\n        <a\n          key={product._id}\n          href={`${links.getProductUrl(product._id)}`}\n          className=\"group\"\n        >\n          <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n            {product?.images?.length > 0 ? (\n              <img\n                src={product.images[0].url}\n                alt={product.images[0].alt}\n                className=\"w-full h-full object-center object-cover group-hover:opacity-75 transition-all\"\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        </a>\n        <div className=\"flex mt-4 items-start justify-between\">\n          <div>\n            <h3 className=\" text-sm  text-gray-700 dark:text-gray-400\">\n              {eclipse(product.productName, 60)}\n            </h3>\n            <p className=\"mt-1 text-lg font-medium dark:text-white text-gray-900\">\n              ${product.price}\n            </p>\n          </div>\n          <div>\n            <Dropdown list={dropdownList} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Product\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","const Label = ({ text, className }: { text: string; className?: string }) => {\n  return (\n    <label\n      className={`block dark:text-white text-sm font-medium text-gray-700 ${className}`}\n    >\n      {text}{' '}\n    </label>\n  )\n}\n\nexport default Label\n","import placeholder from 'assets/svg/placeholder.png'\nimport React, { useRef } from 'react'\n\nconst BannerImage = ({ onImageSelect, media, setMedia }: any) => {\n  const bannerRef = useRef()\n\n  const openFileExplorer = () =>\n    //@ts-ignore\n    bannerRef?.current?.click()\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${\n          media ? URL.createObjectURL(media) : placeholder\n        })`,\n      }}\n      className=\"h-96 bg-center flex items-center justify-center bg-no-repeat bg-cover shadow-xl rounded-xl w-full border border-gray-200 dark:border-gray-700\"\n    >\n      <input\n        ref={bannerRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, setMedia)}\n        accept={'image/x-png,image/jpeg'}\n      />\n      <h1\n        onClick={openFileExplorer}\n        className=\"text-3xl font-bold  transition-all cursor-pointer bg-transparent hover:bg-white px-2 py-2 hover:text-gray-700 text-white\"\n      >\n        {media ? 'Change' : '+ Choose'} Banner Image\n      </h1>\n    </div>\n  )\n}\n\nexport default React.memo(BannerImage)\n","import { openStore, uploadMediaToServer } from 'apis/mutations'\nimport { fetchAllProducts } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Label from 'components/atoms/Label'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Section from 'components/atoms/products/Section'\nimport Title from 'components/atoms/Title'\nimport Spinner from 'components/Spinner'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { Form, Formik } from 'formik'\nimport { IParent, IProduct, IStore } from 'interfaces/UniversalInterface'\nimport Product from 'pages/products/Product'\nimport BannerImage from 'pages/store/BannerImage'\nimport { useEffect, useRef, useState } from 'react'\nimport { useMutation, useQuery } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst ListProducts = ({ userId, onLoad }: { userId: string; onLoad: any }) => {\n  const { isLoading, data, isFetched, isSuccess } = useQuery(\n    'list-all-my-products',\n    () => fetchAllProducts(userId)\n  )\n  const products: IProduct[] = isFetched && !isLoading && data.data.data\n\n  if (isSuccess && products.length > 0) {\n    if (onLoad) {\n      onLoad(products)\n    }\n  }\n\n  return (\n    <Section showChildren>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        products &&\n        products.length > 0 &&\n        products.map((product) => (\n          <Product key={product._id} product={product} />\n        ))\n      )}\n    </Section>\n  )\n}\n\nconst OpenStore = ({ userData }: { userData: IParent }) => {\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a, b) => {\n      // @ts-ignore\n      const values = formRef?.current?.values\n      if (formRef?.current && values) {\n        const finalInput = {\n          bannerImage: a.data.data.location,\n          products: selectedProducts,\n          ...values,\n        }\n\n        mutate({ storeData: finalInput })\n      }\n    },\n  })\n\n  const [selectedProducts, setSelectedProducts] = useState<IProduct[]>([])\n\n  const {\n    isLoading: creatingStore,\n\n    mutate,\n    isSuccess,\n  } = useMutation(openStore)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isSuccess) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1,\n          'private'\n        )\n      )\n    }\n  }, [isSuccess])\n\n  const onSubmit = (e: any) => {\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const onImageSelect = (e: any, setFieldValue: any) => {\n    const img = e.target.files[0]\n\n    setFieldValue(img)\n  }\n\n  const validationSchema = Yup.object({\n    buttonLabel: Yup.string()\n      .required('Button label is required')\n      .min(3)\n      .max(150),\n    buttonLink: Yup.string()\n      // .test(regex)\n      .required('Button link is required')\n      .min(5)\n      .max(150),\n  })\n\n  // @ts-ignore\n  const initialValues: IStore = {\n    buttonLabel: '',\n    buttonLink: '',\n  }\n  const formRef = useRef()\n\n  const [media, setMedia] = useState()\n\n  return (\n    <NarrowLayout customMaxWidth=\"max-w-7xl\" userData={userData}>\n      <Meta pageTitle={`Open Store | 13RMS`} />\n      <Title fontWeight=\"font-bold mb-8\">Open store</Title>\n\n      <Formik\n        initialValues={initialValues}\n        innerRef={formRef}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"my-4 flex flex-col gap-y-12\">\n          <div className=\"grid grid-cols-1 gap-y-12\">\n            <div>\n              <Label text=\"Banner Image\" />\n              <BannerImage\n                media={media}\n                setMedia={setMedia}\n                onImageSelect={onImageSelect}\n              />\n            </div>\n            <div>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-12\">\n                <div>\n                  <Label text=\"Button label\" />\n                  <FormInput\n                    info=\"The name of button\"\n                    name=\"buttonLabel\"\n                    placeholder=\"Discover\"\n                  />\n                </div>\n                <div>\n                  <Label text=\"Button link\" />\n                  <FormInput\n                    name=\"buttonLink\"\n                    info=\"Link of button\"\n                    placeholder=\"www.myshoppingsite.com\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <Label text=\"Select product\" />\n              <ListProducts\n                onLoad={(products: IProduct[]) => setSelectedProducts(products)}\n                userId={userData._id}\n              />\n              <div>\n                <div className=\"flex items-center justify-end\">\n                  <Button\n                    // onClick={onSubmit}\n                    type=\"submit\"\n                    rounded=\"rounded-lg\"\n                    loading={creatingStore || upload.isLoading}\n                    gradient\n                    size=\"lg\"\n                    label=\"Create store\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default OpenStore\n"],"sourceRoot":""}
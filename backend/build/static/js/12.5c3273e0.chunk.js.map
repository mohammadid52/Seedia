{"version":3,"sources":["pages/account/personal/LastPersonalStep.jsx"],"names":["LastStep","useState","isLoaded","setIsLoaded","history","useHistory","useForm","country","pincode","location_within_area","id","name","fields","onChange","errors","setFields","setErrors","saving","setSaving","validateForm","isValid","trimmedLen","field","trim","length","setTimeout","className","src","alt","label","required","type","error","value","list","selectedItem","onSelect","item","onClick","wait","then","push","fullWidth","rounded","gradient","loading","size"],"mappings":"6MAgLeA,UAtKE,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACdC,EADc,KACJC,EADI,KAEfC,EAAUC,cAFK,EAoBsCC,YAZpC,CACrBC,QAAS,GACTC,QAAS,GACTC,qBAAsB,CAAEC,GAAI,GAAIC,KAAM,KAGX,CAC3BJ,QAAS,GACTC,QAAS,GACTC,qBAAsB,KAGhBG,EApBa,EAoBbA,OAAQC,EApBK,EAoBLA,SAAUC,EApBL,EAoBKA,OAAQC,EApBb,EAoBaA,UAAWC,EApBxB,EAoBwBA,UApBxB,EAwBOf,oBAAS,GAxBhB,mBAwBdgB,EAxBc,KAwBNC,EAxBM,KAsCfC,EAAe,WACnB,IAAIC,GAAU,EAERC,EAAa,SAACC,GAAD,OAAWV,EAAOU,GAAOC,OAAOC,QA2BnD,OAzBIH,EAAW,YAAc,GAC3BD,GAAU,EACVN,EAAOP,QAAU,wBAEjBa,GAAU,EACVN,EAAOP,QAAU,IAGfc,EAAW,WAAa,GAC1BD,GAAU,EACVN,EAAON,QAAU,qBAEjBY,GAAU,EACVN,EAAON,QAAU,IAUnBQ,EAAU,eAAKF,IAERM,GAGTK,YAAW,WACTtB,GAAY,KACX,KAMH,OAAQD,EAGN,sBAAKwB,UAAU,4EAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,sBACVC,IAA8B,YAC9BC,IAAI,aAEN,oBAAIF,UAAU,yDAAd,gCAGA,mBAAGA,UAAU,yCAAb,mGAMF,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,sDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACEG,MAAM,mBACNnB,GAAG,UACHC,KAAK,UACLE,SAAUA,EACViB,UAAQ,EACRC,KAAK,OACLC,MAAOlB,EAAOP,QACd0B,MAAOrB,EAAOL,UAGhB,cAAC,IAAD,CACEsB,MAAM,cACNnB,GAAG,UACHC,KAAK,UACLE,SAAUA,EACVmB,MAAOlB,EAAON,QACdsB,UAAQ,EACRG,MAAOrB,EAAOJ,UAEhB,qBAAKkB,UAAU,OAAf,SACE,cAAC,IAAD,CACEG,MAAO,4BACPK,KAtHO,CAAC,CAAExB,GAAI,EAAGC,KAAM,UAuHvBwB,aACEvB,EAAOH,qBAAqBC,GACxBE,EAAOH,qBACP,CAAEC,GAAI,EAAGC,KAAM,eAErByB,SAAU,SAACC,GAAD,OACRtB,EAAU,2BACLH,GADI,IAEPH,qBAAsB,CAAEC,GAAI2B,EAAK3B,GAAIC,KAAM0B,EAAK1B,cAMxD,8BACE,cAAC,IAAD,CACE2B,QAnHG,WACCnB,MAEdD,GAAU,GACVqB,YAAK,KAAMC,MAAK,WAEd,OADAtB,GAAU,GACHd,EAAQqC,KAAK,mBA8GZC,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRC,QAAS5B,EACTY,MAAM,yBAKd,qBAAKH,UAAU,OAAf,SACE,cAAC,IAAD,CACEY,QA9EK,WACblC,EAAQqC,KAAK,2CA8ELE,QAAQ,aACRC,UAAQ,EACRE,KAAK,KACLjB,MAAM,iBAIZ,cAAC,IAAD,OAjFF,cAAC,IAAD","file":"static/js/12.5c3273e0.chunk.js","sourcesContent":["import Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport Copyright from 'components/Copyright'\nimport Loading from 'components/Loading'\nimport useForm from 'hooks/useForm'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\n\nconst LastStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n\n  //capture inputs\n\n  const locationList = [{ id: 1, name: 'India' }]\n\n  const INITIAL_FIELDS = {\n    country: '',\n    pincode: '',\n    location_within_area: { id: '', name: '' },\n  }\n\n  const ERROR_INITIAL_FIELDS = {\n    country: '',\n    pincode: '',\n    location_within_area: '',\n  }\n\n  const { fields, onChange, errors, setFields, setErrors } = useForm(\n    INITIAL_FIELDS,\n    ERROR_INITIAL_FIELDS\n  )\n  const [saving, setSaving] = useState(false)\n\n  const nextStep = () => {\n    const isValid = validateForm()\n    if (isValid) {\n      setSaving(true)\n      wait(3000).then(() => {\n        setSaving(false)\n        return history.push('/dashboard')\n      })\n    } else {\n    }\n  }\n\n  const validateForm = () => {\n    let isValid = true\n\n    const trimmedLen = (field) => fields[field].trim().length\n\n    if (trimmedLen('country') <= 0) {\n      isValid = false\n      errors.country = 'Please add country.'\n    } else {\n      isValid = true\n      errors.country = ''\n    }\n\n    if (trimmedLen('pincode') < 6) {\n      isValid = false\n      errors.pincode = 'Invalid pincode.'\n    } else {\n      isValid = true\n      errors.pincode = ''\n    }\n    // if (trimmedLen('location_within_area') <= 0) {\n    //   isValid = false\n    //   errors.location_within_area = ''\n    // } else {\n    //   isValid = true\n    //   errors.location_within_area = 'This field is important.'\n    // }\n\n    setErrors({ ...errors })\n\n    return isValid\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const goBack = () => {\n    history.push('/account/personal/edit-profile/company')\n  }\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Welcome, Mohammad!\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\n          <div className=\"space-y-6\">\n            <FormInput\n              label=\"Country / region\"\n              id=\"country\"\n              name=\"country\"\n              onChange={onChange}\n              required\n              type=\"text\"\n              error={errors.country}\n              value={fields.country}\n            />\n\n            <FormInput\n              label=\"Postal Code\"\n              id=\"pincode\"\n              name=\"pincode\"\n              onChange={onChange}\n              error={errors.pincode}\n              required\n              value={fields.pincode}\n            />\n            <div className=\"mt-6\">\n              <Selector\n                label={'Location within this area'}\n                list={locationList}\n                selectedItem={\n                  fields.location_within_area.id\n                    ? fields.location_within_area\n                    : { id: 0, name: 'Select area' }\n                }\n                onSelect={(item) =>\n                  setFields({\n                    ...fields,\n                    location_within_area: { id: item.id, name: item.name },\n                  })\n                }\n              />\n            </div>\n\n            <div>\n              <Button\n                onClick={nextStep}\n                fullWidth\n                rounded=\"rounded-lg\"\n                gradient\n                loading={saving}\n                label=\"Finish Submit\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"my-4\">\n          <Button\n            onClick={goBack}\n            rounded=\"rounded-lg\"\n            gradient\n            size=\"sm\"\n            label=\"Go back\"\n          />\n        </div>\n      </div>\n      <Copyright />\n    </div>\n  )\n}\n\nexport default LastStep\n"],"sourceRoot":""}
{"version":3,"sources":["utils/functions/index.js","hooks/useUser.ts","pages/request/RequestView.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","TopCard","websiteUrl","views","followingList","useFollow","following","addFollow","removeFollow","className","content","src","profilePicture","avatarPlaceholder","alt","fullName","location","address","city","country","email","onClick","mutate","invert","label","gradient","size","link","RequestView","requestId","useParams","fetchSellerById","requestData","user","customParentMaxWidth","customMaxWidth","pageUrl","window","href","imageUrl","pageTitle","title","description","keywords","skills"],"mappings":"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","file":"static/js/55.7ef0a06c.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","import { fetchSellerById } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Loading from 'components/Loading'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useFollow from 'hooks/useFollow'\nimport useUser from 'hooks/useUser'\nimport { IParent, IRequest } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { getTags } from 'utils/functions'\n\nconst TopCard = ({\n  userData,\n  iAmOwnerOfThisProfile,\n  websiteUrl,\n  views = 0,\n  followingList,\n}: {\n  userData?: IParent\n  iAmOwnerOfThisProfile: boolean\n\n  websiteUrl?: string\n  views?: number\n  followingList?: string[]\n}) => {\n  const { following, addFollow, removeFollow } = useFollow(\n    followingList,\n    userData._id\n  )\n\n  return (\n    <div>\n      <Card\n        className=\"p-6 \"\n        content={\n          <>\n            <div className=\"flex relative items-center justify-between\">\n              {iAmOwnerOfThisProfile && (\n                <span className=\"dark:text-gray-400 text-gray-400 italic text-sm absolute top-0 right-0 \">\n                  View count: {views}\n                </span>\n              )}\n              <div className=\"flex items-center space-x-12\">\n                <div className=\"\">\n                  <span className=\"sr-only\">13RMS</span>\n                  <img\n                    className=\"h-36 w-36 sm:h-36 sm:w-36 cursor-pointer rounded-full shadow-xl\"\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : avatarPlaceholder\n                    }\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"space-y-1\">\n                  <h1 className=\"text-2xl leading-6 font-semibold dark:text-white text-gray-900\">\n                    {userData?.fullName}\n                  </h1>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.location.address || ''},{' '}\n                    {userData?.location.city}, {userData?.location.country}\n                  </h5>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.email}\n                  </h5>\n                </div>\n              </div>\n              <div className=\"absolute bottom-0 right-0\">\n                {!iAmOwnerOfThisProfile ? (\n                  <div className=\"grid grid-cols-2 gap-x-4\">\n                    <Button\n                      onClick={() =>\n                        following\n                          ? removeFollow.mutate(userData._id)\n                          : addFollow.mutate(userData._id)\n                      }\n                      invert={following}\n                      label={following ? 'Following' : 'Follow'}\n                      gradient\n                      size=\"lg\"\n                      className=\"px-6\"\n                    />\n                    <Button\n                      label=\"Contact\"\n                      link={websiteUrl}\n                      gradient\n                      className=\"px-6\"\n                      size=\"lg\"\n                    />\n                  </div>\n                ) : (\n                  <span className=\"text-base leading-6 font-light  dark:text-gray-400 text-gray-600\">\n                    Others will see buttons here\n                  </span>\n                )}\n              </div>\n            </div>\n          </>\n        }\n      />\n    </div>\n  )\n}\n\nconst RequestView = ({ userData }: { userData?: IParent }) => {\n  const params: any = useParams()\n  const requestId = params.requestId\n\n  const { isLoading, data, isFetched } = useQuery('request-view', () =>\n    fetchSellerById(requestId)\n  )\n  const requestData: IRequest = isFetched && !isLoading ? data.data.data : {}\n\n  const { iAmOwnerOfThisProfile } = useUser(\n    requestData?.user?.profileUrl,\n    userData,\n    false\n  )\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  const { user } = requestData\n\n  return (\n    <NarrowLayout\n      userData={userData}\n      customParentMaxWidth=\"max-w-360 relative\"\n      customMaxWidth=\"max-w-360\"\n    >\n      <Meta\n        pageUrl={window.location.href}\n        imageUrl={user && user.profilePicture}\n        pageTitle={`${requestData.title} | 13RMS `}\n        title={requestData.title}\n        description={requestData.description}\n        keywords={getTags(\n          `${requestData.description} ${\n            requestData.title\n          } ${requestData.skills.join('')}`\n        )}\n        // userName={''}\n      />\n      <div className=\"flex flex-col gap-y-12\">\n        <TopCard\n          followingList={userData?.following || []}\n          views={requestData.views}\n          iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n          userData={user}\n        />\n        <Card\n          content={\n            <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n              <div className=\"sm:col-span-2\">\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  Description\n                </h1>\n                <div className=\"whitespace-pre-line\">\n                  {requestData.description}\n                </div>\n                <br />\n              </div>\n            </div>\n          }\n        />\n        {/* <Card\n          content={\n            <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n              <div className=\"sm:col-span-2\">\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  About the company\n                </h1>\n                <div>\n                  <div className=\"sm:flex items-center\">\n                    <div className=\"mb-4 flex-shrink-0 sm:mb-0 sm:mr-4\">\n                      <img\n                        className=\"h-12 w-12  cursor-pointer  shadow-xl\"\n                        src={\n                          company?.profilePicture\n                            ? company?.profilePicture\n                            : avatarPlaceholder\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                    <h4 className=\"text-lg font-bold\">{business?.name}</h4>\n                  </div>\n                  <div className=\"mt-4\">\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {background?.summary || 'Test summary'}\n                    </p>\n                    <br />\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {business?.additionalInfo || 'Additional Info'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  Company Details\n                </h1>\n                <DescriptionItem name={'Company Size'} value={'100'} />\n                <DescriptionItem\n                  name={'Type of business'}\n                  value={business.typeOfBusiness}\n                />\n                <DescriptionItem name={'Year of foundation'} value={'2007'} />\n                <DescriptionItem\n                  valueClassName=\"underline cursor-pointer tracking-wider\"\n                  name={'Website'}\n                  value={project.website}\n                />\n              </div>\n            </div>\n          }\n        /> */}\n      </div>\n    </NarrowLayout>\n  )\n}\n\nexport default RequestView\n"],"sourceRoot":""}
{"version":3,"sources":["utils/functions/index.js","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","../node_modules/lodash/map.js","components/atoms/NormalFormInput.tsx","components/alerts/Error.tsx","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","components/atoms/Title.tsx","components/atoms/FormSelector.tsx","components/atoms/FormMultipleSelector.tsx","components/List.tsx","components/atoms/FormTagsInput.tsx","pages/products/AddProduct.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","onClick","arrayMap","require","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","NormalFormInput","fullWidth","autoComplete","success","props","onKeyDown","onKeyPress","onKeyUp","Error","errors","idx","baseEach","isArrayLike","index","result","Array","baseForOwn","createBaseEach","eachFunc","fromRight","iterable","Object","Title","children","size","fontWeight","textColor","isLoading","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","open","Label","Button","onBlur","as","Fragment","Options","static","item","Option","hasOwnProperty","active","classNames","selected","FormMultipleSelector","sortBy","defaultItem","disableFieldOption","disable","setDisable","values","setValues","find","remove","push","prev","checked","orderBy","code","style","backgroundColor","defaultValue","List","min","max","initialValues","features","setFeatures","useEffect","$setError","featureField","setFeatureField","feature","featureId","f","nanoid","invert","gradient","FormTagsInput","tags","setTags","tagField","setTagField","toLowerCase","bgColor","tagId","AddProduct","profileUrl","number","userData","minMsg","validationSchema","Yup","productName","productDescription","details","price","matches","setNotification","useNotifications","useMutation","addProduct","onSuccess","data","title","buttonText","buttonUrl","links","getProductUrl","mutate","isError","isSuccess","imageList","setImageList","productImageRef","useRef","uploadMultipleImages","finalImageList","img","url","location","isCover","alt","formRef","current","images","imageUploadMutate","imageUploadingLoading","upload","fd","FormData","forEach","image","append","setTimeout","history","useHistory","getProfileById","other","template","onSubmit","a","NarrowLayout","Meta","pageTitle","innerRef","availableColors","availableSizes","estimatedDelivery","highlights","src","URL","createObjectURL","ref","multiple","imgs","files","accept","click","Icon","AiOutlineCamera","colorsList","sizeList","times","toString","rounded","loading"],"mappings":"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","file":"static/js/29.5cb3ee2f.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","import React from 'react'\n\nconst Title = ({\n  className,\n  children,\n  size = 'text-3xl',\n  fontWeight = 'font-semibld',\n  textColor = 'text-gray-900 dark:text-white',\n  isLoading = false,\n}: {\n  className?: string\n  size?: string\n  isLoading?: boolean\n  textColor?: string\n  fontWeight?: string\n  children: React.ReactNode\n}) => {\n  if (isLoading) {\n    return (\n      <div\n        className={`h-4 animate-pulse bg-gray-400 rounded ${className} ${size} ${fontWeight} ${textColor}`}\n      ></div>\n    )\n  }\n  return (\n    <h1 className={`${className} ${size} ${fontWeight} ${textColor}`}>\n      {children}\n    </h1>\n  )\n}\n\nexport default Title\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field?.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field?.value?.length > 0\n                  ? field?.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Listbox, Transition } from '@headlessui/react'\nimport { SelectorIcon } from '@heroicons/react/solid'\nimport { useField } from 'formik'\nimport { orderBy, remove } from 'lodash'\nimport find from 'lodash/find'\nimport map from 'lodash/map'\nimport { Fragment, useState } from 'react'\nimport { AiOutlineCheck } from 'react-icons/ai'\nimport { classNames } from 'utils/classNames'\n\ninterface Item {\n  name: string\n  id?: string | number\n  code?: string\n}\n\ninterface SelecterProps {\n  list: Item[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  onSelect?: (event: any) => void\n  border?: boolean\n  className?: string\n  name: string\n  sortBy?: string\n  disableFieldOption?: boolean\n  defaultItem?: string\n}\n\nconst FormMultipleSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  className = '',\n  onSelect = () => {},\n  border = true,\n  name,\n  sortBy = 'name',\n  defaultItem,\n  disableFieldOption = false,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n  const { setTouched, setError, setValue } = helpers\n  const [disable, setDisable] = useState(disableFieldOption)\n\n  const [values, setValues] = useState<any[]>([])\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    if (!find(values, ['name', selectedOption.name])) {\n      values.push(selectedOption)\n    } else {\n      remove(values, ['name', selectedOption.name])\n    }\n    setValues((prev) => [...prev])\n    setValue(values)\n    setTouched(true)\n    setError(undefined)\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          <div className={'flex items-center space-x-3'}>\n            {label && (\n              <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n                {label}{' '}\n                {required && (\n                  <span className=\"text-red-500 font-medium text-base\">*</span>\n                )}\n              </Listbox.Label>\n            )}\n            {disableFieldOption && (\n              <div className=\"flex items-center h-5\">\n                <input\n                  onChange={(e) => setDisable(!e.target.checked)}\n                  aria-describedby=\"disable-field\"\n                  type=\"checkbox\"\n                  className=\"focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 h-4 w-4 text-yellow-500 border-gray-300 rounded\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div\n            className={classNames(\n              'mt-1 relative',\n              disable ? 'opacity-50 pointer-events-none' : 'opacity-100'\n            )}\n          >\n            <Listbox.Button\n              id=\"multiple-selector\"\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white  dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`flex space-x-4 truncate ${\n                  values.length === 0\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {values.length > 0\n                  ? map(orderBy(values, [sortBy, 'asc']), (d, idx) => (\n                      <div key={idx} className=\"flex items-center\">\n                        {d.code && (\n                          <div\n                            className={`rounded-full border border-gray-600 h-4 w-4`}\n                            style={{ backgroundColor: d.code }}\n                          />\n                        )}\n                        <span>{d.name}</span>\n                        {idx !== values.length - 1 && ','}\n                      </div>\n                    ))\n                  : placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                defaultValue={defaultItem ? defaultItem : null}\n                static\n                className=\"pl-0 z-10 absolute scroll-dark-md  mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5  overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-pointer select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'truncate flex items-center justify-between w-full relative dark:text-white text-left'\n                          )}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            {item.code && (\n                              <div\n                                className={`rounded-full  h-3 w-3`}\n                                style={{ backgroundColor: item.code }}\n                              />\n                            )}\n                            <span>{item.name}</span>\n                          </div>\n                          {find(values, ['name', item.name]) && (\n                            <AiOutlineCheck className=\"font-bold text-lg\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n  )\n}\nexport default FormMultipleSelector\n","import Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { useField } from 'formik'\nimport { map } from 'lodash'\nimport remove from 'lodash/remove'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useState } from 'react'\nimport { BiTrashAlt } from 'react-icons/bi'\nconst List = ({\n  name,\n  label,\n  placeholder,\n  min = 10,\n  max = 150,\n  initialValues,\n}: {\n  placeholder?: string\n  name: string\n  label?: string\n  min?: number\n  initialValues?: { name: string; id: string }[]\n  max?: number\n}) => {\n  const [field, meta, helpers] = useField(name)\n\n  const [features, setFeatures] = useState<{ name: string; id: string }[]>([])\n\n  useEffect(() => {\n    if (initialValues) {\n      setFeatures([...initialValues])\n    }\n  }, [initialValues])\n\n  const { setTouched, setError: $setError, setValue } = helpers\n  const [error, setError] = useState('')\n\n  const [featureField, setFeatureField] = useState('')\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFeatureField(e.target.value)\n    $setError(``)\n    setError(``)\n  }\n\n  const onFeatureAdd = () => {\n    if (featureField.length >= min && featureField.length < max) {\n      setError('')\n      features.push({ name: featureField, id: nanoid(4) })\n      setFeatures((prev) => [...prev])\n\n      setValue([...features])\n      setTouched(true)\n      $setError(undefined)\n      setFeatureField('')\n    } else {\n      if (featureField.length >= min) {\n        setError(`${name} text must be at least ${min} characters`)\n      } else if (featureField.length < max) {\n        setError(`${name} text cannot be longer than ${max} characters`)\n      }\n    }\n  }\n\n  const onFeatureRemove = (featureId: string) => {\n    remove(features, (f) => f.id === featureId)\n    setFeatures((prev) => [...prev])\n  }\n\n  return (\n    <div>\n      {features && features.length > 0 && (\n        <ol className=\"space-y-4 border dark:border-gray-700 border-gray-200 rounded-lg p-4  list-disc \">\n          {map(features, (feature) => (\n            <li\n              className=\"flex items-center on-hover-container relative text-gray-900 dark:text-white  cursor-pointer text-left\"\n              key={feature.id}\n            >\n              <div className=\"\">\n                <span className=\"block text-gray-900 dark:text-gray-400 text-sm font-normal\">\n                  {feature.name}\n                </span>\n              </div>\n\n              <span\n                onClick={() => onFeatureRemove(feature.id)}\n                className=\"absolute on-hover-item  pr-4 right-0\"\n              >\n                <BiTrashAlt className=\"hover:bg-gray-700 p-2 h-8 w-8  rounded-md text-red-500\" />\n              </span>\n            </li>\n          ))}\n        </ol>\n      )}\n      <div\n        className={`flex mt-4 justify-start  ${\n          !error ? 'items-end' : 'items-center'\n        } rounded-md  gap-2`}\n      >\n        <NormalFormInput\n          error={error}\n          label={`Add ${label || name}`}\n          value={featureField}\n          id=\"tags\"\n          placeholder={`Enter ${placeholder || name}`}\n          fullWidth\n          className=\"w-full capitalize\"\n          onChange={onChange}\n        />\n\n        <Button\n          onClick={onFeatureAdd}\n          size=\"lg\"\n          invert\n          className=\"w-32\"\n          gradient\n          label=\"+ Add\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default List\n","import { Transition } from '@headlessui/react'\nimport Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { useField } from 'formik'\nimport find from 'lodash/find'\nimport map from 'lodash/map'\nimport remove from 'lodash/remove'\nimport { nanoid } from 'nanoid'\nimport React, { useState } from 'react'\nimport { MdCancel } from 'react-icons/md'\n\nconst FormTagsInput = ({\n  name,\n  className = '',\n}: {\n  name: string\n  className?: string\n}) => {\n  const [tags, setTags] = useState<{ name: string; id: string }[]>([])\n\n  const [tagField, setTagField] = useState('')\n  const [field, meta, helpers] = useField(name)\n\n  const { setTouched, setError: $setError, setValue } = helpers\n\n  const onAdd = () => {\n    if (tagField.length >= 3) {\n      const exist = find(\n        tags,\n        (d) => d.name.toLowerCase() === tagField.toLowerCase()\n      )\n      if (!exist) {\n        setError('')\n        setTags((prev) => [...prev, { name: tagField, id: nanoid(4) }])\n        setValue(tags)\n        setTouched(true)\n        $setError(undefined)\n        setTagField('')\n      } else {\n        setError(`Tag: ${tagField} already exists`)\n      }\n    } else {\n      setError(`Tag must be at least 3 characters`)\n    }\n  }\n\n  const [error, setError] = useState('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagField(e.target.value)\n    setError(``)\n  }\n\n  const onRemove = (tagId: string) => {\n    remove(tags, (tag) => tag.id === tagId)\n    setTags((prev) => [...prev])\n  }\n\n  return (\n    <div className={className}>\n      <>\n        <div className=\"flex flex-col items-start gap-y-4\">\n          <div\n            className={`flex ${\n              error ? 'items-center' : 'items-end'\n            } gap-x-4 w-full`}\n          >\n            <NormalFormInput\n              error={error}\n              label=\"Add Tags/Keywords\"\n              value={tagField}\n              id=\"tags\"\n              placeholder=\"Enter tag\"\n              className=\"w-full\"\n              //   gridClass=\"col-span-2\"\n              onChange={onChange}\n            />\n            <Button\n              gradient\n              size=\"lg\"\n              invert\n              className=\"\"\n              onClick={onAdd}\n              bgColor=\"pink\"\n              label={'+ Add'}\n            />\n          </div>\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            show={tags && tags.length > 0}\n          >\n            <div className=\"gap-x-4 gap-y-4 flex items-center w-full flex-wrap\">\n              {map(tags, (tag: any, idx: number) => (\n                <div\n                  className=\"gradient-text on-hover-container border border-gray-200 dark:border-gray-600   px-3 py-2 text-xs rounded-md shadow-md cursor-pointer relative\"\n                  key={tag + '-' + idx}\n                >\n                  {tag.name}\n                  <div\n                    onClick={() => onRemove(tag.id)}\n                    className=\"absolute on-hover-item  -top-2 -right-2  flex items-center\"\n                  >\n                    <MdCancel\n                      className=\"h-5 w-5 text-red-500\"\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Transition>\n        </div>\n      </>\n    </div>\n  )\n}\n\nexport default FormTagsInput\n","import { addProduct, uploadMultipleImages } from 'apis/mutations'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormMultipleSelector from 'components/atoms/FormMultipleSelector'\nimport FormSelector from 'components/atoms/FormSelector'\nimport FormTagsInput from 'components/atoms/FormTagsInput'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Title from 'components/atoms/Title'\nimport List from 'components/List'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IParent, IProduct, IProductImage } from 'interfaces/UniversalInterface'\nimport { forEach, map, times } from 'lodash'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useRef, useState } from 'react'\nimport { AiOutlineCamera } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router'\nimport { colorsList, sizeList } from 'values/values'\nimport * as Yup from 'yup'\n\nconst AddProduct = ({\n  profileUrl,\n  userData,\n}: {\n  profileUrl: string\n  userData: IParent\n}) => {\n  const minMsg = (field: string, number: number) =>\n    `${field} must be atleast ${number} characters`\n  const maxMsg = (field: string, number: number) =>\n    `${field} must be maximum ${number} characters`\n\n  const validationSchema = Yup.object({\n    productName: Yup.string()\n      .required('Product name is required')\n      .min(8, minMsg('Product Name', 8))\n      .max(200, maxMsg('Product Name', 200)),\n    productDescription: Yup.string()\n      .required('Product description is required')\n      .min(50, minMsg('Product Description', 50)),\n\n    details: Yup.string()\n      .required('Product details is required')\n      .min(50, minMsg('Product details', 50)),\n\n    price: Yup.string()\n      .required('Price is required')\n      .matches(/^[0-9.]+$/, 'Must be only digits'),\n  })\n\n  // @ts-ignore\n  const initialValues: IProduct = {\n    images: [],\n    productName: '',\n    productDescription: '',\n    availableColors: [],\n    availableSizes: [],\n    tags: [],\n    estimatedDelivery: 'In 7 days',\n    price: '',\n    details: '',\n    features: [],\n    highlights: [],\n  }\n\n  const { setNotification } = useNotifications()\n\n  const { mutate, isLoading, isError, error, isSuccess } = useMutation(\n    addProduct,\n    {\n      onSuccess: (data) => {\n        const { name, id } = data.data.data\n        setNotification({\n          show: true,\n          title: `You have successfully posted product ${name} on Tradingpost13RMS. Good luck with the sale.`,\n          buttonText: 'View',\n          buttonUrl: links.getProductUrl(id),\n        })\n      },\n    }\n  )\n\n  const [imageList, setImageList] = useState<any[]>([])\n\n  const productImageRef: React.LegacyRef<HTMLInputElement> = useRef()\n\n  const onImageSelect = (e: any): void => {\n    const imgs: File[] = Object.values(e.target.files)\n\n    if (imgs.length > 0) {\n      imgs.forEach((img) => imageList.push(img))\n\n      setImageList((prev) => [...prev])\n    }\n  }\n\n  const showFileExplorer = () => productImageRef?.current?.click()\n\n  const { mutate: imageUploadMutate, isLoading: imageUploadingLoading } =\n    useMutation(uploadMultipleImages, {\n      onSuccess: (data) => {\n        const finalImageList: IProductImage[] = map(\n          data.data.data,\n          (img, idx: number) => ({\n            id: nanoid(24),\n            url: img.location,\n            isCover: idx === 0,\n            alt: '',\n          })\n        )\n\n        if (formRef && formRef.current) {\n          // @ts-ignore\n          mutate({ ...formRef.current.values, images: finalImageList })\n        }\n      },\n    })\n\n  const upload = () => {\n    const fd = new FormData()\n\n    forEach(imageList, (image) => {\n      fd.append('images', image)\n    })\n\n    setTimeout(() => {\n      imageUploadMutate(fd)\n    }, 500)\n  }\n\n  const history = useHistory()\n  useEffect(() => {\n    if (isSuccess) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1\n        )\n      )\n    }\n  }, [isSuccess])\n\n  const onSubmit = async () => {\n    upload()\n  }\n  const formRef = useRef()\n\n  return (\n    <NarrowLayout userData={userData}>\n      <Meta pageTitle=\"Add Product\" />\n      <Title fontWeight=\"font-bold mb-8\">Add New Product</Title>\n      <Formik\n        innerRef={formRef}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-8\">\n          <FormInput\n            label=\"Product Name\"\n            id=\"productName\"\n            name=\"productName\"\n            required\n            placeholder=\"Eg. Programming T-shirts\"\n          />\n          {/* <UploadImages setImagesUploaded={setImagesUploaded} /> */}\n          <div>\n            {imageList && imageList.length > 0 && (\n              <div className=\"grid grid-cols-2 sm:grid-cols-4 mb-8 gap-8\">\n                {imageList.map(\n                  (image, idx) =>\n                    // <div key={idx}>\n                    image && (\n                      // <LightGallery key={idx} speed={500} plugins={[lgZoom]}>\n                      <img\n                        className={`shadow-lg  rounded-lg`}\n                        src={URL.createObjectURL(image)}\n                        alt=\"People working on laptops\"\n                      />\n                      // </LightGallery>\n                    )\n                  // </div>\n                )}\n              </div>\n            )}\n            <input\n              ref={productImageRef}\n              className=\"hidden\"\n              multiple\n              type=\"file\"\n              onChange={onImageSelect}\n              accept=\"image/x-png,image/jpeg\"\n            />\n            <div className=\"flex items-center gap-x-4\">\n              <Button\n                onClick={showFileExplorer}\n                size=\"lg\"\n                invert\n                // className=\"w-32\"\n                gradient\n                Icon={AiOutlineCamera}\n                label=\"+ Add Images\"\n              />\n            </div>\n          </div>\n          <FormInput\n            label=\"Product Description\"\n            id=\"productDescription\"\n            name=\"productDescription\"\n            placeholder=\"Tell your customer about the product in brief\"\n            required\n            textarea\n            rows={4}\n            cols={255}\n          />\n\n          <FormInput\n            label=\"Details\"\n            id=\"details\"\n            name=\"details\"\n            placeholder=\"What includes in product?\"\n            required\n            textarea\n            rows={2}\n            cols={255}\n          />\n          <div className=\"flex items-center w-full space-x-6\">\n            <FormMultipleSelector\n              className=\"w-1/2\"\n              label=\"Available Colors\"\n              disableFieldOption\n              name=\"availableColors\"\n              placeholder=\"Available colors for product\"\n              list={colorsList}\n            />\n            <FormMultipleSelector\n              className=\"w-1/2\"\n              sortBy=\"id\"\n              disableFieldOption\n              label=\"Available Sizes\"\n              name=\"availableSizes\"\n              placeholder=\"XS,M,XL\"\n              list={sizeList}\n            />\n          </div>\n          <div className=\"flex items-start w-full space-x-6\">\n            <FormInput\n              label=\"Product Price\"\n              id=\"price\"\n              gridClass=\"w-1/2\"\n              name=\"price\"\n              required\n              placeholder=\"99\"\n            />\n\n            <FormSelector\n              required\n              list={map(times(30), (d) => ({\n                name: `In ${d + 1} days`,\n                id: d.toString(),\n              }))}\n              className=\"w-1/2\"\n              name=\"estimatedDelivery\"\n              placeholder=\"In 3 days\"\n              label={'Estimated Delivery'}\n            />\n          </div>\n          <FormTagsInput name=\"tags\" />\n          <List name=\"features\" />\n          <List name=\"highlights\" />\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={isLoading || imageUploadingLoading}\n              gradient\n              size=\"lg\"\n              label=\"Submit\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default AddProduct\n"],"sourceRoot":""}
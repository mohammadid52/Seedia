{"version":3,"sources":["hooks/useUser.ts","pages/project/ProjectView.tsx"],"names":["useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Section","title","content","className","DescriptionItem","name","value","valueClassName","nameClassName","classNames","TopCard","websiteUrl","views","followingList","useFollow","following","addFollow","removeFollow","src","profilePicture","avatarPlaceholder","alt","business","location","address","city","country","email","onClick","mutate","label","gradient","size","link","ProjectView","projectId","useParams","fetchProjectById","project","company","salary","background","customMaxWidth","pageUrl","window","href","imageUrl","pageTitle","typeOfBusiness","description","briefDescription","keywords","getTags","website","map","sections","section","closure","join","functionType","min","max","duration","getFromNowTime","postedOn","summary","additionalInfo"],"mappings":"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","file":"static/js/54.926f50e3.chunk.js","sourcesContent":["import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","import { fetchProjectById } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Sidebar from 'components/Sidebar'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Loading from 'components/Loading'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useFollow from 'hooks/useFollow'\nimport useUser from 'hooks/useUser'\nimport { IParent, IProject, ISection } from 'interfaces/UniversalInterface'\nimport map from 'lodash/map'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { classNames } from 'utils/classNames'\nimport { getFromNowTime, getTags, join } from 'utils/functions'\n\nconst Section = ({ title, content }: ISection) => {\n  return (\n    <div className=\"my-8\">\n      {title && (\n        <h4 className=\"mb-4 font-semibold tracking-tight text-lg text-gray-900 dark:text-white\">\n          {title}\n        </h4>\n      )}\n      <p className=\"font-medium whitespace-pre-line tracking-tight text-base text-gray-600 dark:text-gray-400\">\n        {content}\n      </p>\n    </div>\n  )\n}\n\nconst DescriptionItem = ({\n  name,\n  value,\n  valueClassName,\n  nameClassName,\n}: {\n  name: string\n  value: string\n  valueClassName?: string\n  nameClassName?: string\n}) => {\n  return (\n    <div className=\"py-4 border-b border-gray-200 dark:border-gray-700 sm:py-5 sm:grid sm:grid-cols-2 sm:gap-4 \">\n      <dt\n        className={classNames(\n          nameClassName,\n          'text-sm uppercase font-medium gradient-text text-left'\n        )}\n      >\n        {name}\n      </dt>\n      <dd\n        className={classNames(\n          valueClassName,\n          'mt-1 text-sm break-words dark:text-white text-right text-gray-900 sm:mt-0 sm:col-span-1'\n        )}\n      >\n        {value}\n      </dd>\n    </div>\n  )\n}\n\nconst TopCard = ({\n  userData,\n  iAmOwnerOfThisProfile,\n  websiteUrl,\n  views = 0,\n  followingList,\n}: {\n  userData?: IParent\n  iAmOwnerOfThisProfile: boolean\n\n  websiteUrl?: string\n  views?: number\n  followingList?: string[]\n}) => {\n  const { following, addFollow, removeFollow } = useFollow(\n    followingList,\n    userData._id\n  )\n\n  return (\n    <div>\n      <Card\n        className=\"p-6 \"\n        content={\n          <>\n            <div className=\"flex relative items-center justify-between\">\n              {iAmOwnerOfThisProfile && (\n                <span className=\"dark:text-gray-400 text-gray-400 italic text-sm absolute top-0 right-0 \">\n                  View count: {views}\n                </span>\n              )}\n              <div className=\"flex items-center space-x-12\">\n                <div className=\"\">\n                  <span className=\"sr-only\">13RMS</span>\n                  <img\n                    className=\"h-36 w-36 sm:h-36 sm:w-36 cursor-pointer rounded-full shadow-xl border-gradient border-transparent border-2\"\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : avatarPlaceholder\n                    }\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"space-y-1\">\n                  <h1 className=\"text-2xl leading-6 font-semibold dark:text-white text-gray-900\">\n                    {userData?.business.name}\n                  </h1>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.location.address}, {userData?.location.city},{' '}\n                    {userData?.location.country}\n                  </h5>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.business.email}\n                  </h5>\n                </div>\n              </div>\n              <div className=\"absolute bottom-0 right-0\">\n                {!iAmOwnerOfThisProfile ? (\n                  <div className=\"grid grid-cols-2 gap-x-4\">\n                    <Button\n                      onClick={() =>\n                        !following\n                          ? addFollow.mutate(userData._id)\n                          : removeFollow.mutate(userData._id)\n                      }\n                      label=\"Follow\"\n                      gradient\n                      size=\"lg\"\n                      className=\"px-6\"\n                    />\n                    <Button\n                      label=\"Apply\"\n                      link={websiteUrl}\n                      gradient\n                      className=\"px-6\"\n                      size=\"lg\"\n                    />\n                  </div>\n                ) : (\n                  <span className=\"text-base leading-6 font-light  dark:text-gray-400 text-gray-600\">\n                    Others will see buttons here\n                  </span>\n                )}\n              </div>\n            </div>\n          </>\n        }\n      />\n    </div>\n  )\n}\n\nconst ProjectView = ({ userData }: { userData?: IParent }) => {\n  const params: any = useParams()\n  const projectId = params.projectId\n\n  const { isLoading, data, isFetched } = useQuery(`project-${projectId}`, () =>\n    fetchProjectById(projectId)\n  )\n  const project: IProject = isFetched && !isLoading ? data.data.data : {}\n\n  const { iAmOwnerOfThisProfile } = useUser(\n    project?.company?.profileUrl,\n    userData,\n    false\n  )\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  const company = project.company\n  const { salary, location } = project\n  const { business, background } = company\n\n  return (\n    <>\n      <Sidebar />\n\n      <NarrowLayout userData={userData} customMaxWidth=\"max-w-7xl\">\n        <Meta\n          pageUrl={window.location.href}\n          imageUrl={company && company.profilePicture}\n          pageTitle={`${business.name} | ${business.typeOfBusiness} | Jobs | 13RMS `}\n          title={business.name}\n          description={project.briefDescription}\n          keywords={getTags(project.briefDescription)}\n          // userName={''}\n        />\n        <div className=\"flex flex-col gap-y-12\">\n          <TopCard\n            followingList={userData?.following}\n            views={project?.views}\n            websiteUrl={project?.website}\n            iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n            userData={company}\n          />\n          <Card\n            content={\n              <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n                <div className=\"sm:col-span-2\">\n                  <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                    Description\n                  </h1>\n                  <div className=\"whitespace-pre-line\">\n                    {project.briefDescription}\n                  </div>\n                  <br />\n                  <div className=\"flex flex-col gap-y-4\">\n                    {map(project.sections, (section) => (\n                      <Section\n                        title={section.title}\n                        content={section.content}\n                      />\n                    ))}\n                    <Section title={''} content={project.closure} />\n                  </div>\n                </div>\n                <div>\n                  <h1 className=\"dark:text-white text-gray-900 text-2xl mb-4 font-semibold\">\n                    Function Description\n                  </h1>\n                  <dl className=\"\">\n                    <DescriptionItem\n                      name={'Function Type'}\n                      value={join(project.functionType, 'name')}\n                    />\n                    <DescriptionItem\n                      name={'Salary'}\n                      value={`${salary.min} - ${salary.max} / ${salary.duration}`}\n                    />\n                    <DescriptionItem\n                      name={'Location'}\n                      value={`${location?.city || '--'}, ${\n                        location?.country || '--'\n                      }`}\n                    />\n                    <DescriptionItem\n                      name={'Posted'}\n                      value={getFromNowTime(project.postedOn)}\n                    />\n                  </dl>\n                </div>\n              </div>\n            }\n          />\n          <Card\n            content={\n              <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n                <div className=\"sm:col-span-2\">\n                  <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                    About the company\n                  </h1>\n                  <div>\n                    <div className=\"sm:flex items-center\">\n                      <div className=\"mb-4 flex-shrink-0 sm:mb-0 sm:mr-4\">\n                        <img\n                          className=\"h-12 w-12 border-gradient border-transparent border-2 cursor-pointer  shadow-xl\"\n                          src={\n                            company?.profilePicture\n                              ? company?.profilePicture\n                              : avatarPlaceholder\n                          }\n                          alt=\"\"\n                        />\n                      </div>\n                      <h4 className=\"text-lg font-bold\">{business?.name}</h4>\n                    </div>\n                    <div className=\"mt-4\">\n                      <p className=\"dark:text-gray-400 text-gray-600\">\n                        {background?.summary || 'Test summary'}\n                      </p>\n                      <br />\n                      {business?.additionalInfo && (\n                        <p className=\"dark:text-gray-400 text-gray-600\">\n                          {business?.additionalInfo}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                    Company Details\n                  </h1>\n                  <DescriptionItem name={'Company Size'} value={'100'} />\n                  <DescriptionItem\n                    name={'Type of business'}\n                    value={business.typeOfBusiness}\n                  />\n                  <DescriptionItem name={'Year of foundation'} value={'2007'} />\n                  <DescriptionItem\n                    valueClassName=\"underline cursor-pointer tracking-wider\"\n                    name={'Website'}\n                    value={project.website}\n                  />\n                </div>\n              </div>\n            }\n          />\n        </div>\n      </NarrowLayout>\n    </>\n  )\n}\n\nexport default ProjectView\n"],"sourceRoot":""}
{"version":3,"sources":["components/atoms/Badge.tsx","pages/profile/Cover.tsx","pages/profile/About.tsx","components/atoms/Section.tsx","pages/profile/Background.tsx","components/atoms/Tabs.tsx","pages/profile/Recommendations.tsx","pages/profile/Following.tsx","pages/profile/ProfileOne.tsx"],"names":["Badge","style","className","color","label","textSize","rounded","Cover","company","userData","authUser","useState","type","show","showImageModal","setShowImageModal","token","getAccessToken","accountType","other","saving","setSaving","_image","setImage","onImageSelect","e","img","target","files","setValues","useUserContext","onSave","a","preventDefault","fd","FormData","append","config","headers","Authorization","network","post","data","location","updatedData","isCover","password","console","error","message","coverImageSelectorRef","React","useRef","profileImageSelectorRef","Modal","header","disableBackdropClose","open","setOpen","src","URL","createObjectURL","alt","Button","gradient","loading","disabled","onClick","ref","onChange","accept","coverPicture","profilePicture","fullName","jobTitle","business","name","pwvpCount","followers","length","secondary","invert","current","click","bgColor","Icon","AiOutlineEdit","size","About","values","showModal","setShowModal","isEmpty","isBusiness","useEffect","setLocalFields","businessName","address","email","additionalInfo","currentCompany","latestCompany","previousCompany","livesIn","maritalStatus","initialState","localFields","updateState","value","setUnsavedChanges","unsavedChanges","showUnsaveModal","setShowUnsaveModal","KeyValue","text","id","title","onClose","NormalFormInput","Selector","onSelect","status","selectedItem","list","Card","cardTitle","withCardHeadings","content","hideCloseBtn","Section","sectionTitle","withSectionHeadings","hidden","ModalContentByType","onExperienceSelectUpdate","onExperienceFieldUpdate","getValue","onInterestAdd","onExperienceRemove","addNewExperience","CgDetailsMore","summary","textarea","gridClass","placeholder","interests","map","interest","idx","experiences","experience","required","yearList","item","Divider","withButton","BiTrashAlt","onBtnClick","Background","background","addOnTrigger","newExperience","nanoid","companyName","joinDate","leaveDate","description","fieldName","update","remove","isAvailable","EmptyState","subtitle","btnText","showEditOption","BtnIcon","PlusIcon","iconUrl","exp","Tabs","tabs","currentTab","setCurrentTab","htmlFor","defaultValue","find","tab","classNames","undefined","count","Recommendations","recommendation","fetchReceived","setFetchReceived","fetchGiven","setFetchGiven","fetchReceivedList","users","received","g","userId","_r","r","user","fetchGivenList","given","_g","onCancel","validationSchema","Yup","min","max","route","useRouter","userIdFromParam","match","params","onSubmit","initialValues","FormInput","recom","Following","following","setFollowing","suggestedUsers","setSuggestedUsers","allUsers","setAllUsers","fetchFollowingUsers","fetchSuggestedUsers","fetchAllUsers","limit","gradientHover","BsChevronLeft","BsChevronRight","links","getProfileById","_id","template","includes","Profile","myId","commonProps","Sidebar","Layout","firstCol","secondCol","thirdCol","ProfileStrength","PeopleAlsoViewed","CustomFooter"],"mappings":"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","file":"static/js/11.cef40bda.chunk.js","sourcesContent":["import React from 'react'\n\nconst Badge = ({\n  style,\n  className,\n  color = 'yellow',\n  label,\n  textSize = 'sm',\n  rounded = 'md',\n}: {\n  style?: any\n  className?: string\n  color?: string\n  label?: string\n  textSize?: string\n  rounded?: string\n}) => {\n  return (\n    <span\n      style={{ ...style }}\n      className={`${className} absolute capitalize bg-opacity-90 inline-flex items-center px-2.5 py-0.5  rounded${\n        rounded ? `-${rounded}` : ''\n      } text-${textSize} font-medium bg-${color}-100 text-${color}-800`}\n    >\n      {label}\n    </span>\n  )\n}\n\nexport default Badge\n","import Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport { ICompany, IParent } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport React from 'react'\nimport { getAccessToken, network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport Badge from 'components/atoms/Badge'\n\nconst Cover = ({\n  company,\n  userData,\n  authUser,\n}: {\n  company?: ICompany\n  userData: IParent\n  authUser: boolean\n}) => {\n  const [showImageModal, setShowImageModal] = useState({\n    type: '',\n    show: false,\n  })\n  const token = getAccessToken()\n\n  const accountType = userData?.other?.accountType || 'personal'\n\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any, type: string) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowImageModal({ type, show: true })\n  }\n\n  const { setValues } = useUserContext()\n\n  const onSave = async (e: any) => {\n    e.preventDefault()\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: token,\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...userData,\n          [isCover ? 'coverPicture' : 'profilePicture']: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post(\n          '/user/update',\n          {\n            ...updatedData,\n          },\n          {\n            headers: { Authorization: token },\n          }\n        )\n        setShowImageModal({ show: false, type: '' })\n      }\n    } catch (error) {\n      console.error(error.message)\n    }\n    setSaving(false)\n  }\n\n  const coverImageSelectorRef = React.useRef()\n  const profileImageSelectorRef = React.useRef()\n\n  //@ts-ignore\n  const showFileExplorerForCover = () => coverImageSelectorRef?.current?.click()\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageStyles =\n    'max-h-72 rounded-md sm:overflow-hidden w-full  object-cover'\n  const profileImageStyles = 'md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full'\n  const isCover = showImageModal.type === 'cover'\n\n  return (\n    <>\n      <Modal\n        header={`${isCover ? 'Cover' : 'Profile'} Photo`}\n        disableBackdropClose\n        open={showImageModal.show}\n        setOpen={() => setShowImageModal({ show: false, type: '' })}\n      >\n        <div\n          className={`${\n            isCover\n              ? ' lg:min-w-256 sm:min-w-172 min-w-32'\n              : 'sm:min-w-64 sm:min-h-64'\n          }`}\n        >\n          <div\n            className={`relative ${\n              isCover\n                ? 'sm:min-h-72 min-h-48'\n                : 'min-h-48 flex items-center justify-center'\n            } `}\n          >\n            {_image && (\n              <img\n                className={`shadow-xl ${\n                  isCover ? coverImageStyles : profileImageStyles\n                }`}\n                src={URL.createObjectURL(_image)}\n                alt=\"People working on laptops\"\n              />\n            )}\n          </div>\n          <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n            <Button\n              gradient\n              loading={saving}\n              disabled={saving}\n              onClick={onSave}\n              type=\"submit\"\n              label=\"Save\"\n            />\n          </div>\n        </div>\n      </Modal>\n\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, 'cover')}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, 'profile')}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      <main className=\"\">\n        <div className=\"relative\">\n          <div className=\"absolute inset-x-0 bottom-0 h-1/2 \" />\n          <div className=\"sm:px-6 lg:px-8 px-4\">\n            <div className=\"relative shadow-xl rounded-md sm:overflow-hidden\">\n              <div className=\"absolute inset-0\">\n                <img\n                  className=\"h-full w-full object-cover\"\n                  src={\n                    userData?.coverPicture\n                      ? userData?.coverPicture\n                      : 'https://source.unsplash.com/1600x900/?nature,water'\n                  }\n                  alt=\"People working on laptops\"\n                />\n                <div className=\"absolute inset-0 bg-gray-400 mix-blend-multiply\" />\n              </div>\n              <div className=\"relative px-4  py-16 sm:px-6 sm:py-24 lg:py-32 lg:px-8 flex items-center flex-col justify-center\">\n                <div className=\"relative\">\n                  <img\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : 'https://robohash.org/honey?set=set1'\n                    }\n                    className=\"md:h-32 md:w-32 sm:h-12 shadow-xl sm:w-12 rounded-full\"\n                    alt=\"user\"\n                  />\n                </div>\n                <h1 className=\"my-6 relative text-center text-2xl font-extrabold tracking-tight sm:text-2xl lg:text-4xl\">\n                  <span className=\"block text-white\">\n                    {userData?.fullName}{' '}\n                    <Badge\n                      className=\"absolute -right-20 top-0\"\n                      label={accountType}\n                      textSize=\"xs\"\n                      rounded=\"\"\n                      color={\n                        accountType === 'business'\n                          ? 'pink'\n                          : accountType === 'personal'\n                          ? 'yellow'\n                          : 'blue'\n                      }\n                    />\n                  </span>\n                  <span className=\"block text-white text-base tracking-wide font-medium\">\n                    {accountType === 'personal'\n                      ? company?.jobTitle\n                      : userData.business?.name}\n                  </span>\n                </h1>\n\n                <div className=\"flex items-center w-auto text-xl sm:border-t  border-white flex-col sm:flex-row border-t-none\">\n                  <div className=\"sm:border-r border-r-none border-white px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center  text-white tracking-wide font-bold\">\n                      {userData.pwvpCount || 0}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      profile views\n                    </div>\n                  </div>\n                  <div className=\"sm:border-r  border-r-none border-white px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center text-white tracking-wide font-bold\">\n                      {12}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      projects\n                    </div>\n                  </div>\n                  <div className=\"px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center text-white tracking-wide font-bold \">\n                      {userData?.followers?.length || 0}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      connections\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <----------- Edit Button -------------> */}\n              {authUser && (\n                <div className=\"absolute flex items-center gap-x-4 bottom-0 right-0 p-4\">\n                  <Button\n                    secondary\n                    invert\n                    onClick={showFileExplorerForProfile}\n                    bgColor=\"gray\"\n                    Icon={AiOutlineEdit}\n                    size=\"sm\"\n                    label={'Change profile photo'}\n                  />\n                  <Button\n                    secondary\n                    invert\n                    onClick={showFileExplorerForCover}\n                    bgColor=\"gray\"\n                    Icon={AiOutlineEdit}\n                    size=\"sm\"\n                    label={'Change cover photo'}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default Cover\n","//@ts-nocheck\nimport Card from 'components/atoms/Card'\n\nimport Button from 'components/atoms/Button'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport Modal from 'components/atoms/Modal'\nimport { useEffect, useState } from 'react'\n\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport Selector from 'components/atoms/Selector'\nimport { network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport { isEmpty } from 'lodash'\nimport { IParent } from 'interfaces/UniversalInterface'\n\nconst About = ({\n  userData,\n  authUser,\n}: {\n  userData: IParent\n  authUser: boolean\n}) => {\n  const { setValues, values } = useUserContext()\n  const [showModal, setShowModal] = useState(false)\n\n  const {\n    company = {},\n    location = {},\n    business = {},\n  } = isEmpty(values) ? {} : values\n\n  const businessInitState = {\n    businessName: '',\n    address: '',\n    email: '',\n    additionalInfo: '',\n  }\n\n  const companyInitState = {\n    currentCompany: '',\n    previousCompany: '',\n    livesIn: '',\n    maritalStatus: '',\n  }\n\n  const accountType = userData?.other?.accountType\n  const isBusiness = accountType === 'business'\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      if (!isBusiness) {\n        setLocalFields({\n          currentCompany:\n            company?.currentCompany || company.latestCompany || '',\n          previousCompany: company?.previousCompany || '',\n          livesIn: location?.livesIn || '',\n          maritalStatus: userData?.maritalStatus || 'Unmarried',\n        })\n      } else {\n        setLocalFields({\n          businessName: business?.name,\n          address: location?.address,\n          email: business?.email,\n          additionalInfo: business?.additionalInfo,\n        })\n      }\n    }\n  }, [])\n\n  const [saving, setSaving] = useState(false)\n\n  const initialState = !isBusiness ? companyInitState : businessInitState\n\n  const [localFields, setLocalFields] = useState(initialState)\n\n  const updateState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setUnsavedChanges(true)\n    setLocalFields({\n      ...localFields,\n      [name]: value,\n    })\n  }\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n      // @ts-ignore\n      const {\n        currentCompany,\n        address,\n        previousCompany,\n        maritalStatus,\n        businessName,\n        livesIn,\n        email,\n        additionalInfo,\n      } = localFields\n\n      let updatedData = { ...userData }\n\n      if (!isBusiness) {\n        updatedData = {\n          ...userData,\n          maritalStatus,\n          company: {\n            ...company,\n            currentCompany,\n            previousCompany,\n          },\n          location: {\n            ...location,\n            livesIn,\n          },\n        }\n      } else {\n        updatedData = {\n          ...userData,\n\n          business: {\n            ...business,\n            businessName,\n            email,\n            additionalInfo,\n          },\n          location: {\n            ...location,\n            address,\n          },\n        }\n      }\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      setShowModal(false)\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    }\n    setShowModal(false)\n  }\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [showUnsaveModal, setShowUnsaveModal] = useState(false)\n\n  const KeyValue = ({ label, text }: { label: string; text: string }) => {\n    return (\n      <div id={label}>\n        <span className=\"title block text-gray-400 text-sm\">{label}</span>\n        <span\n          title={text}\n          className=\"truncate data block text-sm  text-gray-900 dark:text-white\"\n        >\n          {text}\n        </span>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        onClose={onCancel}\n        open={showModal}\n        disableBackdropClose={false}\n        setOpen={() => setShowModal(false)}\n        header=\"Edit About\"\n      >\n        <div>\n          <div className=\"min-w-256  overflow-y-auto p-2 custom-scroll-mini darker my-4\">\n            {!isBusiness ? (\n              <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                <NormalFormInput\n                  name=\"currentCompany\"\n                  label=\"Current company name\"\n                  value={localFields.currentCompany}\n                  onChange={updateState}\n                />\n                <NormalFormInput\n                  name=\"previousCompany\"\n                  label=\"Previous company name\"\n                  value={localFields.previousCompany}\n                  onChange={updateState}\n                />\n                <NormalFormInput\n                  name=\"livesIn\"\n                  label=\"Lives in\"\n                  value={localFields.livesIn}\n                  onChange={updateState}\n                />\n                <Selector\n                  label=\"Marital Status\"\n                  onSelect={(status) =>\n                    setLocalFields({\n                      ...localFields,\n                      maritalStatus: status.name,\n                    })\n                  }\n                  selectedItem={localFields.maritalStatus}\n                  list={[\n                    { id: '0', name: 'Married' },\n                    { id: '1', name: 'Single' },\n                  ]}\n                />\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                <NormalFormInput\n                  name=\"businessName\"\n                  label=\"Business name\"\n                  value={localFields.businessName}\n                  onChange={updateState}\n                />\n                <NormalFormInput\n                  name=\"address\"\n                  label=\"Business address\"\n                  value={localFields.address}\n                  onChange={updateState}\n                />\n                <NormalFormInput\n                  name=\"email\"\n                  label=\"Business email\"\n                  value={localFields.email}\n                  onChange={updateState}\n                />\n                <NormalFormInput\n                  name=\"email\"\n                  label=\"Additional info\"\n                  value={localFields.additionalInfo}\n                  onChange={updateState}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button gradient onClick={onSave} label=\"Save\" />\n          </div>\n        </div>\n      </Modal>\n      <Card\n        cardTitle=\"About\"\n        withCardHeadings={\n          authUser && (\n            <>\n              <Button\n                secondary\n                invert\n                bgColor=\"gray\"\n                onClick={() => setShowModal(true)}\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        content={\n          !isBusiness ? (\n            <div className=\"space-y-4\">\n              <KeyValue label=\"Current company\" text={company.currentCompany} />\n              <KeyValue\n                label=\"Previous company\"\n                text={company.previousCompany}\n              />\n              <KeyValue label=\"Lives In\" text={location.livesIn} />\n              <KeyValue label=\"Marital Status\" text={userData.maritalStatus} />\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <KeyValue label=\"Business name\" text={business?.name} />\n              <KeyValue label=\"Address\" text={location?.address} />\n              <KeyValue label=\"Business email\" text={business?.email} />\n              <KeyValue\n                label=\"Additional info\"\n                text={business?.additionalInfo}\n              />\n            </div>\n          )\n        }\n      />\n      <Modal\n        hideCloseBtn\n        header=\"Discard changes\"\n        open={showUnsaveModal}\n        setOpen={setShowUnsaveModal}\n      >\n        <>\n          <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n            You have unsaved changes\n          </h1>\n          <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              gradient\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setShowModal(true)\n              }}\n              invert\n              label=\"No thanks\"\n            />\n            <Button\n              gradient\n              label=\"Discard\"\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setLocalFields(initialState)\n              }}\n              loading={saving}\n            />\n          </div>\n        </>\n      </Modal>\n    </>\n  )\n}\n\nexport default About\n","import React from 'react'\n\ninterface SectionProps {\n  sectionTitle: string\n  Icon?: any\n  content?: React.ReactNode\n  withSectionHeadings?: boolean | React.ReactNode\n  hidden?: boolean\n}\n\nconst Section: React.FC<SectionProps> = ({\n  Icon,\n  sectionTitle,\n  withSectionHeadings,\n  content,\n  hidden,\n}: SectionProps) => {\n  return (\n    <div className=\"space-y-6 text-gray-600 dark:text-white\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <Icon />\n          <span className=\"ml-2\">{sectionTitle}</span>\n        </div>\n        {withSectionHeadings ? (\n          <div className=\"flex-shrink-0 flex\">{withSectionHeadings}</div>\n        ) : (\n          <div className=\"\" />\n        )}\n      </div>\n      <div>\n        {hidden ? (\n          <p className=\"text-center text-gray-500\">This content is hidden</p>\n        ) : (\n          content\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Section\n","import Card from 'components/atoms/Card'\nimport { Fragment, useState } from 'react'\nimport Section from 'components/atoms/Section'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport Button from 'components/atoms/Button'\nimport { isEmpty, map, remove, update } from 'lodash'\nimport Modal from 'components/atoms/Modal'\nimport {\n  IBackground,\n  IExperience,\n  IParent,\n} from 'interfaces/UniversalInterface'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { isAvailable } from 'utils/wait'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport Selector from 'components/atoms/Selector'\nimport { yearList } from 'values/values'\nimport { nanoid } from 'nanoid'\nimport Divider from 'components/atoms/Divider'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport EmptyState from 'components/atoms/EmptyState'\n\nconst ModalContentByType = ({\n  type,\n  localFields,\n  onChange,\n  onExperienceSelectUpdate,\n  onExperienceFieldUpdate,\n  getValue,\n  onInterestAdd,\n  onExperienceRemove,\n  addNewExperience,\n}: {\n  type: string\n  localFields: ILocalFields\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onInterestAdd: () => void\n  getValue: (fieldName: string, idx: number) => string\n  onExperienceFieldUpdate: (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => void\n  onExperienceSelectUpdate: (\n    fieldName: string,\n    itemName: string,\n    idx: number\n  ) => void\n  onExperienceRemove: (id: string) => void\n  addNewExperience: () => void\n}) => {\n  switch (type) {\n    case 'summary':\n      return (\n        <Section\n          sectionTitle=\"Summary\"\n          Icon={CgDetailsMore}\n          content={\n            <>\n              <NormalFormInput\n                value={localFields.summary}\n                id={'summary'}\n                textarea\n                gridClass=\"col-span-2\"\n                onChange={onChange}\n                placeholder=\"Tell everyone about yourself\"\n              />\n            </>\n          }\n        />\n      )\n    case 'interests':\n      return (\n        <Section\n          sectionTitle=\"Interests\"\n          Icon={CgDetailsMore}\n          content={\n            <>\n              <div className=\"flex flex-col items-start gap-y-4\">\n                <div className=\"gap-x-4 gap-y-4 flex items-center flex-wrap\">\n                  {localFields.interests && localFields.interests.length > 0 ? (\n                    map(localFields.interests, (interest: any, idx: number) => (\n                      <Button\n                        key={interest + '-' + idx}\n                        gradient\n                        invert\n                        bgColor=\"pink\"\n                        label={interest.name}\n                      />\n                    ))\n                  ) : (\n                    <p className=\"text-gray-600 dark:text-gray-400\">\n                      Please add interest\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex items-center gap-x-4 \">\n                  <NormalFormInput\n                    value={localFields.interest}\n                    id=\"interest\"\n                    placeholder=\"Enter interest name\"\n                    gridClass=\"col-span-2\"\n                    onChange={onChange}\n                  />\n                  <Button\n                    gradient\n                    size=\"sm\"\n                    className=\"\"\n                    onClick={onInterestAdd}\n                    bgColor=\"pink\"\n                    label={'+ Add'}\n                  />\n                </div>\n              </div>\n            </>\n          }\n        />\n      )\n    case 'experiences':\n      return (\n        <Section\n          sectionTitle=\"Experiences\"\n          key=\"experience-edit-tab-52\"\n          Icon={CgDetailsMore}\n          content={\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n              {localFields.experiences && localFields.experiences.length > 0 ? (\n                <>\n                  {map(localFields.experiences, (experience, idx: number) => (\n                    <Fragment key={idx}>\n                      <NormalFormInput\n                        id={`jobTitle-${idx}`}\n                        required\n                        name=\"jobTitle\"\n                        value={getValue('jobTitle', idx)}\n                        label={'Job title'}\n                        placeholder=\"What was/is your role in the company? \"\n                        onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                      />\n                      <NormalFormInput\n                        id=\"companyName\"\n                        required\n                        name=\"companyName\"\n                        value={getValue('companyName', idx)}\n                        label={'Company name'}\n                        placeholder=\"What was/is the company name? \"\n                        onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                      />\n                      <Selector\n                        key=\"joinDate\"\n                        required\n                        selectedItem={getValue('joinDate', idx)}\n                        list={yearList}\n                        label={'Join date'}\n                        placeholder=\"Started from\"\n                        onSelect={(item) => {\n                          onExperienceSelectUpdate('joinDate', item.name, idx)\n                        }}\n                      />\n                      <Selector\n                        key=\"leaveDate\"\n                        required\n                        selectedItem={getValue('leaveDate', idx)}\n                        list={yearList}\n                        label={'Leave date'}\n                        placeholder=\"Left on\"\n                        onSelect={(item) => {\n                          onExperienceSelectUpdate('leaveDate', item.name, idx)\n                        }}\n                      />\n                      <div className=\"col-span-2\">\n                        <NormalFormInput\n                          id=\"description\"\n                          textarea\n                          value={getValue('description', idx)}\n                          name=\"description\"\n                          label={'Description'}\n                          placeholder=\"Add a short description\"\n                          onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                        />\n                      </div>\n                      <div className=\"col-span-2 \">\n                        <Divider\n                          withButton\n                          Icon={BiTrashAlt}\n                          onBtnClick={() => onExperienceRemove(experience.id)}\n                        />\n                      </div>\n                    </Fragment>\n                  ))}\n                </>\n              ) : null}\n              <div className=\"col-span-2\">\n                <Button\n                  className=\"mx-auto\"\n                  onClick={addNewExperience}\n                  label=\"Add new experience\"\n                  bgColor=\"yellow\"\n                  size=\"sm\"\n                />\n              </div>\n            </div>\n          }\n        />\n      )\n    default:\n      return <div>Error</div>\n  }\n}\n\ninterface ILocalFields extends IBackground {\n  interest: string\n}\n\nconst Background = ({\n  userData,\n  authUser,\n}: {\n  userData: IParent\n  authUser: boolean\n}) => {\n  const [showModal, setShowModal] = useState({ show: false, type: '' })\n\n  const { setValues, values } = useUserContext()\n\n  const [saving, setSaving] = useState(false)\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    const { value, id } = e.target\n    setLocalFields({ ...localFields, [id]: value })\n  }\n\n  const { background = {} } = isEmpty(values) ? {} : values\n  const {\n    summary = '',\n    interests = [],\n    experiences = [],\n  }: IBackground = background\n\n  const initialState = {\n    interest: '',\n    interests: [],\n    summary: '',\n    experiences: [],\n  }\n  const [localFields, setLocalFields] = useState<ILocalFields>(initialState)\n  const token = getAccessToken()\n\n  const onInterestAdd = () => {\n    if (localFields.interest) {\n      setUnsavedChanges(true)\n      setLocalFields({\n        ...localFields,\n        interests: [\n          ...localFields.interests,\n          { name: localFields.interest, id: nanoid(12) },\n        ],\n        interest: '',\n      })\n    }\n  }\n\n  const addOnTrigger = (type: string) => {\n    if (type === 'summary') {\n      setLocalFields({ ...localFields, summary: summary || '' })\n    } else if (type === 'interests') {\n      setLocalFields({ ...localFields, interests: [...interests] || [] })\n    } else if (type === 'experiences') {\n      setLocalFields({\n        ...localFields,\n        experiences: [...experiences] || [],\n      })\n    }\n  }\n\n  const addNewExperience = () => {\n    const newExperience: IExperience = {\n      id: nanoid(6),\n      jobTitle: '',\n      companyName: '',\n      joinDate: '',\n      leaveDate: '',\n      description: '',\n    }\n    setLocalFields({\n      ...localFields,\n      // @ts-ignore\n      experiences: [...localFields.experiences, newExperience],\n    })\n  }\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n      const { summary, interests } = localFields\n\n      let updatedData = { ...userData }\n      if (showModal.type === 'summary') {\n        updatedData = {\n          ...userData,\n          background: {\n            ...background,\n            summary,\n          },\n        }\n      } else if (showModal.type === 'interests') {\n        updatedData = {\n          ...userData,\n          background: {\n            ...background,\n            interests,\n          },\n        }\n      } else if (showModal.type === 'experiences') {\n        updatedData = {\n          ...userData,\n\n          background: {\n            ...background,\n            experiences:\n              localFields.experiences && localFields.experiences.length > 0\n                ? [...localFields.experiences]\n                : experiences,\n          },\n        }\n      }\n\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      setShowModal({ ...showModal, show: false })\n      setUnsavedChanges(false)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n      if (!showModal.show) {\n        setLocalFields(initialState)\n      }\n    }\n    setShowModal({ ...showModal, show: false })\n  }\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [showUnsaveModal, setShowUnsaveModal] = useState(false)\n\n  const onExperienceFieldUpdate = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => {\n    const { value, id } = e.target\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      update(localFields?.experiences[idx], `${id}`, () => value)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  const onExperienceSelectUpdate = (\n    fieldName: string,\n    name: string,\n    idx: number\n  ) => {\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      update(localFields?.experiences[idx], `${fieldName}`, () => name)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  const getValue = (fieldName: string, idx: number): string => {\n    // @ts-ignore\n    return localFields.experiences[idx][fieldName]\n  }\n\n  const onExperienceRemove = (id: string) => {\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      remove(localFields.experiences, (item) => item.id === id)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  return (\n    <>\n      <Modal\n        disableBackdropClose={false}\n        open={showModal.show}\n        onClose={onCancel}\n        setOpen={() => setShowModal({ show: false, type: '' })}\n        header=\"Edit Background\"\n      >\n        <div>\n          <div className=\"overflow-y-hidden min-h-64 min-w-256 p-2 custom-scroll-mini darker my-4 max-h-full\">\n            <div className=\"space-y-12 \">\n              <ModalContentByType\n                addNewExperience={addNewExperience}\n                onChange={onChange}\n                onExperienceSelectUpdate={onExperienceSelectUpdate}\n                onExperienceFieldUpdate={onExperienceFieldUpdate}\n                onExperienceRemove={onExperienceRemove}\n                localFields={localFields}\n                onInterestAdd={onInterestAdd}\n                getValue={getValue}\n                type={showModal.type}\n              />\n            </div>\n          </div>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              gradient\n              disabled={saving}\n              label=\"Save\"\n              onClick={onSave}\n              loading={saving}\n            />\n          </div>\n        </div>\n      </Modal>\n      <Card\n        cardTitle=\"Background\"\n        content={\n          <div className=\"space-y-10\">\n            <Section\n              sectionTitle=\"Summary\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                authUser &&\n                summary && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('summary')\n                        setShowModal({ show: true, type: 'summary' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div>\n                  {isAvailable('summary', background) ? (\n                    <p>{summary}</p>\n                  ) : (\n                    <EmptyState\n                      title=\"No summary found\"\n                      subtitle=\"Add something about yourself.\"\n                      btnText=\"Add summary\"\n                      onBtnClick={() =>\n                        setShowModal({ show: true, type: 'summary' })\n                      }\n                      showEditOption={authUser}\n                      BtnIcon={PlusIcon}\n                      iconUrl={'/summary.png'}\n                    />\n                  )}\n                </div>\n              }\n            />\n            <Section\n              sectionTitle=\"Interests\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                interests &&\n                interests.length > 0 &&\n                authUser && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('interests')\n                        setShowModal({ show: true, type: 'interests' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div>\n                  {interests && interests.length > 0 ? (\n                    <div className=\"flex items-center flex-wrap justify-start gap-x-4\">\n                      {map(interests, (interest: any, idx: number) => (\n                        <Button\n                          key={interest.id}\n                          className=\"pointer-events-none\"\n                          gradient\n                          invert\n                          bgColor=\"pink\"\n                          label={interest.name}\n                        />\n                      ))}\n                    </div>\n                  ) : (\n                    <EmptyState\n                      title=\"No interests added\"\n                      subtitle=\"Get started by adding your interests to your profile.\"\n                      btnText=\"Add interests\"\n                      BtnIcon={PlusIcon}\n                      showEditOption={authUser}\n                      iconUrl={'/interest.png'}\n                      onBtnClick={() =>\n                        setShowModal({ show: true, type: 'interests' })\n                      }\n                    />\n                  )}\n                </div>\n              }\n            />\n            <Section\n              sectionTitle=\"Experiences\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                authUser &&\n                experiences &&\n                experiences.length > 0 && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('experiences')\n                        setShowModal({ show: true, type: 'experiences' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div className=\"space-y-8\">\n                  {experiences && experiences.length > 0 ? (\n                    map(experiences, (exp, idx: number) => {\n                      return (\n                        <div\n                          key={idx}\n                          className={` ${\n                            idx !== 1\n                              ? 'border-b border-gray-200 dark:border-gray-600 pb-4'\n                              : ''\n                          }`}\n                        >\n                          <h4 className=\"job_title font-medium dark:text-white text-gray-900\">\n                            {exp.jobTitle}\n                          </h4>\n                          <h5 className=\"company_name link-hover block text-left cursor-pointer \">\n                            {exp.companyName}\n                          </h5>\n                          <span className=\"job_duration text-gray-300 font-semibold text-sm\">\n                            {exp.joinDate} - {exp.leaveDate}\n                          </span>\n                          <p className=\"company_description text-gray-400 mt-3\">\n                            {exp.description}\n                          </p>\n                        </div>\n                      )\n                    })\n                  ) : (\n                    <EmptyState\n                      title=\"No experience\"\n                      subtitle=\"Get started by adding a new experience to your profile.\"\n                      btnText=\"Add experience\"\n                      BtnIcon={PlusIcon}\n                      showEditOption={authUser}\n                      onBtnClick={() => {\n                        if (experiences && experiences.length === 0) {\n                          addNewExperience()\n                        }\n                        setShowModal({ show: true, type: 'experiences' })\n                      }}\n                      iconUrl={'/experience.png'}\n                    />\n                  )}\n                </div>\n              }\n            />\n          </div>\n        }\n      />\n\n      <Modal\n        hideCloseBtn\n        header=\"Discard changes\"\n        open={showUnsaveModal}\n        setOpen={setShowUnsaveModal}\n      >\n        <>\n          <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n            You have unsaved changes\n          </h1>\n          <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              gradient\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setShowModal({ ...showModal, show: true })\n              }}\n              invert\n              label=\"No thanks\"\n            />\n            <Button\n              gradient\n              label=\"Discard\"\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setLocalFields(initialState)\n              }}\n            />\n          </div>\n        </>\n      </Modal>\n    </>\n  )\n}\n\nexport default Background\n","import { classNames } from 'utils/classNames'\n\nconst Tabs = ({\n  tabs,\n  currentTab,\n  setCurrentTab,\n}: {\n  tabs: { name: string; count: number }[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-pink-500 sm:text-sm rounded-md\"\n          //@ts-ignore\n          defaultValue={tabs.find((tab) => tab?.current)?.name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab?.name}>{tab?.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"border-b border-gray-200 dark:border-gray-600\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  tab.name === currentTab\n                    ? 'border-pink-500 text-pink-600'\n                    : 'border-transparent text-gray-400  ',\n                  'whitespace-nowrap cursor-pointer flex py-4 px-1 border-b-2 font-medium text-sm'\n                )}\n                aria-current={tab.name === currentTab ? 'page' : undefined}\n              >\n                {tab.name}\n                {tab.count ? (\n                  <span\n                    className={classNames(\n                      tab.name === currentTab\n                        ? 'bg-pink-100 text-pink-600'\n                        : 'bg-gray-100 text-gray-900',\n                      'hidden ml-3 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block'\n                    )}\n                  >\n                    {tab.count}\n                  </span>\n                ) : null}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import Card from 'components/atoms/Card'\nimport { useEffect, useState } from 'react'\nimport { map } from 'lodash'\nimport { IParent, IRecommendation } from 'interfaces/UniversalInterface'\nimport { getAccessToken, network } from 'helpers'\nimport Tabs from 'components/atoms/Tabs'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport { Form, Formik } from 'formik'\nimport FormInput from 'components/atoms/FormInput'\nimport * as Yup from 'yup'\nimport { useRouter } from 'hooks/useRouter'\nimport { useUserContext } from 'context/UserContext'\n\nconst Recommendations = ({\n  recommendation,\n  authUser,\n  userData,\n}: {\n  authUser: boolean\n  userData: IParent\n  recommendation?: { received: IRecommendation[]; given: IRecommendation[] }\n}) => {\n  const [fetchReceived, setFetchReceived] = useState<any[]>([])\n\n  const [fetchGiven, setFetchGiven] = useState<any[]>([])\n  const fetchReceivedList = async () => {\n    try {\n      const config = {\n        users: map(recommendation?.received, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config, {\n        headers: { Authorization: token },\n      })\n\n      const _r = map(data.data, (r, idx: number) => ({\n        text: recommendation?.received[idx]?.text || 'Not found',\n        user: r,\n      }))\n\n      setFetchReceived(_r)\n      // setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const fetchGivenList = async () => {\n    try {\n      const config = {\n        users: map(recommendation?.given, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config, {\n        headers: { Authorization: token },\n      })\n\n      const _g = map(data.data, (g, idx: number) => ({\n        text: recommendation?.given[idx].text,\n        user: g,\n      }))\n\n      setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    if (recommendation && recommendation?.received.length > 0) {\n      fetchReceivedList()\n    }\n  }, [recommendation?.received])\n  useEffect(() => {\n    // @ts-ignore\n    if (recommendation && recommendation?.given.length > 0) {\n      fetchGivenList()\n    }\n  }, [recommendation?.given])\n\n  const tabs = [\n    {\n      name: 'Received',\n      count: recommendation?.received ? recommendation.received.length : 0,\n    },\n    {\n      name: 'Given',\n      count: recommendation?.given ? recommendation.given.length : 0,\n    },\n  ]\n  const [currentTab, setCurrentTab] = useState('Received')\n\n  const [showModal, setShowModal] = useState(false)\n  const onCancel = () => setShowModal(false)\n\n  const initialState = { recommendation: '' }\n  const validationSchema = Yup.object({\n    recommendation: Yup.string().min(50).max(250),\n  })\n  const route: any = useRouter()\n  const userIdFromParam = route?.match?.params?.userId\n\n  const { setValues } = useUserContext()\n  const token = getAccessToken()\n\n  const onSave = async (values: any) => {\n    setSaving(true)\n    try {\n      if (values.recommendation) {\n        const config = { text: values.recommendation }\n        await network.post(\n          `/user/giveRecommendation/${userIdFromParam}`,\n          config,\n          {\n            headers: { Authorization: token },\n          }\n        )\n        onCancel()\n\n        if (!authUser) {\n          setValues({\n            ...userData,\n            recommendation: {\n              received: [\n                // @ts-ignore\n                ...userData?.recommendation?.received,\n                { text: values.recommendation, userId: null },\n              ],\n              // @ts-ignore\n              given: [...userData?.recommendation?.given],\n            },\n          })\n          fetchReceivedList()\n        }\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const [saving, setSaving] = useState(false)\n\n  return (\n    <>\n      <Modal\n        open={showModal}\n        onClose={onCancel}\n        setOpen={setShowModal}\n        header={'Add recommendation'}\n      >\n        <div className=\"\">\n          <div className=\"overflow-y-auto min-w-132 min-h-32  custom-scroll-mini darker mt-4 px-1\">\n            <Formik\n              onSubmit={onSave}\n              initialValues={initialState}\n              validationSchema={validationSchema}\n            >\n              <Form className=\"py-2\">\n                <FormInput\n                  textarea\n                  placeholder=\"Add your recommendation\"\n                  name=\"recommendation\"\n                  id=\"recommendation\"\n                />\n                <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    loading={saving}\n                    disabled={saving}\n                    onClick={onSave}\n                    type=\"submit\"\n                    label=\"Save\"\n                  />\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n      <Card\n        cardTitle=\"Recommendations\"\n        withCardHeadings={\n          <>\n            <Tabs\n              tabs={tabs}\n              currentTab={currentTab}\n              setCurrentTab={setCurrentTab}\n            />\n          </>\n        }\n        content={\n          <div className=\"grid mt-6  sm:grid-cols-1 md:grid-cols-1 space-y-12\">\n            {currentTab === 'Received' &&\n              (fetchReceived && fetchReceived.length > 0 ? (\n                map(fetchReceived, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 dark:text-gray-400 flex items-center text-right italic\">\n                        By,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          {recom?.user?.fullName}\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : 'https://robohash.org/honey?set=set1'\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  {authUser ? (\n                    <p className=\"text-center text-gray-400\">\n                      No recommendation given yet.\n                    </p>\n                  ) : (\n                    <Button\n                      label=\"Add recommendation\"\n                      className=\"flex\"\n                      gradient\n                      onClick={() => setShowModal(true)}\n                    />\n                  )}\n                </div>\n              ))}\n            {currentTab === 'Given' &&\n              (fetchGiven && fetchGiven.length > 0 ? (\n                map(fetchGiven, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 flex items-center dark:text-gray-400 text-right italic\">\n                        By,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          {recom?.user?.fullName}\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : 'https://robohash.org/honey?set=set1'\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  <p className=\"text-center text-gray-400\">\n                    No recommendation given yet.\n                  </p>\n                </div>\n              ))}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Recommendations\n","import Card from 'components/atoms/Card'\nimport { useEffect, useState } from 'react'\nimport { map } from 'lodash'\nimport Button from 'components/atoms/Button'\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs'\nimport { getAccessToken, network } from 'helpers'\nimport Section from 'components/atoms/Section'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport Badge from 'components/atoms/Badge'\n\nimport { links } from 'constants/Links'\nimport { useRouter } from 'hooks/useRouter'\n\nconst Following = ({\n  list,\n  interests,\n}: {\n  list?: string[]\n  interests?: { name: string; id: string }[]\n}) => {\n  const route: any = useRouter()\n  const userIdFromParam = route?.match?.params?.userId\n  const [following, setFollowing] = useState([])\n  const [suggestedUsers, setSuggestedUsers] = useState([])\n  const [allUsers, setAllUsers] = useState([])\n  const token = getAccessToken()\n\n  const fetchFollowingUsers = async () => {\n    try {\n      const config = { users: list }\n      const { data } = await network.post('/user/getUsers', config, {\n        headers: { Authorization: token },\n      })\n      setFollowing(data.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const fetchSuggestedUsers = async () => {\n    try {\n      const config = { interests: interests }\n      const { data } = await network.post('/user/suggestedUser', config, {\n        headers: { Authorization: token },\n      })\n      setSuggestedUsers(data.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const fetchAllUsers = async () => {\n    try {\n      const config = { limit: 6 }\n      const { data } = await network.post(\n        `/user/getAll/${userIdFromParam}`,\n        config,\n        {\n          headers: { Authorization: token },\n        }\n      )\n      setAllUsers(data.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    if (list && list.length > 0) {\n      fetchFollowingUsers()\n    }\n  }, [userIdFromParam])\n\n  useEffect(() => {\n    if (allUsers && allUsers.length === 0) {\n      fetchAllUsers()\n    }\n  }, [userIdFromParam])\n\n  useEffect(() => {\n    if (interests && interests.length > 0) {\n      fetchSuggestedUsers()\n    }\n  }, [userIdFromParam])\n\n  return (\n    <Card\n      cardTitle=\"Following\"\n      withCardHeadings={\n        following.length > 6 && (\n          <>\n            <Button\n              gradient\n              className=\"mx-2\"\n              rounded=\"rounded-full\"\n              size=\"sm\"\n              gradientHover={false}\n              Icon={BsChevronLeft}\n            />\n            <Button\n              rounded=\"rounded-full\"\n              gradient\n              size=\"sm\"\n              className=\"mx-2\"\n              invert\n              gradientHover={false}\n              Icon={BsChevronRight}\n            />\n          </>\n        )\n      }\n      content={\n        <div>\n          {following.length > 0 ? (\n            <div className=\"grid mt-6 grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4\">\n              {map(following, (user: IParent, idx) => {\n                const isBusiness = user.other?.accountType === 'business'\n\n                return (\n                  <div\n                    key={idx}\n                    className=\"flex px-2 py-4 items-center justify-between  border flex-col dark:border-gray-600 border-gray-200 rounded-md relative p-4\"\n                  >\n                    <img\n                      src={\n                        user.profilePicture\n                          ? user.profilePicture\n                          : 'https://robohash.org/honey?set=set1'\n                      }\n                      alt=\"user\"\n                      className=\"h-20 mb-2 rounded-full w-20 \"\n                    />\n                    <div className=\"my-2 flex items-center justify-between flex-col\">\n                      <h5 className=\"text-gray-700 text-center font-semibold text-lg dark:text-gray-200\">\n                        {user.fullName}\n                      </h5>\n                      <p className=\"text-gray-400 text-center font-medium text-base dark:text-gray-400\">\n                        {isBusiness\n                          ? user.business?.name\n                          : user.company?.companyName}\n                      </p>\n                    </div>\n                    <div className=\"absolute bottom-1 items-center flex justify-center\">\n                      <Button\n                        gradient\n                        gradientHover={false}\n                        className=\"mt-2\"\n                        invert\n                        rounded=\"rounded-full\"\n                        label=\"following\"\n                      />\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          ) : (\n            <div>\n              <p className=\"text-center text-gray-400\">\n                You are not following anyone yet.\n              </p>\n            </div>\n          )}\n\n          <Section\n            sectionTitle=\"Suggested users\"\n            Icon={CgDetailsMore}\n            content={\n              <div>\n                {suggestedUsers.length > 0 ? (\n                  <div></div>\n                ) : (\n                  <div>\n                    <p className=\"text-center text-gray-400\">\n                      No suggested users found\n                    </p>\n                  </div>\n                )}\n              </div>\n            }\n          />\n\n          <Section\n            sectionTitle=\"Random users\"\n            Icon={CgDetailsMore}\n            content={\n              <div>\n                {allUsers.length > 0 ? (\n                  <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-4 \">\n                    {map(allUsers, (user: IParent) => {\n                      const isBusiness = user.other?.accountType === 'business'\n                      return (\n                        <div className=\"flex border border-gray-300 dark:border-gray-600 h-72 w-60 rounded-xl relative flex-col items-center \">\n                          <Badge\n                            className=\"mt-1 mr-1 absolute top-0 right-0\"\n                            textSize=\"xs\"\n                            rounded=\"full\"\n                            label={user?.other?.accountType}\n                            color={\n                              user?.other?.accountType === 'business'\n                                ? 'pink'\n                                : user?.other?.accountType === 'personal'\n                                ? 'yellow'\n                                : 'blue'\n                            }\n                          />\n                          <div className=\"h-1/2 flex flex-col items-center justify-center\">\n                            <img\n                              src={\n                                user?.profilePicture\n                                  ? user?.profilePicture\n                                  : 'https://robohash.org/honey?set=set1'\n                              }\n                              alt={user.fullName}\n                              className=\"h-24 border-gradient border-4 border-transparent w-24 rounded-full shadow-xl\"\n                            />\n                          </div>\n                          <div>\n                            <h4\n                              onClick={() =>\n                                links.getProfileById(\n                                  user._id,\n                                  user?.other?.template || 1\n                                )\n                              }\n                              className=\"dark:text-white text-center hover:underline cursor-pointer text-gray-900 font-semibold tracking-wide text-lg\"\n                            >\n                              {user.fullName}\n                            </h4>\n\n                            <div className=\" flex items-center justify-center \">\n                              <h3 className=\" text-gray-400 font-medium\">\n                                {isBusiness\n                                  ? user.business?.name\n                                  : user.company?.companyName}\n                              </h3>\n                            </div>\n                          </div>\n                          <div className=\"absolute bottom-1 items-center flex justify-center\">\n                            <Button\n                              gradient\n                              gradientHover={false}\n                              className=\"mt-6\"\n                              invert\n                              rounded=\"rounded-full\"\n                              label={\n                                // @ts-ignore\n                                following.includes(user?._id)\n                                  ? 'Following'\n                                  : 'Follow'\n                              }\n                            />\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                ) : (\n                  <div>\n                    <p className=\"text-center text-gray-400\">\n                      No random users found\n                    </p>\n                  </div>\n                )}\n              </div>\n            }\n          />\n        </div>\n      }\n    />\n  )\n}\n\nexport default Following\n","import CustomFooter from 'components/CustomFooter'\nimport Cover from 'pages/profile/Cover'\nimport About from 'pages/profile/About'\nimport Background from 'pages/profile/Background'\nimport Recommendations from 'pages/profile/Recommendations'\nimport Following from 'pages/profile/Following'\nimport PeopleAlsoViewed from 'pages/profile/PeopleAlsoViewed'\nimport Layout from 'pages/profile/Layout'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useRouter } from 'hooks/useRouter'\nimport { getAccessToken, network } from 'helpers'\nimport { useEffect } from 'react'\nimport { useUserContext } from 'context/UserContext'\nimport ProfileStrength from 'components/ProfileStrength'\nimport Sidebar from 'components/Sidebar'\n\nconst Profile = ({ userData }: { userData: IParent }) => {\n  const route: any = useRouter()\n  const userIdFromParam = route?.match?.params?.userId\n\n  const { setValues } = useUserContext()\n  const myId = userData._id\n\n  // #1 first get userId from params\n  // #2 check user id from token decoded object\n  // #3 if it matches then current user is authUser (owner of profile)\n  const authUser = userIdFromParam === userData._id\n  const token = getAccessToken()\n\n  const getProfileById = async () => {\n    if (!authUser) {\n      const { data } = await network.post(\n        '/user/getById/' + userIdFromParam,\n        {},\n        {\n          headers: { Authorization: token },\n        }\n      )\n      setValues({ ...data.data, _id: myId })\n    } else {\n      setValues({ ...userData })\n    }\n  }\n\n  useEffect(() => {\n    getProfileById()\n  }, [userIdFromParam])\n\n  const commonProps = { authUser, userData }\n\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-800\">\n      <Sidebar />\n      <div className=\"flex\">\n        <div className=\"mx-auto min-h-screen pt-8 max-w-440\">\n          <Cover {...commonProps} />\n\n          <div className=\"my-6\">\n            <Layout\n              firstCol={\n                <div className=\"space-y-12\">{<About {...commonProps} />}</div>\n              }\n              secondCol={\n                <div className=\"space-y-12\">\n                  <Background {...commonProps} />\n                  <Recommendations\n                    {...commonProps}\n                    recommendation={userData.recommendation}\n                  />\n                  <Following\n                    list={userData.following}\n                    interests={userData?.background?.interests}\n                  />\n                </div>\n              }\n              thirdCol={\n                <div className=\"space-y-12\">\n                  {authUser && <ProfileStrength {...commonProps} />}\n                  <PeopleAlsoViewed {...commonProps} />\n                </div>\n              }\n            />\n          </div>\n        </div>\n      </div>\n      <CustomFooter />\n    </div>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}
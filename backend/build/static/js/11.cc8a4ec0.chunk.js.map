{"version":3,"sources":["pages/account/personal/CompanyStep.jsx"],"names":["StudentSecondStep","useState","isLoaded","setIsLoaded","history","useHistory","useUserContext","values","setValues","console","log","validationSchema","Yup","jobTitle","required","latestCompany","setTimeout","saving","setSaving","selectedJobType","setSelectedJobType","title","subtitle","className","initialValues","PersonalStepOne","onSubmit","_values","wait","then","personal","company","jobType","push","links","PERSONAL_STEP_2","label","id","name","placeholder","list","selectedItem","onSelect","item","type","fullWidth","rounded","gradient","loading","text","onClick","goBack"],"mappings":"iPAoIeA,UArHW,WAAO,IAAD,EACEC,oBAAS,GADX,mBACvBC,EADuB,KACbC,EADa,KAExBC,EAAUC,cAFc,EAGAC,cAAtBC,EAHsB,EAGtBA,OAAQC,EAHc,EAGdA,UAChBC,QAAQC,IACN,8EACAH,GAKF,IAyBMI,EAAmBC,IAAW,CAClCC,SAAUD,MAAaE,SAAS,yBAChCC,cAAeH,MAAaE,SAAS,2BAGvCE,YAAW,WACTb,GAAY,KACX,KA3C2B,MA6CFF,oBAAS,GA7CP,mBA6CvBgB,EA7CuB,KA6CfC,EA7Ce,OAmDgBjB,mBAAS,IAnDzB,mBAmDvBkB,EAnDuB,KAmDNC,EAnDM,KAqD9B,OAAQlB,EAGN,cAAC,IAAD,CACEmB,MAAM,sBACNC,SACE,4EAC6C,uBAD7C,mBAHJ,SAQE,sBAAKC,UAAU,wCAAf,UACE,qBAAKA,UAAU,sEAAf,SACE,cAAC,IAAD,CACEC,cAAeC,IACfd,iBAAkBA,EAClBe,SArDO,SAACC,GAChBT,GAAU,GACVU,YAAK,KAAMC,MAAK,WACdX,GAAU,GACVV,EAAU,2BACLD,GADI,IAEPuB,SAAS,2BACJvB,EAAOuB,UADJ,IAENC,QAAQ,2BACHxB,EAAOwB,SADL,IAELC,QAASb,EACTN,SAAUc,EAAQd,SAClBE,cAAeY,EAAQZ,qBAI7BX,EAAQ6B,KAAKC,IAAMC,qBAkCf,SAKE,eAAC,IAAD,CAAMZ,UAAU,YAAhB,UACE,cAAC,IAAD,CACEa,MAAM,wBACNC,GAAG,WACHC,KAAK,WACLxB,UAAQ,IAEV,qBAAKS,UAAU,OAAf,SACE,cAAC,IAAD,CACEa,MAAO,WACPG,YAAY,aACZC,KAvEA,CACd,CAAEH,GAAI,IAAKC,KAAM,iBACjB,CAAED,GAAI,IAAKC,KAAM,iBAsEHG,aAActB,EACduB,SAAU,SAACC,GAAD,OAAUvB,EAAmBuB,EAAKL,WAGhD,cAAC,IAAD,CACEF,MAAM,iBACNC,GAAG,gBACHC,KAAK,gBACLxB,UAAQ,IAGV,8BACE,cAAC,IAAD,CACE8B,KAAK,SACLC,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRC,QAAS/B,EACTmB,MAAM,uBAMhB,cAAC,IAAD,CACEa,KAAK,UACLC,QA9DO,WACb9C,EAAQ+C,UA8DF5B,UAAU,2BAxDhB,cAAC,IAAD","file":"static/js/11.cc8a4ec0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Loading from 'components/Loading'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { PersonalStepOne } from 'initials'\nimport { useUserContext } from 'context/UserContext'\n\nconst StudentSecondStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n  const { values, setValues } = useUserContext()\n  console.log(\n    'ðŸš€ ~ file: CompanyStep.jsx ~ line 20 ~ StudentSecondStep ~ values',\n    values\n  )\n\n  //capture inputs\n\n  const jobList = [\n    { id: '1', name: 'Web Developer' },\n    { id: '2', name: 'Web Designer' },\n  ]\n\n  const onSubmit = (_values) => {\n    setSaving(true)\n    wait(3000).then(() => {\n      setSaving(false)\n      setValues({\n        ...values,\n        personal: {\n          ...values.personal,\n          company: {\n            ...values.company,\n            jobType: selectedJobType,\n            jobTitle: _values.jobTitle,\n            latestCompany: _values.latestCompany,\n          },\n        },\n      })\n      history.push(links.PERSONAL_STEP_2)\n    })\n  }\n\n  const validationSchema = Yup.object({\n    jobTitle: Yup.string().required('Please add this field'),\n    latestCompany: Yup.string().required('Please add this field'),\n  })\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const [saving, setSaving] = useState(false)\n\n  const goBack = () => {\n    history.goBack()\n  }\n\n  const [selectedJobType, setSelectedJobType] = useState('')\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title=\"Company Information\"\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-800 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={PersonalStepOne}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Most recent job title\"\n                id=\"jobTitle\"\n                name=\"jobTitle\"\n                required\n              />\n              <div className=\"mt-6\">\n                <Selector\n                  label={'Job Type'}\n                  placeholder=\"Select one\"\n                  list={jobList}\n                  selectedItem={selectedJobType}\n                  onSelect={(item) => setSelectedJobType(item.name)}\n                />\n              </div>\n              <FormInput\n                label=\"Latest Company\"\n                id=\"latestCompany\"\n                name=\"latestCompany\"\n                required\n              />\n\n              <div>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  loading={saving}\n                  label=\"Next Step\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          text=\"Go back\"\n          onClick={goBack}\n          className=\"inline-block mt-4\"\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default StudentSecondStep\n"],"sourceRoot":""}
{"version":3,"sources":["pages/Settings.tsx"],"names":["Settings","userData","currentTemplate","other","template","useEffect","updateDocumentTitle","useState","changingTemplate","setChangingTemplate","setValues","useUserContext","token","getAccessToken","history","useHistory","showDeleteModal","setShowDeleteModal","dispatch","useDispatch","deleteAccount","a","network","delete","headers","Authorization","logOut","console","error","message","className","header","open","setOpen","secondary","bgColor","onClick","invert","label","primary","style","background","updatedData","password","wait","then","post","disabled","loading","loadingText","color","dateTime","createdOn","moment","format","withButton","text","goBack","gradient"],"mappings":"iSAae,SAASA,EAAT,GAAwD,IAAD,MAAnCC,EAAmC,EAAnCA,SAC3BC,GAAkB,UAAAD,EAASE,aAAT,eAAgBC,WAAY,EAEpDC,qBAAU,WACRC,YAAoB,YAAY,KAC/B,IAEH,MAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAEQC,EAAcC,cAAdD,UAEFE,EAAQC,cAERC,EAAUC,cAkChB,EAA8CR,oBAAS,GAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KAEMC,EAAWC,cAEXC,EAAa,uCAAG,sBAAAC,EAAA,+EAEZC,IAAQC,OAAO,QAAS,CAC5BC,QAAS,CAAEC,cAAeb,KAHV,OAKlBM,EAASQ,YAAOZ,IALE,+CAOlBa,QAAQC,MAAM,KAAMC,SAPF,wDAAH,qDAWnB,OACE,sBAAKC,UAAU,qCAAf,UACE,cAAC,IAAD,CACEC,OAAO,iBACPC,KAAMhB,EACNiB,QAAS,kBAAMhB,GAAmB,IAHpC,SAKE,sBAAKa,UAAU,oBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,iDAAd,2DAGA,mBAAGA,UAAU,iBAAb,6CAGF,sBAAKA,UAAU,uDAAf,UACE,cAAC,IAAD,CACEI,WAAS,EACTC,QAAQ,OACRC,QAAS,WACPnB,GAAmB,IAErBoB,QAAM,EACNC,MAAM,cAER,cAAC,IAAD,CACEC,SAAO,EACPC,MAAO,CAAEC,WAAY,OACrBH,MAAM,SACNF,QAAShB,YAKjB,sBAAMU,UAAU,uEAAhB,SACE,+BACE,sBAAKA,UAAU,YAAf,UACE,gCACE,oBAAIA,UAAU,gEAAd,8BAGA,mBAAGA,UAAU,8BAAb,2DAIF,8BACE,cAAC,IAAD,CACEO,QAAM,EACND,QA/FS,WACrB3B,GAAoB,GACpB,IACE,IAAIiC,EAAW,2BACVzC,GADU,IAEbE,MAAM,2BACDF,EAASE,OADT,IAEHC,SAA8B,IAApBF,EAAwB,EAAI,aAInCwC,EAAYC,SAEnBjC,EAAU,eAAKgC,IACfE,YAAK,KAAMC,KAAX,sBAAgB,sBAAAxB,EAAA,sEACRC,IAAQwB,KACZ,eADI,eAGCJ,GAEL,CACElB,QAAS,CAAEC,cAAeb,KAPhB,4CAWhB,MAAOgB,GACPD,QAAQC,MAAMA,EAAMC,SAxBtB,QA0BEpB,GAAoB,KAoEVsC,SAAUvC,EACVwC,QAASxC,EACTyC,YAAW,+BACW,IAApB/C,EAAwB,MAAQ,OAElCgC,WAAS,EACTC,QAAQ,OACRK,MAAO,CAAEU,MAAO,QAChBZ,MAAK,6BACiB,IAApBpC,EAAwB,MAAQ,WAKtC,cAAC,IAAD,IACA,gCACE,oBAAI4B,UAAU,gEAAd,8BAGA,mBAAGA,UAAU,8BAAb,2DAIF,8BACE,cAAC,IAAD,CACEO,QAAM,EACND,QAAS,kBAAMnB,GAAmB,IAClCiB,WAAS,EACTM,MAAO,CAAEU,MAAO,WAChBf,QAAQ,OACRG,MAAM,0BAIV,oBAAGR,UAAU,wBAAb,wCAC8B,IAC5B,sBAAMqB,SAAS,sBAAsBrB,UAAU,gBAA/C,UACG,UAAA7B,EAASE,aAAT,eAAgBiD,WACbC,IAAM,UAACpD,EAASE,aAAV,aAAC,EAAgBiD,WAAWE,OAAO,MACzC,gCALR,OASA,cAAC,IAAD,CAASC,YAAU,EAACC,KAAK,QAEzB,cAAC,IAAD,CAAQpB,QAAStB,EAAQ2C,OAAQC,UAAQ,EAACpB,MAAO","file":"static/js/5.1982a791.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport Button from 'components/atoms/Button'\nimport Divider from 'components/atoms/Divider'\nimport moment from 'moment'\nimport { getAccessToken, network, updateDocumentTitle } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport { wait } from 'utils/wait'\nimport Modal from 'components/atoms/Modal'\nimport { logOut } from 'state/Redux/Actions/authActions'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Settings({ userData }: { userData: IParent }) {\n  const currentTemplate = userData.other?.template || 1\n\n  useEffect(() => {\n    updateDocumentTitle('Settings', true)\n  }, [])\n\n  const [changingTemplate, setChangingTemplate] = useState(false)\n\n  const { setValues } = useUserContext()\n\n  const token = getAccessToken()\n\n  const history = useHistory()\n\n  const changeTemplate = () => {\n    setChangingTemplate(true)\n    try {\n      let updatedData = {\n        ...userData,\n        other: {\n          ...userData.other,\n          template: currentTemplate === 1 ? 2 : 1,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n      wait(1000).then(async () => {\n        await network.post(\n          '/user/update',\n          {\n            ...updatedData,\n          },\n          {\n            headers: { Authorization: token },\n          }\n        )\n      })\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setChangingTemplate(false)\n    }\n  }\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const deleteAccount = async () => {\n    try {\n      await network.delete('/user', {\n        headers: { Authorization: token },\n      })\n      dispatch(logOut(history))\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 h-screen\">\n      <Modal\n        header=\"Delete Account\"\n        open={showDeleteModal}\n        setOpen={() => setShowDeleteModal(false)}\n      >\n        <div className=\"min-h-32 min-w-96\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n              Are you sure you want to delete your account?\n            </h1>\n            <p className=\"text-gray-500 \">You won't able to recover it</p>\n          </div>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              secondary\n              bgColor=\"gray\"\n              onClick={() => {\n                setShowDeleteModal(false)\n              }}\n              invert\n              label=\"No thanks\"\n            />\n            <Button\n              primary\n              style={{ background: 'red' }}\n              label=\"Delete\"\n              onClick={deleteAccount}\n            />\n          </div>\n        </div>\n      </Modal>\n      <main className=\"bg-white dark:bg-gray-800 max-w-lg mx-auto pt-10 pb-12 px-4 lg:pb-16\">\n        <form>\n          <div className=\"space-y-6\">\n            <div>\n              <h1 className=\"text-base leading-6 font-medium dark:text-white text-gray-900\">\n                Profile Settings\n              </h1>\n              <p className=\"mt-1 text-xs text-gray-500 \">\n                You can change your profile settings here.\n              </p>\n            </div>\n            <div>\n              <Button\n                invert\n                onClick={changeTemplate}\n                disabled={changingTemplate}\n                loading={changingTemplate}\n                loadingText={`Changing template to ${\n                  currentTemplate === 1 ? 'Two' : 'One'\n                }`}\n                secondary\n                bgColor=\"gray\"\n                style={{ color: 'teal' }}\n                label={`Change template to ${\n                  currentTemplate === 1 ? 'Two' : 'One'\n                }`}\n              />\n            </div>\n\n            <Divider />\n            <div>\n              <h1 className=\"text-base leading-6 font-medium dark:text-white text-gray-900\">\n                Account Settings\n              </h1>\n              <p className=\"mt-1 text-xs text-gray-500 \">\n                You can change your account settings here.\n              </p>\n            </div>\n            <div>\n              <Button\n                invert\n                onClick={() => setShowDeleteModal(true)}\n                secondary\n                style={{ color: '#F87171' }}\n                bgColor=\"gray\"\n                label=\"Delete this account\"\n              />\n            </div>\n\n            <p className=\"text-sm text-gray-500\">\n              This account was created on{' '}\n              <time dateTime=\"2017-01-05T20:35:40\" className=\"font-semibold\">\n                {userData.other?.createdOn\n                  ? moment(userData.other?.createdOn).format('LL')\n                  : 'January 5, 2017, 8:35:40 PM'}\n              </time>\n              .\n            </p>\n            <Divider withButton text=\"End\" />\n\n            <Button onClick={history.goBack} gradient label={'GO BACK'} />\n          </div>\n        </form>\n      </main>\n    </div>\n  )\n}\n"],"sourceRoot":""}
{"version":3,"sources":["pages/Login.jsx"],"names":["Login","history","useHistory","validationSchema","Yup","email","required","password","min","max","setValues","useUserContext","token","getAccessToken","useState","loading","setLoading","errors","setErrors","onSubmit","values","a","network","post","headers","Authorization","data","status","includes","message","push","links","DASHBAORD","localStorage","setItem","access_token","title","subtitle","className","initialValues","LOGIN","label","id","name","showPasswordButton","type","fullWidth","rounded","gradient","hidden","length","href"],"mappings":"iQAoHeA,UAvGD,WACZ,IAAMC,EAAUC,cACVC,EAAmBC,IAAW,CAClCC,MAAOD,MACJC,MAAM,yBACNC,SAAS,4BACZC,SAAUH,MAAaE,SAAS,uBAAuBE,IAAI,GAAGC,IAAI,MAG5DC,EAAcC,cAAdD,UACFE,EAAQC,cAEd,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACfL,GAAW,GADI,kBAGUM,IAAQC,KAC7B,cACA,CACElB,MAAOe,EAAOf,MACdE,SAAUa,EAAOb,UAEnB,CACEiB,QAAS,CAAEC,cAAeb,KAVjB,gBAcO,WAXZc,EAHK,EAGLA,MAWCC,OACFV,EAAOW,SAASF,EAAKG,UACxBX,EAAU,GAAD,mBAAKD,GAAL,CAAaS,EAAKG,YAG7BX,EAAU,IAEVR,EAAU,2BAAKgB,EAAKA,MAASA,IAE7BzB,EAAQ6B,KAAKC,IAAMC,WACnBC,aAAaC,QAAQ,eAAgBR,EAAKA,KAAKS,eAxBpC,gDA2BbjB,EAAU,GAAD,mBAAKD,GAAL,CAAa,KAAMY,WA3Bf,yBA6Bbb,GAAW,GA7BE,4EAAH,sDAiCd,OACE,cAAC,IAAD,CACEoB,MAAM,0BACNC,SACE,mBAAGC,UAAU,4DAAb,qDAHJ,SAQE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,qHAAf,SACE,cAAC,IAAD,CACEC,cAAeC,IACfrC,iBAAkBA,EAClBgB,SAAUA,EAHZ,SAKE,eAAC,IAAD,CAAMmB,UAAU,YAAhB,UACE,cAAC,IAAD,CAAWG,MAAM,QAAQC,GAAG,QAAQC,KAAK,QAAQrC,UAAQ,IAEzD,cAAC,IAAD,CACEmC,MAAM,WACNC,GAAG,WACHC,KAAK,WACLrC,UAAQ,EACRsC,oBAAkB,IAGpB,8BACE,cAAC,IAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRjC,QAASA,EACT0B,MAAM,YAIV,qBAAKQ,OAA0B,IAAlBhC,EAAOiC,OAApB,SACE,cAAC,IAAD,CAAOjC,OAAQA,aAKvB,sBAAKqB,UAAU,mCAAf,8BAEE,oBAAGa,KAAK,UAAUb,UAAU,aAA5B,UACG,IADH","file":"static/js/4.d02c4fe7.chunk.js","sourcesContent":["import { useState } from 'react'\nimport Button from 'components/atoms/Button'\nimport Layout from 'containers/Layout'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { LOGIN } from 'initials'\nimport FormInput from 'components/atoms/FormInput'\nimport { links } from 'constants/Links'\nimport { useHistory } from 'react-router-dom'\nimport { getAccessToken, network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport Error from 'components/alerts/Error'\n\nconst Login = () => {\n  const history = useHistory()\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Please add email address'),\n    password: Yup.string().required('Please add password').min(6).max(20),\n  })\n\n  const { setValues } = useUserContext()\n  const token = getAccessToken()\n\n  const [loading, setLoading] = useState(false)\n  const [errors, setErrors] = useState([])\n\n  const onSubmit = async (values) => {\n    setLoading(true)\n    try {\n      const { data } = await network.post(\n        '/auth/login',\n        {\n          email: values.email,\n          password: values.password,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      if (data.status === 'error') {\n        if (!errors.includes(data.message)) {\n          setErrors([...errors, data.message])\n        }\n      } else {\n        setErrors([])\n\n        setValues({ ...data.data, ...data })\n\n        history.push(links.DASHBAORD)\n        localStorage.setItem('access_token', data.data.access_token)\n      }\n    } catch (error) {\n      setErrors([...errors, error.message])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Layout\n      title=\"Sign in to your account\"\n      subtitle={\n        <p className=\"mt-1 text-center dark:text-gray-400 text-sm text-gray-600\">\n          Stay updated on your professional world\n        </p>\n      }\n    >\n      <div className=\"mt-8 mb-36 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-800 border border-transparent dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={LOGIN}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput label=\"Email\" id=\"email\" name=\"email\" required />\n\n              <FormInput\n                label=\"password\"\n                id=\"password\"\n                name=\"password\"\n                required\n                showPasswordButton\n              />\n\n              <div>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  loading={loading}\n                  label=\"Login\"\n                />\n              </div>\n\n              <div hidden={errors.length === 0}>\n                <Error errors={errors} />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <div className=\"mt-4 text-center dark:text-white\">\n          Not yet on 13RMS?\n          <a href=\"/signup\" className=\"link-hover\">\n            {' '}\n            Join now\n          </a>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default Login\n"],"sourceRoot":""}
{"version":3,"sources":["components/Tabs.tsx","hooks/useTabs.ts","pages/followers/UserFollowers.tsx"],"names":["Tabs","tabs","currentTab","setCurrentTab","className","htmlFor","id","name","defaultValue","find","tab","map","tabIndex","onClick","classNames","useTabs","initCurrentTab","useState","helpers","UserFollowers","userData","followers","length","onFollowers","onFollowings","config","users","following","useQuery","fetchUsers","data","isLoading","isFetched","isSuccess","list","history","useHistory","useEffect","push","links","followings","customMaxWidth","pageTitle","fullName","content","people","idx","user","_id"],"mappings":"iGAAA,mBAuDeA,IA3CF,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,cAChC,OACE,gCACE,sBAAKC,UAAU,YAAf,UACE,uBAAOC,QAAQ,OAAOD,UAAU,UAAhC,0BAIA,wBACEE,GAAG,OACHC,KAAK,OACLH,UAAU,gJACVI,aAAcP,EAAKQ,MAAK,SAACC,GAAD,OAASA,EAAIH,OAASL,KAAYK,KAJ5D,SAMGN,EAAKU,KAAI,SAACD,GAAD,OACR,iCAAwBA,EAAIH,MAAfG,EAAIH,cAIvB,qBAAKH,UAAU,kBAAf,SACE,qBAAKA,UAAU,GAAf,SACE,qBAAKA,UAAU,wBAAwB,aAAW,OAAlD,SACGH,EAAKU,KAAI,SAACD,GAAD,OACR,qBACEE,SAAU,EAEVC,QAAS,kBAAMV,EAAcO,EAAIH,OACjCH,UAAWU,YACTZ,IAAeQ,EAAIH,KACf,iEACA,4IACJ,mEARJ,SAWGG,EAAIH,MATAG,EAAIH,oB,oDCzBVQ,IATC,SAACd,GACf,IAAMe,EAAiBf,EAAK,GAAGM,KAC/B,EAAoCU,mBAASD,GAA7C,mBAAOd,EAAP,KAAmBC,EAAnB,KAEMe,EAAUjB,EAAKU,KAAI,SAACD,GAAD,OAASA,EAAIH,OAASL,KAE/C,MAAO,CAAEA,aAAYC,gBAAee,a,uJC0EvBC,UAtEO,SAAC,GAAyC,IAAD,EAAtCC,EAAsC,EAAtCA,SACjBnB,EAAO,CACX,CAAEM,KAAK,GAAD,cAAKa,QAAL,IAAKA,GAAL,UAAKA,EAAUC,iBAAf,aAAK,EAAqBC,OAA1B,eACN,CAAEf,KAAM,eAGV,EAA+CQ,YAAQd,GAA/CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAee,EAAnC,EAAmCA,QACnC,cAAoCA,EAApC,GAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAS,CACbC,MAAOH,EAAcH,EAASC,UAAYD,EAASO,WAGrD,EAAkDC,mBAAS,QAAD,OAChDL,EAAc,YAAc,eACpC,kBAAMM,YAAWJ,MAFXK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,UAK9BC,GACHH,GAAaC,GAAaC,EAAYH,EAAKA,KAAKA,KAAKJ,MAAQ,GAE1DS,EAAUC,cAShB,OARAC,qBAAU,WACJd,EACFY,EAAQG,KAAKC,IAAMlB,aAEnBc,EAAQG,KAAKC,IAAMC,gBAEpB,CAACjB,EAAaC,IAGf,eAAC,IAAD,CAAcJ,SAAUA,EAAUqB,eAAe,YAAjD,UACE,cAAC,IAAD,CACEC,UAAS,UAAKnB,EAAc,YAAc,aAAjC,cACPH,EAASuB,SADF,cAIX,sBAAKvC,UAAU,yBAAf,UACE,cAAC,IAAD,CACEwC,QACE,qBAAKxC,UAAU,oCAAf,SACE,cAAC,IAAD,CACEH,KAAMA,EACNC,WAAYA,EACZC,cAAeA,QAMvB,cAAC,IAAD,CACEyC,QACE,qBAAKxC,UAAU,sEAAf,SACG8B,GAAQA,EAAKZ,OAAS,EACrBY,EAAKvB,KAAI,SAACkC,EAAiBC,GAAlB,OACP,cAAC,IAAD,CAAwBC,KAAMF,GAA9B,OAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAQG,QAGrB,oBAAG5C,UAAU,4BAAb,gBACMoB,EAAe,aAAe,YADpC","file":"static/js/54.c1e82f0a.chunk.js","sourcesContent":["import { classNames } from 'utils/classNames'\n\nexport interface ITab {\n  name: string\n}\n\nexport interface TabsProps {\n  tabs: ITab[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Tabs = ({ tabs, currentTab, setCurrentTab }: TabsProps) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n          defaultValue={tabs.find((tab) => tab.name === currentTab).name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab.name}>{tab.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                tabIndex={0}\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  currentTab === tab.name\n                    ? ' gradient-text border-b-2 dark:border-pink-700 border-pink-200'\n                    : 'dark:hover:text-pink-600 border-transparent border-b-2 text-gray-500 hover:text-gray-700 dark:hover:border-gray-600 hover:border-gray-300',\n                  'whitespace-nowrap py-4 cursor-pointer px-1  font-medium text-sm'\n                )}\n              >\n                {tab.name}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import { ITab } from 'components/Tabs'\nimport { useState } from 'react'\n\nconst useTabs = (tabs: ITab[]) => {\n  const initCurrentTab = tabs[0].name\n  const [currentTab, setCurrentTab] = useState(initCurrentTab)\n\n  const helpers = tabs.map((tab) => tab.name === currentTab)\n\n  return { currentTab, setCurrentTab, helpers }\n}\n\nexport default useTabs\n","import { fetchUsers } from 'apis/queries'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Tabs from 'components/Tabs'\nimport User from 'components/User'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useTabs from 'hooks/useTabs'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect } from 'react'\nimport { useQuery } from 'react-query'\nimport { useHistory } from 'react-router'\n\nconst UserFollowers = ({ userData }: { userData: IParent }) => {\n  const tabs = [\n    { name: `${userData?.followers?.length} Followers` },\n    { name: 'Followings' },\n  ]\n\n  const { currentTab, setCurrentTab, helpers } = useTabs(tabs)\n  const [onFollowers, onFollowings] = helpers\n\n  const config = {\n    users: onFollowers ? userData.followers : userData.following,\n  }\n\n  const { data, isLoading, isFetched, isSuccess } = useQuery(\n    `user-${onFollowers ? 'followers' : 'followings'}`,\n    () => fetchUsers(config)\n  )\n\n  const list: IParent[] =\n    !isLoading && isFetched && isSuccess ? data.data.data.users : []\n\n  const history = useHistory()\n  useEffect(() => {\n    if (onFollowers) {\n      history.push(links.followers())\n    } else {\n      history.push(links.followings())\n    }\n  }, [onFollowers, onFollowings])\n\n  return (\n    <NarrowLayout userData={userData} customMaxWidth=\"max-w-7xl\">\n      <Meta\n        pageTitle={`${onFollowers ? 'Followers' : 'Followings'} | ${\n          userData.fullName\n        } | 13RMS`}\n      />\n      <div className=\"flex flex-col gap-y-12\">\n        <Card\n          content={\n            <div className=\"flex items-center justify-between\">\n              <Tabs\n                tabs={tabs}\n                currentTab={currentTab}\n                setCurrentTab={setCurrentTab}\n              />\n            </div>\n          }\n        />\n\n        <Card\n          content={\n            <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\">\n              {list && list.length > 0 ? (\n                list.map((people: IParent, idx: number) => (\n                  <User key={people?._id} user={people} />\n                ))\n              ) : (\n                <p className=\"text-gray-400 text-center\">\n                  no {onFollowings ? 'followings' : 'followers'} found\n                </p>\n              )}\n            </div>\n          }\n        />\n      </div>\n    </NarrowLayout>\n  )\n}\n\nexport default UserFollowers\n"],"sourceRoot":""}
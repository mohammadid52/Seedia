{"version":3,"sources":["utils/functions/index.js","../node_modules/lodash/map.js","../node_modules/lodash/_baseMap.js","hooks/useUser.ts","pages/project/ProjectView.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","getTags","filter","tags","getFromNowTime","time","moment","fromNow","arrayMap","require","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","baseEach","isArrayLike","index","result","Array","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Section","title","content","className","DescriptionItem","name","valueClassName","nameClassName","classNames","TopCard","websiteUrl","views","followingList","useFollow","following","addFollow","removeFollow","src","profilePicture","avatarPlaceholder","alt","business","location","address","city","country","email","onClick","mutate","label","gradient","size","link","ProjectView","projectId","useParams","fetchProjectById","project","company","salary","background","customMaxWidth","pageUrl","window","href","imageUrl","pageTitle","typeOfBusiness","description","briefDescription","keywords","website","sections","section","closure","functionType","min","max","duration","postedOn","summary","additionalInfo"],"mappings":"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","file":"static/js/47.ae5b2d17.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str\n      .split(' ')\n      .filter(\n        (tags) =>\n          tags !== 'in' ||\n          tags !== 'or' ||\n          tags !== 'of' ||\n          tags !== 'the' ||\n          tags !== 'is' ||\n          tags !== 'can' ||\n          tags !== 'so' ||\n          tags !== '.' ||\n          tags !== 'to'\n      )\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","import { fetchProjectById } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Loading from 'components/Loading'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useFollow from 'hooks/useFollow'\nimport useUser from 'hooks/useUser'\nimport { IParent, IProject, ISection } from 'interfaces/UniversalInterface'\nimport map from 'lodash/map'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { classNames } from 'utils/classNames'\nimport { getFromNowTime, getTags, join } from 'utils/functions'\n\nconst Section = ({ title, content }: ISection) => {\n  return (\n    <div className=\"my-8\">\n      {title && (\n        <h4 className=\"mb-4 font-semibold tracking-tight text-lg text-gray-900 dark:text-white\">\n          {title}\n        </h4>\n      )}\n      <p className=\"font-medium whitespace-pre-line tracking-tight text-base text-gray-600 dark:text-gray-400\">\n        {content}\n      </p>\n    </div>\n  )\n}\n\nconst DescriptionItem = ({\n  name,\n  value,\n  valueClassName,\n  nameClassName,\n}: {\n  name: string\n  value: string\n  valueClassName?: string\n  nameClassName?: string\n}) => {\n  return (\n    <div className=\"py-4 border-b border-gray-200 dark:border-gray-700 sm:py-5 sm:grid sm:grid-cols-2 sm:gap-4 \">\n      <dt\n        className={classNames(\n          nameClassName,\n          'text-sm uppercase font-medium gradient-text text-left'\n        )}\n      >\n        {name}\n      </dt>\n      <dd\n        className={classNames(\n          valueClassName,\n          'mt-1 text-sm dark:text-white text-right text-gray-900 sm:mt-0 sm:col-span-1'\n        )}\n      >\n        {value}\n      </dd>\n    </div>\n  )\n}\n\nconst TopCard = ({\n  userData,\n  iAmOwnerOfThisProfile,\n  websiteUrl,\n  views = 0,\n  followingList,\n}: {\n  userData?: IParent\n  iAmOwnerOfThisProfile: boolean\n\n  websiteUrl?: string\n  views?: number\n  followingList?: string[]\n}) => {\n  const { following, addFollow, removeFollow } = useFollow(\n    followingList,\n    userData._id\n  )\n\n  return (\n    <div>\n      <Card\n        className=\"p-6 \"\n        content={\n          <>\n            <div className=\"flex relative items-center justify-between\">\n              {iAmOwnerOfThisProfile && (\n                <span className=\"dark:text-gray-400 text-gray-400 italic text-sm absolute top-0 right-0 \">\n                  View count: {views}\n                </span>\n              )}\n              <div className=\"flex items-center space-x-12\">\n                <div className=\"\">\n                  <span className=\"sr-only\">13RMS</span>\n                  <img\n                    className=\"h-36 w-36 sm:h-36 sm:w-36 cursor-pointer rounded-full shadow-xl\"\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : avatarPlaceholder\n                    }\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"space-y-1\">\n                  <h1 className=\"text-2xl leading-6 font-semibold dark:text-white text-gray-900\">\n                    {userData?.business.name}\n                  </h1>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.location.address}, {userData?.location.city},{' '}\n                    {userData?.location.country}\n                  </h5>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.business.email}\n                  </h5>\n                </div>\n              </div>\n              <div className=\"absolute bottom-0 right-0\">\n                {!iAmOwnerOfThisProfile ? (\n                  <div className=\"grid grid-cols-2 gap-x-4\">\n                    <Button\n                      onClick={() =>\n                        !following\n                          ? addFollow.mutate(userData._id)\n                          : removeFollow.mutate(userData._id)\n                      }\n                      label=\"Follow\"\n                      gradient\n                      size=\"lg\"\n                      className=\"px-6\"\n                    />\n                    <Button\n                      label=\"Apply\"\n                      link={websiteUrl}\n                      gradient\n                      className=\"px-6\"\n                      size=\"lg\"\n                    />\n                  </div>\n                ) : (\n                  <span className=\"text-base leading-6 font-light  dark:text-gray-400 text-gray-600\">\n                    Others will see buttons here\n                  </span>\n                )}\n              </div>\n            </div>\n          </>\n        }\n      />\n    </div>\n  )\n}\n\nconst ProjectView = ({ userData }: { userData?: IParent }) => {\n  const params: any = useParams()\n  const projectId = params.projectId\n\n  const { isLoading, data, isFetched } = useQuery('project', () =>\n    fetchProjectById(projectId)\n  )\n  const project: IProject = isFetched && !isLoading ? data.data.data : {}\n\n  const { iAmOwnerOfThisProfile } = useUser(\n    project?.company?.profileUrl,\n    userData,\n    false\n  )\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  const company = project.company\n  const { salary, location } = project\n  const { business, background } = company\n\n  return (\n    <NarrowLayout userData={userData} customMaxWidth=\"max-w-7xl\">\n      <Meta\n        pageUrl={window.location.href}\n        imageUrl={company && company.profilePicture}\n        pageTitle={`${business.name} | ${business.typeOfBusiness} | Jobs | 13RMS `}\n        title={business.name}\n        description={project.briefDescription}\n        keywords={getTags(project.briefDescription)}\n        // userName={''}\n      />\n      <div className=\"flex flex-col gap-y-12\">\n        <TopCard\n          followingList={userData.following}\n          views={project.views}\n          websiteUrl={project.website}\n          iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n          userData={company}\n        />\n        <Card\n          content={\n            <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n              <div className=\"sm:col-span-2\">\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  Description\n                </h1>\n                <div className=\"whitespace-pre-line\">\n                  {project.briefDescription}\n                </div>\n                <br />\n                <div className=\"flex flex-col gap-y-4\">\n                  {map(project.sections, (section) => (\n                    <Section title={section.title} content={section.content} />\n                  ))}\n                  <Section title={''} content={project.closure} />\n                </div>\n              </div>\n              <div>\n                <h1 className=\"dark:text-white text-gray-900 text-2xl mb-4 font-semibold\">\n                  Function Description\n                </h1>\n                <dl className=\"\">\n                  <DescriptionItem\n                    name={'Function Type'}\n                    value={join(project.functionType, 'name')}\n                  />\n                  <DescriptionItem\n                    name={'Salary'}\n                    value={`${salary.min} - ${salary.max} / ${salary.duration}`}\n                  />\n                  <DescriptionItem\n                    name={'Location'}\n                    value={`${location?.city || '--'}, ${\n                      location?.country || '--'\n                    }`}\n                  />\n                  <DescriptionItem\n                    name={'Posted'}\n                    value={getFromNowTime(project.postedOn)}\n                  />\n                </dl>\n              </div>\n            </div>\n          }\n        />\n        <Card\n          content={\n            <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n              <div className=\"sm:col-span-2\">\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  About the company\n                </h1>\n                <div>\n                  <div className=\"sm:flex items-center\">\n                    <div className=\"mb-4 flex-shrink-0 sm:mb-0 sm:mr-4\">\n                      <img\n                        className=\"h-12 w-12  cursor-pointer  shadow-xl\"\n                        src={\n                          company?.profilePicture\n                            ? company?.profilePicture\n                            : avatarPlaceholder\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                    <h4 className=\"text-lg font-bold\">{business?.name}</h4>\n                  </div>\n                  <div className=\"mt-4\">\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {background?.summary || 'Test summary'}\n                    </p>\n                    <br />\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {business?.additionalInfo || 'Additional Info'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  Company Details\n                </h1>\n                <DescriptionItem name={'Company Size'} value={'100'} />\n                <DescriptionItem\n                  name={'Type of business'}\n                  value={business.typeOfBusiness}\n                />\n                <DescriptionItem name={'Year of foundation'} value={'2007'} />\n                <DescriptionItem\n                  valueClassName=\"underline cursor-pointer tracking-wider\"\n                  name={'Website'}\n                  value={project.website}\n                />\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </NarrowLayout>\n  )\n}\n\nexport default ProjectView\n"],"sourceRoot":""}
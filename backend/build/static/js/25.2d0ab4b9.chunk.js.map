{"version":3,"sources":["components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/animation/AnimatedDiv.tsx","components/alerts/Error.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","components/atoms/Divider.tsx","../../../src/hooks/use-computed.ts","../../../../src/components/listbox/listbox.tsx","components/alerts/Info.tsx","components/atoms/FormSelector.tsx","../node_modules/countrycitystatejson/index.js","pages/account/business/StepTwo.tsx"],"names":["FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","onClick","length","AnimatedDiv","children","delay","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","Error","errors","map","idx","navigation","href","Copyright","year","Date","getFullYear","item","Layout","title","subtitle","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","color","Divider","Icon","onBtnClick","style","height","useComputed","cb","dependencies","cbRef","useRef","useIsoMorphicEffect","ListboxStates","ActionTypes","reducers","activeOptionIndex","listboxState","Closed","Open","action","orientation","calculateActiveIndex","resolveItems","resolveActiveIndex","resolveId","resolveDisabled","searchQuery","match","option","options","dataRef","nextOptions","currentActiveOption","a","ListboxContext","createContext","useListboxContext","component","context","useContext","err","Listbox","stateReducer","DEFAULT_LISTBOX_TAG","props","horizontal","passThroughProps","reducerBag","useReducer","propsRef","current","labelRef","createRef","buttonRef","optionsRef","dispatch","useWindowEvent","event","CloseListbox","isFocusableElement","FocusableMode","slot","useMemo","open","State","render","defaultTag","Button","forwardRefWithAs","useSyncRefs","useId","d","useDisposables","handleKeyDown","useCallback","Keys","OpenListbox","focus","Focus","First","Last","handleKeyUp","handleClick","isDisabledReactIssue7711","preventScroll","labelledby","passthroughProps","propsWeControl","ref","onKeyDown","onKeyUp","OptionsRenderFeatures","Features","Options","searchDisposables","usesOpenClosedState","useOpenClosed","container","document","key","disposables","vertical","ArrowRight","Next","ArrowLeft","Previous","ClearSearch","role","tabIndex","features","Label","Option","active","selected","bag","select","block","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","Info","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","onBlur","as","Fragment","static","hasOwnProperty","classNames","db","require","compCities","getAll","getCountriesShort","res","push","getCountryByShort","shortName","getCountryInfoByShort","getStatesByShort","states","Object","keys","getCities","getCountries","obj","module","exports","yourhandle","BusinessStepTwo","userData","history","useHistory","isLoaded","saving","setSaving","countries","useEffect","other","accountFilled","links","FEED","checkAccount","validationSchema","Yup","matches","min","max","setErrors","setValues","useUserContext","user","console","log","accountType","accountFinishedStep","CHOOSE_TEMPLATE","BUSINESS_STEP_2","renderPathByType","CHOOSE_ACCOUNT","redirection","onSubmit","values","token","getAccessToken","updatedData","location","address","business","bussinessEntityType","network","post","headers","Authorization","message","initialValues","orderBy","fullWidth","loading","rounded","gradient","goBack"],"mappings":"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","file":"static/js/25.2d0ab4b9.chunk.js","sourcesContent":["import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","const Divider = ({\n  className,\n  withButton,\n  Icon,\n  text,\n  onBtnClick,\n}: {\n  className?: string\n  withButton?: boolean\n  Icon?: any\n  text?: string\n  onBtnClick?: () => void\n}) => {\n  return withButton ? (\n    <div className=\"relative\">\n      <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n        <div className=\"w-full border-t dark:border-gray-700 border-gray-400\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span\n          onClick={onBtnClick}\n          className={`${className} bg-white text-xs dark:bg-gray-900 px-2 text-gray-600`}\n        >\n          {text}\n          {Icon && <Icon />}\n        </span>\n      </div>\n    </div>\n  ) : (\n    <div\n      style={{ height: 1 }}\n      className={`my-4 dark:bg-gray-700 bg-gray-400 ${className}`}\n    />\n  )\n}\n\nexport default Divider\n","import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n","import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n\n  orientation: 'horizontal' | 'vertical'\n\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n  SetOrientation,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n    horizontal?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props\n  const orientation = horizontal ? 'horizontal' : 'vertical'\n\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetOrientation, orientation }), [\n    orientation,\n  ])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(listboxState, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passThroughProps,\n          slot,\n          defaultTag: DEFAULT_LISTBOX_TAG,\n          name: 'Listbox',\n        })}\n      </OpenClosedProvider>\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'aria-orientation'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.listboxState === ListboxStates.Open\n  })()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case match(state.orientation, { vertical: Keys.ArrowDown, horizontal: Keys.ArrowRight }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case match(state.orientation, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n","import { InformationCircleIcon } from '@heroicons/react/solid'\n\nconst Info = ({\n  text,\n  color = 'blue',\n  className = '',\n}: {\n  className?: string\n  text: string\n  color?: string\n}) => {\n  return (\n    <div\n      className={`rounded-md dark:bg-transparent dark:border-gray-700 border border-gray-50 bg-${color}-50 p-4 ${className}`}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <InformationCircleIcon\n            className={`h-5 w-5 dark:text-${color}-300 text-${color}-400`}\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n          <p\n            className={`text-sm pb-0 mb-0 dark:text-${color}-300 text-${color}-700`}\n          >\n            {text}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field.value.length > 0\n                  ? field.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","const db = require('./lib/compiledCities.json')\n\nvar compCities = {\n\n  getAll: () => { return db },\n  getCountriesShort: () => {\n    let res = []\n    for (var key in db) {\n      res.push(key)\n    }\n    return res\n  },\n  getCountryByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      return db[shortName]\n    } else {\n      return null\n    }\n  },\n  getCountryInfoByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          res[key] = db[shortName][key]\n        }\n      }\n      return res\n    } else {\n      return null\n    }\n  },\n  getStatesByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = []\n      if (typeof db[shortName].states !== 'undefined') {\n        res = Object.keys(db[shortName].states)\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCities: (shortName, state) => {\n    if (typeof db[shortName] !== 'undefined') {\n      if (typeof db[shortName].states != 'undefined') {\n        let res=[]\n        for (let idx in  db[shortName].states[state]) {\n          res.push(db[shortName].states[state][idx].name)\n        }\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCountries: () => {\n    let res = []\n    for (var shortName in db) {\n      let obj = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          obj.shortName = shortName\n          obj[key] = db[shortName][key]\n        }\n      }\n      res.push(obj)\n    }\n    return res\n  }\n}\n\nmodule.exports = compCities\n","import { useEffect, useState } from 'react'\nimport Loading from 'components/Loading'\nimport Button from 'components/atoms/Button'\nimport { useHistory } from 'react-router-dom'\nimport FormInput from 'components/atoms/FormInput'\nimport Info from 'components/alerts/Info'\nimport Divider from 'components/atoms/Divider'\nimport TextButton from 'components/atoms/TextButton'\nimport { links } from 'constants/Links'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { BusinessStepTwoFields } from 'initials'\nimport Layout from 'containers/Layout'\nimport FormSelector from 'components/atoms/FormSelector'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport Error from 'components/alerts/Error'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useUserContext } from 'context/UserContext'\nimport { orderBy } from 'lodash'\nconst yourhandle = require('countrycitystatejson')\n\nconst BusinessStepTwo = ({ userData }: { userData: IParent }) => {\n  const history = useHistory()\n  const [isLoaded] = useState(true)\n\n  const [saving, setSaving] = useState(false)\n  const countries = yourhandle.getCountries()\n\n  /**\n   * Check if account is already selected\n   */\n  const checkAccount = () => {\n    if (\n      userData &&\n      userData?.other?.hasOwnProperty('accountFilled') &&\n      userData?.other?.accountFilled\n    ) {\n      return history.push(links.FEED)\n    }\n  }\n\n  useEffect(() => {\n    checkAccount()\n  }, [])\n\n  const validationSchema = Yup.object({\n    businessCountry: Yup.string().required('Please select business country'),\n    businessAddress: Yup.string().required('Please enter business address'),\n    postalCode: Yup.string()\n      .required('Postal code is a required field')\n      .matches(/^[0-9]+$/, 'Must be only digits')\n      .min(6, 'Must be exactly 6 digits')\n      .max(6, 'Must be exactly 6 digits'),\n    city: Yup.string().required(),\n    businessEntityType: Yup.string().required(\n      'Please enter business entity type'\n    ),\n    typeOfBusiness: Yup.string().required('Please enter type of business'),\n    relationshipToBusiness: Yup.string().required(\n      'Please enter your relationship with business'\n    ),\n    legalNumber: Yup.string()\n      .matches(/^[0-9+()-]+$/, 'Must be only digits')\n      .required('Please enter business legal number'),\n    mobileNumber: Yup.string()\n      .matches(/^[0-9+()-]+$/, 'Must be only digits')\n      .required('Please enter business legal number'),\n  })\n\n  const [errors, setErrors] = useState<string[]>([])\n  const { setValues } = useUserContext()\n\n  const redirection = () => {\n    const user = userData\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountType === 'business') {\n          if (user.other?.accountFinishedStep === 'business-step-2') {\n            // redirect to choose template page\n            console.log('redirect to choose template page')\n            return history.push(links.CHOOSE_TEMPLATE)\n          } else if (user.other?.accountFinishedStep === 'business-step-1') {\n            // redirect to location page\n            console.log('redirect to location page')\n            return history.push(links.BUSINESS_STEP_2)\n          } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n            console.log('get the accountType and redirect as per account type')\n            // get the accountType and redirect as per account type\n            return history.push(renderPathByType(user.other?.accountType))\n          } else if (user.other?.accountFinishedStep === 'signup') {\n            // redirect to choose Account page\n            console.log('redirect to choose Account page')\n            return history.push(links.CHOOSE_ACCOUNT)\n          }\n        } else {\n          if (user && user.other) {\n            console.log('get the accountType and redirect as per account type')\n            // get the accountType and redirect as per account type\n            return history.push(renderPathByType(user.other.accountType))\n          }\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [userData?.other?.accountFilled, userData?.other?.accountFinishedStep])\n\n  const onSubmit = async (values: typeof BusinessStepTwoFields) => {\n    try {\n      const token = getAccessToken()\n\n      setSaving(true)\n\n      const updatedData = {\n        ...userData,\n        other: {\n          ...userData.other,\n          accountFinishedStep: 'business-step-2',\n          accountFilled: false,\n        },\n        location: {\n          ...userData.location,\n          country: values.businessCountry,\n          address: values.businessAddress,\n          postalCode: values.postalCode,\n          city: values.city,\n        },\n        business: {\n          ...userData.business,\n          additionalInfo: values.additionalInfo,\n          legalNumber: values.legalNumber,\n          businessRegNumber: values.businessRegNumber,\n          typeOfBusiness: values.typeOfBusiness,\n          bussinessEntityType: values.businessEntityType,\n          relationshipToBusiness: values.relationshipToBusiness,\n        },\n        mobileNumber: values.mobileNumber,\n      }\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n      await network.post(\n        '/user/update',\n        { ...updatedData },\n        {\n          headers: { Authorization: token },\n        }\n      )\n      history.push(links.CHOOSE_TEMPLATE)\n    } catch (error) {\n      // @ts-ignore\n      setErrors([error.message])\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout title=\"Contact information for your company\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\"\n      >\n        <div className=\"mb-4\">\n          <Info text=\"Please provide your legally registered business address and telephone number\" />\n        </div>\n        <div className=\"bg-white dark:bg-gray-900 border dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={BusinessStepTwoFields}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormSelector\n                label=\"Legal business country\"\n                list={orderBy(countries, ['name', 'asc'])}\n                name=\"businessCountry\"\n                required\n                placeholder=\"Select country\"\n              />\n              <FormInput\n                label=\"Legal business address\"\n                id=\"businessAddress\"\n                name=\"businessAddress\"\n                placeholder=\"eg. 185 Race Ave. Cape Coral, FL\"\n                required\n              />\n              <FormInput\n                label=\"Additional information\"\n                id=\"additionalInfo\"\n                optional\n                placeholder=\"eg. We are specialist in computer hardwares\"\n                name=\"additionalInfo\"\n              />\n              <div className=\"mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\n                <FormInput\n                  gridClass=\"sm:col-span-3\"\n                  label=\"Postal Code\"\n                  id=\"postalCode\"\n                  name=\"postalCode\"\n                  placeholder=\"78418\"\n                  required\n                />\n\n                <FormInput\n                  gridClass=\"sm:col-span-3\"\n                  label=\"City\"\n                  id=\"city\"\n                  placeholder=\"Bridgewater\"\n                  required\n                  name=\"city\"\n                />\n              </div>\n\n              <div>\n                <FormInput\n                  label=\"Legal phone number\"\n                  id=\"legalNumber\"\n                  placeholder=\"+91 (123) 456-7890\"\n                  required\n                  name=\"legalNumber\"\n                />\n              </div>\n\n              <Divider />\n\n              <div>\n                <FormSelector\n                  name=\"typeOfBusiness\"\n                  list={[\n                    { name: 'Test business 1' },\n                    { name: 'Test business 2' },\n                  ]}\n                  placeholder=\"Select type of business\"\n                  label=\"Type of business\"\n                  required\n                />\n              </div>\n              <div>\n                <FormSelector\n                  name=\"businessEntityType\"\n                  list={[\n                    { name: 'Test business entity 1' },\n                    { name: 'Test business entity 2' },\n                  ]}\n                  placeholder=\"Select business entity\"\n                  required\n                  label=\"Business entity type\"\n                />\n              </div>\n\n              <div>\n                <FormInput\n                  label=\"Company registration number\"\n                  optional\n                  id=\"businessRegNumber\"\n                  name=\"businessRegNumber\"\n                />\n              </div>\n              <Divider />\n              <h5 className=\"font-semibold dark:text-white text-lg\">\n                Your contact details\n              </h5>\n              <p className=\"text-base dark:text-gray-400 text-gray-500\">\n                We use this information to message you about account activity or\n                other matters that require your attention.\n              </p>\n\n              <div>\n                <FormSelector\n                  name=\"relationshipToBusiness\"\n                  list={[\n                    { name: 'Owner' },\n                    { name: 'CEO' },\n                    { name: 'Human Resources Manager' },\n                    { name: 'Business Administrator' },\n                  ]}\n                  required\n                  label=\"Relationship to business\"\n                  placeholder=\"Select relationship\"\n                />\n              </div>\n              <div>\n                <FormInput\n                  label=\"Mobile phone\"\n                  id=\"mobileNumber\"\n                  placeholder=\"+91 (123) 456-7890\"\n                  required\n                  name=\"mobileNumber\"\n                />\n              </div>\n\n              <div hidden={errors.length === 0}>\n                <Error errors={errors} />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  type=\"submit\"\n                  loading={saving}\n                  rounded=\"rounded-lg\"\n                  gradient\n                  label=\"Get on\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          onClick={history.goBack}\n          text=\"Go back\"\n          className=\"inline-block mt-4\"\n        />\n        {/* </div> */}\n        {/* <Copyright /> */}\n      </AnimatedDiv>\n    </Layout>\n  )\n}\nexport default BusinessStepTwo\n"],"sourceRoot":""}
{"version":3,"sources":["utils/functions/index.js","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/NormalFormInput.tsx","components/alerts/Error.tsx","components/atoms/Title.tsx","components/alerts/Info.tsx","components/List.tsx","pages/request/PlaceRequest.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","onClick","NormalFormInput","fullWidth","autoComplete","success","props","onKeyDown","onKeyPress","onKeyUp","Error","errors","idx","Title","children","size","fontWeight","textColor","isLoading","Info","text","color","List","min","max","initialValues","helpers","features","setFeatures","useEffect","setTouched","$setError","setError","featureField","setFeatureField","feature","featureId","remove","f","prev","push","nanoid","undefined","invert","gradient","PlaceRequest","userData","validationSchema","Yup","title","description","skills","background","setNotification","useNotifications","useMutation","addRequest","onSuccess","firstName","buttonText","buttonUrl","links","viewStore","profileUrl","mutate","isError","isSuccess","isBusiness","useAccountType","skillsError","setSkillsError","history","useHistory","getProfileById","other","template","onSubmit","values","a","updatedValues","skill","pageTitle","rounded","loading","toString"],"mappings":"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","file":"static/js/45.d037167e.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\n\nconst Title = ({\n  className,\n  children,\n  size = 'text-3xl',\n  fontWeight = 'font-semibld',\n  textColor = 'text-gray-900 dark:text-white',\n  isLoading = false,\n}: {\n  className?: string\n  size?: string\n  isLoading?: boolean\n  textColor?: string\n  fontWeight?: string\n  children: React.ReactNode\n}) => {\n  if (isLoading) {\n    return (\n      <div\n        className={`h-4 animate-pulse bg-gray-400 rounded ${className} ${size} ${fontWeight} ${textColor}`}\n      ></div>\n    )\n  }\n  return (\n    <h1 className={`${className} ${size} ${fontWeight} ${textColor}`}>\n      {children}\n    </h1>\n  )\n}\n\nexport default Title\n","import { InformationCircleIcon } from '@heroicons/react/solid'\n\nconst Info = ({\n  text,\n  color = 'blue',\n  className = '',\n}: {\n  className?: string\n  text: string\n  color?: string\n}) => {\n  return (\n    <div\n      className={`rounded-md dark:bg-transparent dark:border-gray-700 border border-gray-50 bg-${color}-50 p-4 ${className}`}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <InformationCircleIcon\n            className={`h-5 w-5 dark:text-${color}-300 text-${color}-400`}\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n          <p\n            className={`text-sm pb-0 mb-0 dark:text-${color}-300 text-${color}-700`}\n          >\n            {text}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info\n","import Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { useField } from 'formik'\nimport { map } from 'lodash'\nimport remove from 'lodash/remove'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useState } from 'react'\nimport { BiTrashAlt } from 'react-icons/bi'\nconst List = ({\n  name,\n  label,\n  placeholder,\n  min = 10,\n  max = 150,\n  initialValues,\n}: {\n  placeholder?: string\n  name: string\n  label?: string\n  min?: number\n  initialValues?: { name: string; id: string }[]\n  max?: number\n}) => {\n  const [field, meta, helpers] = useField(name)\n\n  const [features, setFeatures] = useState<{ name: string; id: string }[]>([])\n\n  useEffect(() => {\n    if (initialValues) {\n      setFeatures([...initialValues])\n    }\n  }, [initialValues])\n\n  const { setTouched, setError: $setError, setValue } = helpers\n  const [error, setError] = useState('')\n\n  const [featureField, setFeatureField] = useState('')\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFeatureField(e.target.value)\n    $setError(``)\n    setError(``)\n  }\n\n  const onFeatureAdd = () => {\n    if (featureField.length >= min && featureField.length < max) {\n      setError('')\n      features.push({ name: featureField, id: nanoid(4) })\n      setFeatures((prev) => [...prev])\n\n      setValue([...features])\n      setTouched(true)\n      $setError(undefined)\n      setFeatureField('')\n    } else {\n      if (featureField.length >= min) {\n        setError(`${name} text must be at least ${min} characters`)\n      } else if (featureField.length < max) {\n        setError(`${name} text cannot be longer than ${max} characters`)\n      }\n    }\n  }\n\n  const onFeatureRemove = (featureId: string) => {\n    remove(features, (f) => f.id === featureId)\n    setFeatures((prev) => [...prev])\n  }\n\n  return (\n    <div>\n      {features && features.length > 0 && (\n        <ol className=\"space-y-4 border dark:border-gray-700 border-gray-200 rounded-lg p-4  list-disc \">\n          {map(features, (feature) => (\n            <li\n              className=\"flex items-center on-hover-container relative text-gray-900 dark:text-white  cursor-pointer text-left\"\n              key={feature.id}\n            >\n              <div className=\"\">\n                <span className=\"block text-gray-900 dark:text-gray-400 text-sm font-normal\">\n                  {feature.name}\n                </span>\n              </div>\n\n              <span\n                onClick={() => onFeatureRemove(feature.id)}\n                className=\"absolute on-hover-item  pr-4 right-0\"\n              >\n                <BiTrashAlt className=\"hover:bg-gray-700 p-2 h-8 w-8  rounded-md text-red-500\" />\n              </span>\n            </li>\n          ))}\n        </ol>\n      )}\n      <div\n        className={`flex mt-4 justify-start  ${\n          !error ? 'items-end' : 'items-center'\n        } rounded-md  gap-2`}\n      >\n        <NormalFormInput\n          error={error}\n          label={`Add ${label || name}`}\n          value={featureField}\n          id=\"tags\"\n          placeholder={`Enter ${placeholder || name}`}\n          fullWidth\n          className=\"w-full capitalize\"\n          onChange={onChange}\n        />\n\n        <Button\n          onClick={onFeatureAdd}\n          size=\"lg\"\n          invert\n          className=\"w-32\"\n          gradient\n          label=\"+ Add\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default List\n","import { addRequest } from 'apis/mutations'\nimport Error from 'components/alerts/Error'\nimport Info from 'components/alerts/Info'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Title from 'components/atoms/Title'\nimport List from 'components/List'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent, IRequest } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst PlaceRequest = ({ userData }: { userData: IParent }) => {\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Title is required').min(10).max(150),\n    description: Yup.string()\n      .required('Description is required')\n      .min(50)\n      .max(600),\n  })\n\n  // @ts-ignore\n  const initialValues: IRequest = {\n    title: '',\n    description: '',\n    skills: userData?.background?.skills || [],\n  }\n  const { setNotification } = useNotifications()\n\n  const { mutate, isLoading, isError, error, isSuccess } = useMutation(\n    addRequest,\n    {\n      onSuccess: () => {\n        setNotification({\n          show: true,\n          title: `Dear ${userData.firstName}. You have successfully placed a request on your profile. This will be seen by other users`,\n          buttonText: 'View',\n          buttonUrl: links.viewStore(userData.profileUrl),\n        })\n      },\n    }\n  )\n  const { isBusiness } = useAccountType(userData)\n\n  const [skillsError, setSkillsError] = useState('')\n\n  const history = useHistory()\n  useEffect(() => {\n    if (isSuccess || isBusiness) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1\n        )\n      )\n    }\n  }, [isSuccess, isBusiness])\n\n  const onSubmit = async (values: any) => {\n    if (values.skills.length > 0) {\n      const updatedValues = {\n        ...values,\n        skills: values.skills.map((skill: { name: string }) => skill.name),\n      }\n      mutate(updatedValues)\n      setSkillsError('')\n    } else {\n      setSkillsError('Add atleast one skill')\n    }\n  }\n\n  return (\n    <NarrowLayout>\n      <Meta pageTitle=\"Place Request | Jobs | 13RMS\" />\n      <Title fontWeight=\"font-bold mb-8\">Place Request</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-8\">\n          <Info text=\"Job/Work Title and Skills are very important for more views and jobs. Try to add more keywords related to your skills in it. Like Javascript, etc.\" />\n\n          <FormInput\n            label=\"Title\"\n            id=\"title\"\n            name=\"title\"\n            required\n            placeholder=\"Add title\"\n          />\n\n          <FormInput\n            label=\"Description\"\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Give a little information about your niche\"\n            required\n            textarea\n            rows={5}\n            cols={255}\n          />\n          <List\n            initialValues={userData?.background?.skills}\n            min={3}\n            max={20}\n            name=\"skills\"\n            placeholder=\"skill\"\n          />\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={isLoading}\n              gradient\n              size=\"lg\"\n              label=\"Submit\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n          {!isError && skillsError && (\n            <Error errors={[skillsError.toString()]} />\n          )}\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default PlaceRequest\n"],"sourceRoot":""}
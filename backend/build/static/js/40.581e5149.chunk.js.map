{"version":3,"sources":["components/atoms/Modal.tsx","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/alerts/Error.tsx","components/Dropdown/Dropdown.tsx","components/Spinner.tsx","assets/svg/placeholder.png","components/Tabs.tsx","hooks/useTabs.ts","assets/svg/no-groups.svg","components/animation/AnimatedContainer.tsx","pages/groups/CreateGroup.tsx","pages/groups/GroupsView.tsx"],"names":["Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","FormError","error","FormInput","label","id","name","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","length","Error","errors","map","idx","Dropdown","list","Button","Items","item","Item","active","stopPropagation","classNames","Icon","Spinner","Tabs","tabs","currentTab","setCurrentTab","defaultValue","find","tab","tabIndex","useTabs","initCurrentTab","helpers","AnimatedContainer","animationType","duration","customAnimation","fixWidth","hide","genAnimation","CreateGroup","onSuccess","refetchGroup","groupData","userData","validationSchema","Yup","groupName","min","max","groupDescription","initialValues","groupRules","formRef","useRef","setNotification","useNotifications","useMutation","createGroup","data","group","title","firstName","buttonText","buttonUrl","links","groupById","_id","mutate","isLoading","isError","isSuccess","upload","uploadMultipleImages","a","b","finalImageList","img","current","values","coverPhoto","originalname","location","profilePhoto","useEffect","uploadFunction","fd","FormData","append","setTimeout","editMode","isEmpty","setCoverPhoto","coverPicture","setProfilePhoto","profilePicture","onSubmit","profileImageSelectorRef","coverImageSelectorRef","ref","files","accept","enableReinitialize","innerRef","alt","click","showFileExplorerForCover","src","URL","createObjectURL","showFileExplorerForProfile","avatarPlaceholder","rounded","loading","gradient","size","toString","NoGroups","IdleUser","GroupItem","userId","dropdownList","navigator","clipboard","writeText","window","origin","isOwner","createdBy","href","members","Groups","groups","GroupsView","useQuery","fetchGroups","isFetched","refetch","requestedGroups","fetchRequestedGroups","requestedGroupsData","localGroups","setLocalGroups","onYourGroups","onRequested","groupsLen","showCreateGroupModal","setShowCreateGroupModal","NarrowLayout","customMaxWidth","Meta","pageTitle","Card","content","invert"],"mappings":"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","file":"static/js/40.581e5149.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-4\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import { classNames } from 'utils/classNames'\n\nexport interface ITab {\n  name: string\n}\n\nexport interface TabsProps {\n  tabs: ITab[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Tabs = ({ tabs, currentTab, setCurrentTab }: TabsProps) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n          defaultValue={tabs.find((tab) => tab.name === currentTab).name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab.name}>{tab.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                tabIndex={0}\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  currentTab === tab.name\n                    ? ' gradient-text border-b-2 dark:border-pink-700 border-pink-200'\n                    : 'dark:hover:text-pink-600 border-transparent border-b-2 text-gray-500 hover:text-gray-700 dark:hover:border-gray-600 hover:border-gray-300',\n                  'whitespace-nowrap py-4 cursor-pointer px-1  font-medium text-sm'\n                )}\n              >\n                {tab.name}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import { ITab } from 'components/Tabs'\nimport { useState } from 'react'\n\nconst useTabs = (tabs: ITab[]) => {\n  const initCurrentTab = tabs[0].name\n  const [currentTab, setCurrentTab] = useState(initCurrentTab)\n\n  const helpers = tabs.map((tab) => tab.name === currentTab)\n\n  return { currentTab, setCurrentTab, helpers }\n}\n\nexport default useTabs\n","export default __webpack_public_path__ + \"static/media/no-groups.3aa1c7b9.svg\";","import { classNames } from 'utils/classNames'\n\nconst AnimatedContainer = ({\n  children,\n  show,\n  animationType = 'scale',\n  duration = '300',\n  className,\n  customAnimation,\n  fixWidth = false,\n}: {\n  show: boolean\n  fixWidth?: boolean\n  className?: string\n  customAnimation?: { show: string; hide: string }\n  children: React.ReactNode\n  duration?: '150' | '200' | '300' | '500' | '700' | '1000' | string\n  animationType?: 'slider' | 'opacity' | 'scale' | 'translateY' | string\n}) => {\n  const genAnimation = () => {\n    switch (animationType) {\n      case 'slider':\n        return show\n          ? 'opacity-100 translate-x-0'\n          : 'opacity-0 -translate-x-full'\n      case 'opacity':\n        return show ? 'opacity-100' : 'opacity-0'\n      case 'scale':\n        return show ? 'scale-100 opacity-100' : 'scale-95 opacity-0'\n      case 'translateY':\n        return show ? 'translate-y-0 opacity-100' : '-translate-y-3 opacity-0'\n      case 'custom':\n        return show ? customAnimation.show : customAnimation.hide\n\n      default:\n        return show\n          ? 'opacity-100 translate-x-0'\n          : 'opacity-0 -translate-x-full'\n    }\n  }\n  return (\n    <div\n      className={classNames(\n        genAnimation(),\n        'transition-all  transform',\n        `duration-${duration}`,\n        fixWidth ? (show ? className : 'w-0') : className\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default AnimatedContainer\n","import { createGroup, uploadMultipleImages } from 'apis/mutations'\nimport placeholder from 'assets/svg/placeholder.png'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport { isEmpty, map } from 'lodash'\nimport { useEffect, useRef, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport * as Yup from 'yup'\n\nconst CreateGroup = ({\n  onSuccess,\n  refetchGroup,\n  groupData = null,\n  userData,\n}: {\n  onSuccess?: () => void\n  refetchGroup: any\n  groupData?: IGroup\n  userData: IParent\n}) => {\n  const validationSchema = Yup.object({\n    groupName: Yup.string().required('Group Name is required').min(10).max(150),\n    groupDescription: Yup.string()\n      .required('Group Description is required')\n      .min(10)\n      .max(150),\n  })\n\n  // @ts-ignore\n  const initialValues: IGroup = {\n    groupName: groupData?.groupName || '',\n    groupDescription: groupData?.groupDescription || '',\n    groupRules: groupData?.groupRules || '',\n  }\n\n  const formRef = useRef()\n  const { setNotification } = useNotifications()\n\n  const { mutate, isLoading, isError, error, isSuccess } = useMutation(\n    createGroup,\n    {\n      onSuccess: (data) => {\n        const group = data?.data?.data\n        const groupName = group?.groupName\n        setNotification({\n          show: true,\n          title: `Dear ${userData.firstName}. You have successfully created the group ${groupName} `,\n          buttonText: 'View',\n          buttonUrl: links.groupById(group._id),\n        })\n        refetchGroup()\n      },\n    }\n  )\n\n  const upload = useMutation(uploadMultipleImages, {\n    onSuccess: (a, b) => {\n      const finalImageList: any[] = map(a.data.data, (img, idx: number) => img)\n      // @ts-ignore\n      if (formRef?.current && formRef?.current?.values) {\n        mutate({\n          // @ts-ignore\n          ...formRef?.current?.values,\n          coverPhoto: finalImageList.find(\n            (img) => img.originalname === coverPhoto.name\n          )?.location,\n\n          profilePhoto: finalImageList.find(\n            (img) => img.originalname === profilePhoto.name\n          )?.location,\n        })\n      }\n    },\n  })\n\n  useEffect(() => {\n    if (isSuccess && upload.isSuccess) {\n      onSuccess()\n    }\n  }, [isSuccess, upload.isSuccess])\n\n  const uploadFunction = () => {\n    const fd = new FormData()\n\n    fd.append('images', profilePhoto)\n    fd.append('images', coverPhoto)\n\n    setTimeout(() => {\n      upload.mutate(fd)\n    }, 500)\n  }\n\n  const editMode = !isEmpty(groupData)\n\n  useEffect(() => {\n    if (editMode) {\n      setCoverPhoto(groupData?.coverPicture)\n      setProfilePhoto(groupData?.profilePicture)\n    }\n  }, [editMode])\n\n  const onSubmit = async (values: any) => {\n    uploadFunction()\n  }\n\n  const profileImageSelectorRef = useRef()\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageSelectorRef = useRef()\n\n  const showFileExplorerForCover = () =>\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n\n  const [profilePhoto, setProfilePhoto] = useState<any>()\n\n  const [coverPhoto, setCoverPhoto] = useState<any>()\n\n  return (\n    <div className=\"px-1\">\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e) => setCoverPhoto(e.target.files[0])}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e) => setProfilePhoto(e.target.files[0])}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize\n        innerRef={formRef}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-6\">\n          <div className=\" overflow-hidden  bg-white dark:bg-gray-900\">\n            <div className=\"relative  group\">\n              <div className=\"absolute top-0 right-0 p-4\">\n                <AiOutlineEdit className=\"bg-gray-100   transition-all hover:bg-gray-300 duration-300 rounded-full p-2 text-gray-700 h-8 w-8\" />\n              </div>\n              <img\n                alt=\"\"\n                onClick={() => showFileExplorerForCover()}\n                src={\n                  coverPhoto\n                    ? editMode\n                      ? coverPhoto\n                      : URL.createObjectURL(coverPhoto)\n                    : placeholder\n                }\n                className=\"w-full lg:h-36 sm:h-24 object-cover h-20\"\n              />\n            </div>\n            <div className=\"flex  relative justify-start mr-8 ml-4 -mt-12\">\n              <img\n                onClick={() => showFileExplorerForProfile()}\n                alt=\"\"\n                src={\n                  profilePhoto\n                    ? editMode\n                      ? profilePhoto\n                      : URL.createObjectURL(profilePhoto)\n                    : avatarPlaceholder\n                }\n                className=\" border-solid lg:h-24 lg:w-24 h-16 w-16  border-white border-2 -mt-3\"\n              />\n            </div>\n          </div>\n          <FormInput\n            label=\"Group Name\"\n            id=\"groupName\"\n            name=\"groupName\"\n            required\n            placeholder=\"Add group name\"\n          />\n\n          <FormInput\n            label=\"Description\"\n            id=\"groupDescription\"\n            name=\"groupDescription\"\n            placeholder=\"What is the purpose of this group?\"\n            textarea\n            rows={2}\n            cols={255}\n          />\n          <FormInput\n            label=\"Group rules\"\n            id=\"groupRules\"\n            name=\"groupRules\"\n            placeholder=\"Set the tone and expectations of your group\"\n            textarea\n            rows={2}\n            cols={255}\n          />\n\n          <div className=\"flex  items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={upload.isLoading || isLoading}\n              disabled={upload.isLoading || isLoading}\n              gradient\n              size=\"lg\"\n              label=\"Submit\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n        </Form>\n      </Formik>\n    </div>\n  )\n}\n\nexport default CreateGroup\n","import { fetchGroups, fetchRequestedGroups } from 'apis/queries'\nimport IdleUser from 'assets/svg/no-groups.svg'\nimport AnimatedContainer from 'components/animation/AnimatedContainer'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Modal from 'components/atoms/Modal'\nimport Dropdown from 'components/Dropdown/Dropdown'\nimport Spinner from 'components/Spinner'\nimport Tabs from 'components/Tabs'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useTabs from 'hooks/useTabs'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport CreateGroup from 'pages/groups/CreateGroup'\nimport { useEffect, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst NoGroups = () => (\n  <div className=\"m-4 text-center flex items-center justify-center flex-col\">\n    <img\n      src={IdleUser}\n      alt=\"\"\n      className=\"h-28 sm:h-32 lg:h-36 xl:h-40 w-full\"\n    />\n    <h3 className=\"mt-4 text-xl font-medium dark:text-gray-300 text-gray-900\">\n      Discover groups\n    </h3>\n    <p className=\"mt-1 text-base text-gray-500\">\n      Find other trusted communities that share and support your goals.\n    </p>\n    <div className=\"mt-6\">\n      <Button\n        size=\"sm\"\n        //   invert\n        rounded=\"rounded-full\"\n        label={'Discover'}\n        gradient\n        onClick={() => {}}\n      />\n    </div>\n  </div>\n)\n\nconst GroupItem = ({ group, userId }: { group: IGroup; userId: string }) => {\n  const dropdownList = [\n    {\n      id: '1',\n      name: 'Copy link to group',\n      onClick: () => {\n        navigator.clipboard.writeText(\n          window.origin + links.groupById(group._id)\n        )\n      },\n    },\n    {\n      id: '2',\n      name: 'Update your settings',\n      onClick: () => {},\n    },\n    {\n      id: '3',\n      name: `Leave this group`,\n      onClick: () => {},\n    },\n  ]\n  const isOwner = group?.createdBy?.toString() === userId\n\n  return (\n    <li key={group._id}>\n      <div className=\"block border-b border-gray-200 dark:border-gray-700 pt-2\">\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n          <img\n            alt=\"\"\n            src={\n              group.profilePicture ? group.profilePicture : avatarPlaceholder\n            }\n            className=\"h-14 w-14  2 -mt-3\"\n          />\n          <div className=\"min-w-0 ml-2 flex-1 sm:flex sm:items-center sm:justify-between\">\n            <div className=\"truncate\">\n              <div className=\"flex text-sm relative\">\n                <a\n                  href={links.groupById(group._id)}\n                  className=\"font-medium  hover:underline text-lg dark:text-gray-300 text-gray-900 truncate\"\n                >\n                  {group.groupName}\n                </a>\n                {isOwner && (\n                  <div className=\"ml-2 flex-shrink-0 flex\">\n                    <p className=\"px-2 inline-flex text-sm items-center justify-center leading-5 font-semibold rounded-md bg-gray-100 text-gray-800 dark:bg-gray-600 dark:text-gray-200\">\n                      Owner\n                    </p>\n                  </div>\n                )}\n              </div>\n              <div className=\"mt-0 flex text-sm text-gray-600 dark:text-gray-500\">\n                {group.members.length}{' '}\n                {group.members.length > 1 ? 'members' : 'member'}\n              </div>\n            </div>\n          </div>\n          <div className=\"relative z-10\">\n            <Dropdown list={dropdownList} />\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nconst Groups = ({ groups, userId }: { groups: IGroup[]; userId: string }) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800\">\n      <ul className=\"\">\n        {groups.map((group) => {\n          return <GroupItem group={group} userId={userId} />\n        })}\n      </ul>\n    </div>\n  )\n}\n\nconst tabs = [{ name: 'Your groups' }, { name: 'Requested' }]\n\nconst GroupsView = ({ userData }: { userData: IParent }) => {\n  const { data, isLoading, isFetched, refetch } = useQuery(\n    'group-list',\n    fetchGroups\n  )\n  const requestedGroups = useQuery('requested-group-list', fetchRequestedGroups)\n\n  const groups: IGroup[] = isFetched && !isLoading ? data?.data?.data : []\n  const requestedGroupsData: IGroup[] =\n    requestedGroups.isFetched && !requestedGroups.isLoading\n      ? requestedGroups.data?.data?.data\n      : []\n\n  const [localGroups, setLocalGroups] = useState([])\n\n  const { currentTab, setCurrentTab, helpers } = useTabs(tabs)\n  const [onYourGroups, onRequested] = helpers\n\n  useEffect(() => {\n    if (onYourGroups) {\n      if (groups && groups.length > 0) {\n        setLocalGroups([...groups])\n      } else {\n        setLocalGroups([])\n      }\n    }\n  }, [groups, onYourGroups])\n\n  useEffect(() => {\n    if (onRequested) {\n      if (requestedGroupsData && requestedGroupsData.length > 0) {\n        setLocalGroups([...requestedGroupsData])\n      } else {\n        setLocalGroups([])\n      }\n    }\n  }, [requestedGroupsData, onRequested])\n\n  const groupsLen = localGroups ? localGroups.length : 0\n\n  const [showCreateGroupModal, setShowCreateGroupModal] = useState(false)\n\n  return (\n    <NarrowLayout userData={userData} customMaxWidth=\"max-w-7xl\">\n      <Modal\n        setOpen={setShowCreateGroupModal}\n        header=\"Create group\"\n        open={showCreateGroupModal}\n      >\n        <div className=\" min-w-132 max-w-164 min-h-56 max-h-132 overflow-y-auto\">\n          <CreateGroup\n            userData={userData}\n            refetchGroup={refetch}\n            onSuccess={() => setShowCreateGroupModal(false)}\n          />\n        </div>\n      </Modal>\n      <Meta\n        pageTitle={`(${groupsLen}) Groups | 13RMS`}\n        title={`(${groupsLen}) Groups | 13RMS`}\n      />\n      <Card\n        content={\n          <div className=\"\">\n            <div className=\"border-b flex items-center justify-between border-gray-200 dark:border-gray-700\">\n              <Tabs\n                tabs={tabs}\n                currentTab={currentTab}\n                setCurrentTab={setCurrentTab}\n              />\n              <Button\n                size=\"md\"\n                rounded=\"rounded-full\"\n                label={'Create group'}\n                onClick={() => setShowCreateGroupModal(true)}\n                gradient\n                invert\n              />\n            </div>\n            {isLoading && !isFetched ? (\n              <Spinner />\n            ) : localGroups.length > 0 ? (\n              <div className=\"mt-4\">\n                <AnimatedContainer show={onYourGroups}>\n                  {onYourGroups && (\n                    <Groups userId={userData._id} groups={localGroups} />\n                  )}\n                </AnimatedContainer>\n                <AnimatedContainer show={onRequested}>\n                  {onRequested && (\n                    <Groups groups={localGroups} userId={userData._id} />\n                  )}\n                </AnimatedContainer>\n              </div>\n            ) : (\n              <NoGroups />\n            )}\n          </div>\n        }\n      />\n    </NarrowLayout>\n  )\n}\n\nexport default GroupsView\n"],"sourceRoot":""}
{"version":3,"sources":["assets/svg/placeholder.png","components/alerts/Info.tsx","components/atoms/Label.tsx","pages/store/BannerImage.tsx","pages/store/OpenStore.tsx"],"names":["Info","text","color","className","Label","required","BannerImage","onImageSelect","media","setMedia","bannerRef","useRef","style","backgroundImage","URL","createObjectURL","placeholder","ref","type","onChange","e","accept","onClick","current","click","React","memo","OpenStore","userData","isStoreOpened","isEmpty","store","upload","useMutation","uploadMediaToServer","onSuccess","a","b","values","formRef","finalInput","bannerImage","data","location","mutate","storeData","openStore","setNotification","show","title","firstName","buttonText","buttonUrl","links","viewStore","profileUrl","creatingStore","isLoading","isSuccess","history","useHistory","useEffect","push","getProfileById","other","template","validationSchema","Yup","buttonLabel","min","max","buttonLink","useState","useNotifications","to","FEED","customMaxWidth","pageTitle","fontWeight","initialValues","innerRef","onSubmit","fd","FormData","append","setFieldValue","target","files","info","name","rounded","loading","gradient","size","label"],"mappings":"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","file":"static/js/37.1bf85553.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import { InformationCircleIcon } from '@heroicons/react/solid'\n\nconst Info = ({\n  text,\n  color = 'blue',\n  className = '',\n}: {\n  className?: string\n  text: string\n  color?: string\n}) => {\n  return (\n    <div\n      className={`rounded-md dark:bg-transparent dark:border-gray-700 border border-gray-50 bg-${color}-50 p-4 ${className}`}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <InformationCircleIcon\n            className={`h-5 w-5 dark:text-${color}-300 text-${color}-400`}\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n          <p\n            className={`text-sm pb-0 mb-0 dark:text-${color}-300 text-${color}-700`}\n          >\n            {text}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info\n","const Label = ({\n  text,\n  className,\n  required = false,\n}: {\n  text: string\n  className?: string\n  required?: boolean\n}) => {\n  return (\n    <label\n      className={`block dark:text-white text-sm font-medium text-gray-700 ${className}`}\n    >\n      {text}{' '}\n      {required ? (\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n          *\n        </span>\n      ) : (\n        // to remove white space\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n      )}\n    </label>\n  )\n}\n\nexport default Label\n","import placeholder from 'assets/svg/placeholder.png'\nimport React, { useRef } from 'react'\n\nconst BannerImage = ({ onImageSelect, media, setMedia }: any) => {\n  const bannerRef = useRef()\n\n  const openFileExplorer = () =>\n    //@ts-ignore\n    bannerRef?.current?.click()\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${\n          media ? URL.createObjectURL(media) : placeholder\n        })`,\n      }}\n      className=\"h-96 bg-center flex items-center justify-center bg-no-repeat bg-cover shadow-xl rounded-xl w-full border border-gray-200 dark:border-gray-700\"\n    >\n      <input\n        ref={bannerRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, setMedia)}\n        accept={'image/x-png,image/jpeg'}\n      />\n      <h1\n        onClick={openFileExplorer}\n        className=\"text-3xl font-bold  transition-all cursor-pointer bg-transparent hover:bg-white px-2 py-2 hover:text-gray-700 text-white\"\n      >\n        {media ? 'Change' : '+ Choose'} Banner Image\n      </h1>\n    </div>\n  )\n}\n\nexport default React.memo(BannerImage)\n","import { openStore, uploadMediaToServer } from 'apis/mutations'\nimport Info from 'components/alerts/Info'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Label from 'components/atoms/Label'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Title from 'components/atoms/Title'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IParent, IStore } from 'interfaces/UniversalInterface'\nimport { isEmpty } from 'lodash'\nimport BannerImage from 'pages/store/BannerImage'\nimport { useEffect, useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst OpenStore = ({ userData }: { userData: IParent }) => {\n  const isStoreOpened = !isEmpty(userData?.store)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a, b) => {\n      // @ts-ignore\n      const values = formRef?.current?.values\n      if (formRef?.current && values) {\n        const finalInput = {\n          bannerImage: a.data.data.location,\n\n          ...values,\n        }\n\n        mutate({ storeData: finalInput })\n      }\n    },\n  })\n\n  const {\n    isLoading: creatingStore,\n\n    mutate,\n    isSuccess,\n  } = useMutation(openStore, {\n    onSuccess: () => {\n      setNotification({\n        show: true,\n        title: `Congratulations ${userData.firstName}. You have successfully opened a shop on Tradingpost13RMS. Good luck selling your stuff.`,\n        buttonText: 'View store',\n        buttonUrl: links.viewStore(userData.profileUrl),\n      })\n    },\n  })\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isSuccess || !isEmpty(userData?.store)) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1,\n          'private'\n        )\n      )\n    }\n  }, [isSuccess])\n\n  const onSubmit = (e: any) => {\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const onImageSelect = (e: any, setFieldValue: any) => {\n    const img = e.target.files[0]\n\n    setFieldValue(img)\n  }\n\n  const validationSchema = Yup.object({\n    buttonLabel: Yup.string()\n      .required('Button label is required')\n      .min(3)\n      .max(150),\n    buttonLink: Yup.string()\n      // .test(regex)\n      .required('Button link is required')\n      .min(5)\n      .max(150),\n  })\n\n  // @ts-ignore\n  const initialValues: IStore = {\n    buttonLabel: '',\n    buttonLink: '',\n  }\n  const formRef = useRef()\n\n  const [media, setMedia] = useState()\n  const { setNotification } = useNotifications()\n\n  if (isStoreOpened) {\n    setNotification({\n      show: true,\n      title: 'Store is already created.',\n    })\n    return <Redirect to={links.FEED} />\n  }\n\n  return (\n    <NarrowLayout customMaxWidth=\"max-w-7xl\" userData={userData}>\n      <Meta pageTitle={`Open Store | 13RMS`} />\n      <Title fontWeight=\"font-bold mb-8\">Open store</Title>\n\n      <Formik\n        initialValues={initialValues}\n        innerRef={formRef}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"my-4 flex flex-col gap-y-12\">\n          <div className=\"grid grid-cols-1 gap-y-12\">\n            <div>\n              <Label text=\"Banner Image\" />\n              <BannerImage\n                media={media}\n                setMedia={setMedia}\n                onImageSelect={onImageSelect}\n              />\n            </div>\n            <div>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-12\">\n                <div>\n                  <Label text=\"Button label\" />\n                  <FormInput\n                    info=\"The name of button\"\n                    name=\"buttonLabel\"\n                    placeholder=\"Discover\"\n                  />\n                </div>\n                <div>\n                  <Label text=\"Button link\" />\n                  <FormInput\n                    name=\"buttonLink\"\n                    info=\"Link of button\"\n                    placeholder=\"www.myshoppingsite.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <Info text=\"You will be able to add products later once you create store \" />\n              </div>\n            </div>\n            <div>\n              <div>\n                <div className=\"flex items-center justify-end\">\n                  <Button\n                    // onClick={onSubmit}\n                    type=\"submit\"\n                    rounded=\"rounded-lg\"\n                    loading={creatingStore || upload.isLoading}\n                    gradient\n                    size=\"lg\"\n                    label=\"Create store\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default OpenStore\n"],"sourceRoot":""}
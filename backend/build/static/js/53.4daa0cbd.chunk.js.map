{"version":3,"sources":["components/alerts/Info.tsx","pages/request/PlaceRequest.tsx"],"names":["Info","text","color","className","PlaceRequest","userData","validationSchema","Yup","title","required","min","max","description","initialValues","skills","background","setNotification","useNotifications","postMutation","useMutation","addPost","onSuccess","history","push","links","FEED","addRequest","data","requestId","message","show","buttonText","buttonUrl","viewRequestById","mutate","postData","fullName","postType","customInId","isLoading","isError","error","useState","skillsError","setSkillsError","useHistory","onSubmit","values","a","length","updatedValues","map","skill","name","pageTitle","fontWeight","label","id","placeholder","textarea","rows","cols","type","rounded","loading","gradient","size","errors","toString"],"mappings":"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","file":"static/js/53.4daa0cbd.chunk.js","sourcesContent":["import { InformationCircleIcon } from '@heroicons/react/solid'\n\nconst Info = ({\n  text,\n  color = 'blue',\n  className = '',\n}: {\n  className?: string\n  text: string\n  color?: string\n}) => {\n  return (\n    <div\n      className={`rounded-md dark:bg-transparent dark:border-gray-700 border border-gray-50 bg-${color}-50 p-4 ${className}`}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <InformationCircleIcon\n            className={`h-5 w-5 dark:text-${color}-300 text-${color}-400`}\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n          <p\n            className={`text-sm pb-0 mb-0 dark:text-${color}-300 text-${color}-700`}\n          >\n            {text}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info\n","import { addPost, addRequest } from 'apis/mutations'\nimport Error from 'components/alerts/Error'\nimport Info from 'components/alerts/Info'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Title from 'components/atoms/Title'\nimport List from 'components/List'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IParent, IRequest } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst PlaceRequest = ({ userData }: { userData: IParent }) => {\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Title is required').min(10).max(150),\n    description: Yup.string()\n      .required('Description is required')\n      .min(50)\n      .max(600),\n  })\n\n  // @ts-ignore\n  const initialValues: IRequest = {\n    title: '',\n    description: '',\n    skills: userData?.background?.skills || [],\n  }\n  const { setNotification } = useNotifications()\n\n  const postMutation = useMutation(addPost, {\n    onSuccess: () => {\n      history.push(links.FEED)\n    },\n  })\n\n  const { mutate, isLoading, isError, error } = useMutation(addRequest, {\n    onSuccess: (data) => {\n      const requestId = data.data.data\n      const message = data.data.message\n      setNotification({\n        show: true,\n        title: message,\n        buttonText: 'View',\n        buttonUrl: links.viewRequestById(requestId),\n      })\n\n      postMutation.mutate({\n        postData: {\n          text: `${userData.fullName} has placed request for work.`,\n          postType: 'request',\n          customInId: requestId,\n        },\n      })\n    },\n  })\n\n  const [skillsError, setSkillsError] = useState('')\n\n  const history = useHistory()\n\n  const onSubmit = async (values: any) => {\n    if (values.skills.length > 0) {\n      const updatedValues = {\n        ...values,\n        skills: values.skills.map((skill: { name: string }) => skill.name),\n      }\n      mutate(updatedValues)\n      setSkillsError('')\n    } else {\n      setSkillsError('Add atleast one skill')\n    }\n  }\n\n  return (\n    <NarrowLayout userData={userData}>\n      <Meta pageTitle=\"Place Request | Jobs | 13RMS\" />\n      <Title fontWeight=\"font-bold mb-8\">Place Request</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-8\">\n          <Info text=\"Job/Work Title and Skills are very important for more views and jobs. Try to add more keywords related to your skills in it. Like Javascript, etc.\" />\n\n          <FormInput\n            label=\"Title\"\n            id=\"title\"\n            name=\"title\"\n            required\n            placeholder=\"Add title\"\n          />\n\n          <FormInput\n            label=\"Description\"\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Give a little information about your niche\"\n            required\n            textarea\n            rows={5}\n            cols={255}\n          />\n          <List\n            initialValues={userData?.background?.skills}\n            min={3}\n            max={20}\n            name=\"skills\"\n            placeholder=\"skill\"\n          />\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={isLoading}\n              gradient\n              size=\"lg\"\n              label=\"Place request\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n          {!isError && skillsError && (\n            <Error errors={[skillsError.toString()]} />\n          )}\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default PlaceRequest\n"],"sourceRoot":""}
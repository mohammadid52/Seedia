{"version":3,"sources":["components/atoms/Modal.tsx","hooks/useUser.ts","assets/svg/placeholder.png","components/SideCard.tsx","components/DiscoverButton.tsx","pages/dashboard/PostPhotoModal.tsx","components/event/CreateEvent.tsx","pages/dashboard/PostModal.tsx","pages/dashboard/PostInput.tsx","pages/dashboard/ListPosts.tsx","pages/dashboard/AboutMe.tsx","pages/dashboard/index.tsx"],"names":["Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","news","name","readers","SideCard","secondary","cardTitle","content","map","_news","idx","DiscoverCard","extraItems","fetchEvents","shortEventsData","href","links","groups","length","ev","viewEvent","eventName","item","link","PostPhotoModal","isPhoto","postingIn","customInId","setNotification","useNotifications","usePostContext","setPosts","posts","useMutation","addPost","onSuccess","post","unshift","title","buttonText","buttonUrl","postById","postUrl","mutate","isError","error","useState","media","setMedia","upload","uploadMediaToServer","a","modifiedData","postData","postType","text","altText","postedIn","id","nanoid","url","location","postImageRef","useRef","onAltText","setOnAltText","setAltText","value","onChange","e","target","textarea","rows","gradient","rounded","invert","label","size","src","URL","createObjectURL","alt","controls","controlsList","current","click","ref","img","files","accept","loading","preventDefault","fd","FormData","append","CreateEvent","eventData","fullName","validationSchema","Yup","required","min","max","eventDescription","initialValues","startDate","Date","endDate","startTime","endTime","timezone","formRef","postMutation","createEvent","message","eventId","values","setValues","uploadMultipleImages","b","finalImageList","coverPhoto","find","originalname","profilePhoto","setCoverPhoto","setProfilePhoto","uploadFunction","setTimeout","onSubmit","editMode","isEmpty","useEffect","coverPicture","profilePicture","setSelectedTimeZone","profileImageSelectorRef","coverImageSelectorRef","selectedTimeZone","enableReinitialize","innerRef","showFileExplorerForCover","placeholder","showFileExplorerForProfile","avatarPlaceholder","selectedItem","list","t","cols","errors","toString","disabled","PostModal","setShowOtherModals","FormInput","gridClass","hideBorders","textClass","Button","Icon","HiOutlinePhotograph","BsCameraVideo","bgColor","PostInput","customButtons","showPostModal","setShowPostModal","showOtherModals","showEventModal","setShowEventModal","defaultButtons","BiCalendarEvent","RiArticleLine","Card","ListPosts","skip","fetchFeed","limit","_posts","isSuccess","postCount","count","Meta","pageTitle","Post","userId","EmptyState","animation","animationData","PersonalCard","authUser","user","showModal","setShowModal","saving","setSaving","_image","setImage","onImageSelect","useUserContext","onSave","config","headers","network","updatedData","isCover","password","console","isBusiness","useAccountType","fetchAvgViews","postViews","setIsCover","React","backgroundImage","getProfile","business","company","jobTitle","pwvpCount","myItems","Dashboard","Loading","DashboardHeader","Sidebar","DashboardLayout","firstColClass","firstCol","secondCol","thirdCol"],"mappings":"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","file":"static/js/22.bb8f72c7.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block overflow-visible align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-2\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news • {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { links } from 'constants/Links'\nimport { useQuery } from 'react-query'\nimport { fetchEvents } from 'apis/queries'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  const { isFetched, isLoading, data } = useQuery('short-event-names', () =>\n    fetchEvents(true)\n  )\n\n  const shortEventsData: { _id: string; eventName: string }[] =\n    isFetched && !isLoading ? data?.data?.data : []\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\"flex flex-col\">\n            <div className=\" cursor-pointer flex  items-center justify-between\">\n              <div className=\"hover:underline \">Events</div>\n              <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n                +\n              </div>\n            </div>\n            {shortEventsData &&\n              shortEventsData.length > 0 &&\n              shortEventsData.map((ev) => (\n                <a\n                  href={links.viewEvent(ev._id)}\n                  className=\"py-2 text-xs font-medium text-gray-500 dark:text-gray-500 hover:underline cursor-pointer\"\n                >\n                  {ev.eventName}\n                </a>\n              ))}\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import { addPost, uploadMediaToServer } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport { nanoid } from 'nanoid'\nimport React, { useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostPhotoModal = ({\n  open,\n  setOpen,\n  isPhoto = true,\n  postingIn = 'general',\n  customInId,\n}: {\n  open: boolean\n  postingIn?: IPost['postedIn']\n  customInId?: string\n  isPhoto: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n\n  const { setPosts, posts } = usePostContext()\n\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const post = data.data.data\n      posts.unshift(post)\n      setPosts([...posts])\n\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(post.postUrl),\n      })\n    },\n  })\n\n  const [media, setMedia] = useState(null)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a) => {\n      const modifiedData = {\n        postData: {\n          postType: 'withPhoto',\n          text: altText || '',\n          postedIn: postingIn,\n          customInId: customInId,\n          links: [\n            {\n              id: nanoid(12),\n              url: a?.data?.data?.location,\n              type: isPhoto ? 'image' : 'video',\n            },\n          ],\n        },\n      }\n      mutate(modifiedData)\n    },\n  })\n\n  const postImageRef: any = useRef()\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setMedia(img)\n  }\n\n  const showFileExplorer = () => postImageRef?.current?.click()\n\n  const onCancel = () => {\n    setMedia(null)\n    setOpen(false)\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const [onAltText, setOnAltText] = useState(false)\n  const [altText, setAltText] = useState('')\n\n  const onAltTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target\n    setAltText(value)\n  }\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`Edit your ${isPhoto ? 'photo' : 'video'}`}\n      open={open}\n    >\n      <div className=\" min-w-132 max-w-132 min-h-56 max-h-132 flex items-center justify-center overflow-y-auto\">\n        {media ? (\n          <div className=\"\">\n            {onAltText ? (\n              <div className=\"px-12\">\n                <h4 className=\"mb-1 text-gray-600 dark:text-gray-500\">\n                  Alt text\n                </h4>\n                <p className=\"dark:text-gray-700 text-gray-400 mb-2\">\n                  Alt text describes images for people who have trouble seeing\n                  them. If you don’t add alt text, it may be automatically\n                  generated after you post. You can edit it anytime.\n                </p>\n                <NormalFormInput\n                  value={altText}\n                  onChange={onAltTextChange}\n                  textarea\n                  rows={6}\n                />\n                <div className=\"mt-5 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    onClick={() => {\n                      setAltText('')\n                      setOnAltText(false)\n                    }}\n                    invert\n                    label=\"Cancel\"\n                    size=\"sm\"\n                  />\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    label=\"Save\"\n                    onClick={() => {\n                      setOnAltText(false)\n                    }}\n                    size=\"sm\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div>\n                {isPhoto ? (\n                  <img\n                    className=\"w-full\"\n                    src={URL.createObjectURL(media)}\n                    alt=\"\"\n                  />\n                ) : (\n                  <video\n                    controls\n                    className=\"w-full\"\n                    controlsList=\"nodownload\"\n                    src={URL.createObjectURL(media)}\n                  />\n                )}\n              </div>\n            )}\n            <div className=\"absolute bottom-5 left-5 pt-4 mb-2 pl-4\">\n              <Button\n                onClick={() => setOnAltText(!onAltText)}\n                invert={!onAltText}\n                label=\"Alt text\"\n              />\n            </div>\n          </div>\n        ) : (\n          <Button\n            onClick={showFileExplorer}\n            label={`Select ${isPhoto ? 'image' : 'video'} to share`}\n            gradient\n            invert\n            size=\"lg\"\n          />\n        )}\n\n        {/* HIDDEN IMAGE INPUT */}\n        <input\n          // @ts-ignore\n          ref={postImageRef}\n          className=\"hidden\"\n          type=\"file\"\n          onChange={onImageSelect}\n          accept={isPhoto ? 'image/*' : 'video/*'}\n        />\n      </div>\n      <div className=\"mt-5 border-t border-gray-200 dark:border-gray-700 pt-4 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          onClick={onCancel}\n          invert\n          label=\"Cancel\"\n          size=\"lg\"\n        />\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          loading={isLoading || upload.isLoading}\n          label=\"Done\"\n          onClick={onSubmit}\n          size=\"lg\"\n        />\n      </div>\n      {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n    </Modal>\n  )\n}\n\nexport default PostPhotoModal\n","import { addPost, createEvent, uploadMultipleImages } from 'apis/mutations'\nimport placeholder from 'assets/svg/placeholder.png'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormSelector from 'components/atoms/FormSelector'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IEvent } from 'interfaces/UniversalInterface'\nimport { isEmpty, map } from 'lodash'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { timezone } from 'values/values'\nimport * as Yup from 'yup'\n\nconst CreateEvent = ({\n  open,\n  setOpen,\n  eventData,\n  fullName = '',\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  eventData?: IEvent\n  fullName: string\n}) => {\n  const validationSchema = Yup.object({\n    eventName: Yup.string().required('Event Name is required').min(10).max(150),\n    eventDescription: Yup.string()\n      .required('Event Description is required')\n      .min(10)\n      .max(600),\n\n    // startTime\n  })\n\n  // @ts-ignore\n  const initialValues: IEvent = {\n    eventName: eventData?.eventName || '',\n    eventDescription: eventData?.eventDescription || '',\n    startDate: eventData?.startDate || new Date(),\n    endDate: eventData?.endDate || new Date(),\n    startTime: eventData?.startTime || '',\n    endTime: eventData?.endTime || '',\n    timezone: eventData?.timezone || '',\n  }\n\n  const formRef = useRef()\n  const { setNotification } = useNotifications()\n\n  const postMutation = useMutation(addPost)\n\n  const { mutate, isLoading, isError, error } = useMutation(createEvent, {\n    onSuccess: (data) => {\n      // console.log(data)\n      const message = data.data.message\n      const eventId = data.data.data\n      setNotification({\n        show: true,\n        title: message,\n        buttonText: 'View',\n        buttonUrl: links.viewEvent(eventId),\n      })\n\n      postMutation.mutate({\n        postData: {\n          text: `${fullName} has organized an event.`,\n          postType: 'event',\n          customInId: eventId,\n        },\n      })\n    },\n  })\n\n  const [values, setValues] = useState(null)\n\n  const upload = useMutation(uploadMultipleImages, {\n    onSuccess: (a, b) => {\n      if (values) {\n        if (a.data.data && a.data.data.length) {\n          const finalImageList: any[] = map(a.data.data, (img) => img)\n\n          mutate({\n            ...values,\n            coverPhoto: finalImageList.find(\n              (img) => img.originalname === coverPhoto.name\n            )?.location,\n\n            profilePhoto: finalImageList.find(\n              (img) => img.originalname === profilePhoto.name\n            )?.location,\n          })\n        } else {\n          mutate({\n            ...values,\n          })\n        }\n        setOpen(false)\n        setCoverPhoto(null)\n        setProfilePhoto(null)\n      }\n    },\n  })\n\n  const uploadFunction = () => {\n    const fd = new FormData()\n\n    fd.append('images', profilePhoto)\n    fd.append('images', coverPhoto)\n\n    setTimeout(() => {\n      upload.mutate(fd)\n    }, 500)\n  }\n\n  const onSubmit = async (values: any) => {\n    setValues({ ...values })\n    uploadFunction()\n  }\n\n  const editMode = !isEmpty(eventData)\n\n  useEffect(() => {\n    if (editMode) {\n      setCoverPhoto(eventData.coverPicture)\n      setProfilePhoto(eventData.profilePicture)\n      setSelectedTimeZone(eventData?.timezone || timezone[0].text)\n    }\n  }, [editMode])\n\n  const profileImageSelectorRef = useRef()\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageSelectorRef = useRef()\n\n  const showFileExplorerForCover = () =>\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n\n  const [profilePhoto, setProfilePhoto] = useState<any>()\n\n  const [coverPhoto, setCoverPhoto] = useState<any>()\n\n  const [selectedTimeZone, setSelectedTimeZone] = useState(timezone[0].text)\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`${editMode ? 'Edit' : 'Create'} event`}\n      open={open}\n    >\n      <div className=\" min-w-200 pb-4  max-w-200 min-h-164 max-h-164 overflow-y-auto\">\n        <div className=\"px-1\">\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={coverImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setCoverPhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={profileImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setProfilePhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            enableReinitialize={editMode}\n            innerRef={formRef}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6 \">\n              <div className=\" overflow-hidden  bg-white dark:bg-gray-900\">\n                <div className=\"relative  group\">\n                  <div className=\"absolute top-0 right-0 p-4\">\n                    <AiOutlineEdit className=\"bg-gray-100   transition-all hover:bg-gray-300 duration-300 rounded-full p-2 text-gray-700 h-8 w-8\" />\n                  </div>\n                  <img\n                    alt=\"\"\n                    onClick={() => showFileExplorerForCover()}\n                    src={\n                      coverPhoto\n                        ? typeof coverPhoto === 'string'\n                          ? coverPhoto\n                          : URL.createObjectURL(coverPhoto)\n                        : placeholder\n                    }\n                    className=\"w-full lg:h-36 sm:h-24 object-cover h-20\"\n                  />\n                </div>\n                <div className=\"flex  relative justify-start mr-8 ml-8 -mt-12\">\n                  <img\n                    onClick={() => showFileExplorerForProfile()}\n                    alt=\"\"\n                    src={\n                      profilePhoto\n                        ? typeof profilePhoto === 'string'\n                          ? profilePhoto\n                          : URL.createObjectURL(profilePhoto)\n                        : avatarPlaceholder\n                    }\n                    className=\" border-solid  lg:h-24 lg:w-24 h-16 w-16  border-white border-2 -mt-3\"\n                  />\n                </div>\n              </div>\n              <div className=\"px-8 space-y-4\">\n                <h3 className=\"dark:text-white text-gray-900 font-semibold \">\n                  Details\n                </h3>\n                <FormInput\n                  label=\"Event Name\"\n                  id=\"eventName\"\n                  name=\"eventName\"\n                  required\n                />\n\n                <FormSelector\n                  label=\"Timezone\"\n                  required\n                  name=\"timezone\"\n                  selectedItem={selectedTimeZone}\n                  list={timezone.map((t) => ({ name: t.text, id: t.value }))}\n                  placeholder=\"What is the purpose of this group?\"\n                />\n\n                <div className=\"flex items-center justify-between w-full gap-x-2\">\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startDate\"\n                        label=\"Start date\"\n                        type=\"date\"\n                      />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startTime\"\n                        label=\"Start time\"\n                        required\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput name=\"endDate\" label=\"End date\" type=\"date\" />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"endTime\"\n                        required\n                        label=\"End time\"\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <FormInput\n                  label=\"Description\"\n                  required\n                  id=\"eventDescription\"\n                  name=\"eventDescription\"\n                  placeholder=\"Ex. Topics, schedule, etc.\"\n                  textarea\n                  rows={2}\n                  cols={255}\n                />\n              </div>\n\n              {isError && (\n                <div className=\"px-8\">\n                  <Error errors={[error.toString()]} />\n                </div>\n              )}\n              <div className=\"flex p-4 items-center justify-end\">\n                <Button\n                  rounded=\"rounded-full\"\n                  loading={upload.isLoading || isLoading}\n                  disabled={upload.isLoading || isLoading}\n                  gradient\n                  size=\"lg\"\n                  type=\"submit\"\n                  label=\"Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default CreateEvent\n","import { addPost } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { Form, Formik } from 'formik'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport { useRef } from 'react'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { useMutation } from 'react-query'\n\nconst PostModal = ({\n  open,\n  setOpen,\n  setShowOtherModals,\n  postingIn = 'general',\n  customInId,\n}: {\n  open: boolean\n  postingIn?: IPost['postedIn']\n  customInId?: string\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  setShowOtherModals: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setPosts, posts } = usePostContext()\n\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const post = data.data.data\n      posts.unshift(post)\n      setPosts([...posts])\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(post.postUrl),\n      })\n    },\n  })\n\n  const initialValues = {\n    text: '',\n  }\n\n  const formRef = useRef()\n\n  const onSubmit = (values: { text: string }) => {\n    mutate({\n      postData: {\n        text: values.text,\n        postedIn: postingIn,\n        customInId: postingIn !== 'general' ? customInId : null,\n      },\n    })\n  }\n\n  return (\n    <Modal setOpen={setOpen} header=\"Create a post\" open={open}>\n      <div className=\" min-w-132 min-h-56 max-h-132 overflow-y-auto\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            <FormInput\n              gridClass=\"hideBorders\"\n              hideBorders\n              textClass=\"text-sm text-gray-700 dark:text-gray-100 sm:text-lg\"\n              placeholder=\"What do you want to talk about?\"\n              rows={10}\n              name=\"text\"\n              id=\"text\"\n              textarea\n            />\n            <div className=\"mt-5 m-1 sm:mt-4 flex justify-between  items-center\">\n              <div className=\"flex items-center gap-x-4\">\n                <Button\n                  gradient\n                  invert\n                  // className=\"dark:border-gray-600\"\n                  Icon={HiOutlinePhotograph}\n                  label=\"Photo\"\n                  onClick={() => {\n                    setOpen(false)\n                    setShowOtherModals('photo')\n                  }}\n                />\n                <Button\n                  gradient\n                  Icon={BsCameraVideo}\n                  // className=\"dark:border-gray-600\"\n                  bgColor=\"blue\"\n                  invert\n                  onClick={() => {\n                    setOpen(false)\n                    return setShowOtherModals('video')\n                  }}\n                  label=\"Video\"\n                />\n              </div>\n              <Button\n                gradient\n                loading={isLoading}\n                // @ts-ignore\n                disabled={formRef?.current?.values.text.length <= 0}\n                type=\"submit\"\n                label=\"Post\"\n                size=\"lg\"\n              />\n            </div>\n            {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport CreateEvent from 'components/event/CreateEvent'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport PostModal from 'pages/dashboard/PostModal'\nimport PostPhotoModal from 'pages/dashboard/PostPhotoModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n  postingIn = 'general',\n  customInId,\n  fullName = '',\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n  postingIn?: IPost['postedIn']\n  fullName: string\n  customInId?: string\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n  const [showOtherModals, setShowOtherModals] = useState('init')\n  const [showEventModal, setShowEventModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n        onClick={() => setShowOtherModals('photo')}\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        onClick={() => setShowOtherModals('video')}\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        onClick={() => setShowEventModal(true)}\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal\n          customInId={customInId}\n          postingIn={postingIn}\n          setShowOtherModals={setShowOtherModals}\n          open={showPostModal}\n          setOpen={setShowPostModal}\n        />\n      )}\n      {(showOtherModals === 'photo' || showOtherModals === 'video') && (\n        <PostPhotoModal\n          isPhoto={showOtherModals === 'photo'}\n          open\n          setOpen={() => setShowOtherModals('init')}\n        />\n      )}\n      <CreateEvent\n        fullName={fullName}\n        open={showEventModal}\n        setOpen={setShowEventModal}\n      />\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","import { fetchFeed } from 'apis/queries'\nimport animationData from 'assets/animation/caught-up.json'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport { usePostContext } from 'context/PostContext'\nimport { IParent, IPost } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useQuery } from 'react-query'\n\nconst ListPosts = ({ userData }: { userData: IParent }) => {\n  const [skip, setSkip] = useState(0)\n\n  const { setPosts, posts } = usePostContext()\n\n  const { data, refetch, isLoading, isFetched, isSuccess } = useQuery(\n    'list-posts',\n    () => {\n      return fetchFeed({ limit: 10, skip })\n    },\n    {\n      onSuccess: (data) => {\n        const _posts = data?.data?.data?.posts\n        if (_posts && _posts.length > 0) {\n          setPosts([..._posts])\n        }\n      },\n    }\n  )\n\n  const fetchMoreData = () => {\n    setSkip(skip + 10)\n    refetch()\n  }\n\n  const postCount =\n    !isLoading && isFetched && isSuccess ? data?.data?.data?.count || 0 : 0\n\n  return (\n    <div className=\"\">\n      <Meta pageTitle={`(${postCount || 0}) Feed | 13RMS`} />\n      {posts && posts.length > 0 ? (\n        <div className=\"grid pb-24 grid-cols-1 gap-y-6\">\n          {posts.map((post: IPost) => (\n            <Post userData={userData} userId={userData._id} post={post} />\n          ))}\n        </div>\n      ) : (\n        // <InfiniteScroll\n        //   endMessage={\n        //     <div className=\"text-center\">\n        //       <span className=\"dark:text-gray-600 text-center text-gray-400\">\n        //         •\n        //       </span>\n        //     </div>\n        //   }\n        //   dataLength={postCount}\n        //   scrollableTarget=\"main_content\"\n        //   next={fetchMoreData}\n        //   hasMore={postCount > posts.length}\n        //   loader={<h4>Loading...</h4>}\n        // >\n\n        // </InfiniteScroll>\n        <EmptyState animation={animationData} title=\"You're all caught up\" />\n      )}\n    </div>\n  )\n}\n\nexport default ListPosts\n","import { fetchAvgViews } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport DiscoverCard from 'components/DiscoverButton'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { useUserContext } from 'context/UserContext'\nimport { network } from 'helpers'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { noop } from 'lodash'\nimport React, { useState } from 'react'\nimport { BsFillBookmarkFill } from 'react-icons/bs'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PersonalCard = ({\n  className,\n  authUser,\n  userData: user,\n}: {\n  className?: string\n  authUser: boolean\n  userData?: IParent\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowModal(true)\n  }\n\n  const { setValues } = useUserContext()\n  const { setNotification } = useNotifications()\n\n  const onSave = async () => {\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...user,\n          [isCover ? 'coverPicture' : 'profilePicture']: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post('/user/update', {\n          ...updatedData,\n        })\n\n        setNotification({\n          show: true,\n          title: `${isCover ? 'Cover' : 'Profile'} photo changed successfully`,\n        })\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setShowModal(false)\n    }\n    setSaving(false)\n  }\n\n  const { isBusiness } = useAccountType(user)\n\n  const { data } = useQuery('average-post-views', () => fetchAvgViews())\n\n  const postViews = data?.data?.data || 0\n\n  const [isCover, setIsCover] = useState(false)\n\n  const profileImageSelectorRef = React.useRef()\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    {\n      setIsCover(false)\n      /*@ts-ignore*/\n      return profileImageSelectorRef?.current?.click()\n    }\n\n  const coverImageSelectorRef = React.useRef()\n  const showFileExplorerForCover = () => {\n    setIsCover(true)\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n  }\n  const coverImageStyles =\n    'max-h-72 rounded-md sm:overflow-hidden w-full  object-cover'\n  const profileImageStyles = 'md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full'\n  return (\n    <>\n      {authUser && (\n        <Modal\n          header={`${isCover ? 'Cover' : 'Profile'} Photo`}\n          disableBackdropClose\n          open={showModal}\n          setOpen={setShowModal}\n        >\n          <div\n            className={`${\n              isCover\n                ? ' lg:min-w-256 sm:min-w-172 min-w-32'\n                : 'sm:min-w-64 sm:min-h-64'\n            }`}\n          >\n            <div\n              className={`relative ${\n                isCover\n                  ? 'sm:min-h-72 min-h-48'\n                  : 'min-h-48 flex items-center justify-center'\n              } `}\n            >\n              {_image && (\n                <img\n                  className={`shadow-xl ${\n                    isCover ? coverImageStyles : profileImageStyles\n                  }`}\n                  // @ts-ignore\n                  src={URL.createObjectURL(_image)}\n                  alt=\"\"\n                />\n              )}\n            </div>\n            <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={saving}\n                disabled={saving}\n                onClick={onSave}\n                type=\"submit\"\n                label=\"Save\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* HIDDEN IMAGE INPUT -- For Profile Picture*/}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT -- For Cover Picture*/}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {/* ------------ Profile Card ---------*/}\n      <div\n        className={`rounded-lg   border dark:border-gray-700 transition-all  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800`}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${\n              user?.coverPicture\n                ? user?.coverPicture\n                : 'https://source.unsplash.com/1600x900/?nature,water'\n            })`,\n          }}\n          onClick={() => (authUser ? showFileExplorerForCover() : noop)}\n          className=\"w-full lg:h-20 cursor-pointer sm:h-24 bg-center bg-no-repeat bg-cover h-20\"\n        />\n        <div className=\"flex justify-center -mt-8\">\n          <img\n            alt=\"\"\n            title=\"change photo\"\n            onClick={() => (authUser ? showFileExplorerForProfile() : noop)}\n            src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n            className=\"rounded-full cursor-pointer border-solid lg:h-16 lg:w-16 h-12 w-12  border-white border-2 -mt-3\"\n          />\n        </div>\n        <div className=\"text-center px-3 pb-6 pt-2\">\n          <a\n            href={links.getProfile(user, true)}\n            className=\"dark:text-white  text-gray-900 text-base font-bold \"\n          >\n            {user.fullName}\n          </a>\n          <p className=\"text-sm font-medium dark:text-gray-500 text-gray-500 \">\n            {isBusiness ? user.business.name : user.company.jobTitle}\n          </p>\n        </div>\n        <div className=\"flex gap-y-2  flex-col border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Who viewed your profile</h6>\n            <span className=\"text-link font-semibold\">{user.pwvpCount}</span>\n          </div>\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Views of your post</h6>\n            <span className=\"text-link font-semibold\">{postViews}</span>\n          </div>\n        </div>\n        <a\n          href={links.myItems()}\n          className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-start px-4 border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\"\n        >\n          <BsFillBookmarkFill className=\"mr-2\" />\n          <p>My Items</p>\n        </a>\n      </div>\n      {/* ------------ Profile Card Ends ---------*/}\n\n      {/* // ~~~~~~~~~~~~~~~~~~~Discover Cards ~~~~~~~~~~~~~~~~~~~~ // */}\n      <DiscoverCard />\n    </>\n  )\n}\nexport default PersonalCard\n","import Loading from 'components/Loading'\nimport Sidebar from 'components/Sidebar'\nimport SideCard from 'components/SideCard'\nimport useUser from 'hooks/useUser'\nimport { IParent, NavProps } from 'interfaces/UniversalInterface'\nimport ListPosts from 'pages/dashboard/ListPosts'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport PersonalCard from './AboutMe'\nimport PostInput from './PostInput'\n\ninterface DashboardProps extends NavProps {\n  userData: IParent\n}\n\nconst Dashboard = ({ userData }: DashboardProps) => {\n  const { isFetched, isLoading, iAmOwnerOfThisProfile } = useUser(\n    userData._id,\n    userData\n  )\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n\n      <Sidebar />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`max-h-152 lg:block  xl:block w-full  `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              <PersonalCard\n                authUser={iAmOwnerOfThisProfile}\n                userData={userData}\n              />\n              {/* <GroupList secondary userId={userData._id} /> */}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              <PostInput\n                fullName={userData.fullName}\n                profilePicture={userData?.profilePicture}\n              />\n              <ListPosts userData={userData} />\n            </div>\n          }\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n            </div>\n          }\n        />\n      </div>\n    </div>\n    // </Sidebar>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}
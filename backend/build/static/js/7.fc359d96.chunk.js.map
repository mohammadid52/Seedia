{"version":3,"sources":["../node_modules/countrycitystatejson/index.js","../node_modules/trie-search/index.js","../node_modules/trie-search/src/TrieSearch.js","../node_modules/hasharray/index.js","../node_modules/hasharray/src/HashArray.js","../node_modules/jclass/index.js"],"names":["db","require","trie","min","splitOnRegEx","countryName","state","states","idx","toSave","city","country","key","name","map","compCities","getAll","getCountriesShort","res","push","getCountryByShort","shortName","getCountryInfoByShort","getStatesByShort","Object","keys","getCities","getCountries","obj","getCitiesByName","search","module","exports","HashArray","IS_WHITESPACE","DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES","regex","alternate","String","prototype","replaceCharAt","index","replacement","this","substr","length","TrieSearch","keyFields","options","ignoreCase","undefined","maxCacheSize","cache","hasOwnProperty","splitOnGetRegEx","keepAll","keepAllKey","idFieldOrFunction","expandRegexes","insertFullUnsplitKey","Array","root","size","getCache","deepLookup","slice","add","customKeys","clearCache","k","val","toString","expandedValues","expandString","v","expandedValue","value","values","i","match","er","exec","alternateValue","addAll","arr","reset","cleanCache","all","remove","addFromObject","valueField","indexOf","o","_key_","test","phrases","split","emptySplitMatch","filter","p","l","indexed","toLowerCase","keyArr","keyToArr","self","insert","node","shift","concat","findNode","f","_getCacheKey","phrase","limit","cacheKey","_get","c","get","ret","haKeyFields","indexField","words","w","temp","aggregate","intersection","ha","reducer","accumulator","Error","matches","getId","item","UNION_REDUCER","id","maxLength","Math","max","results","_extend","init","callback","_map","_list","isHashArray","ignoreDuplicates","addOne","needsDupCheck","inst","objectAt","has","arguments","call","apply","addMap","other","clone","forEach","collides","complement","getAsArray","getUniqueRandomIntegers","count","r","floor","random","sample","image","rand","hasMultiple","removeByKey","removed","items","j","ix","key2","splice","removeAll","old","path","dup","forEachDeep","ignoreItems","n","sum","weightKey","average","tot","weightsTotal","callbackOrKey","defineProperty","window","define","isFn","Function","extend","target","sources","source","defaultOptions","_isClassObject","initializing","BaseClass","_subClasses","instanceMembers","classMembers","JClass","_class","SuperClass","superPrototype","constructor","_superClass","_extends","property","getOwnPropertyDescriptor","member","descriptor","superMember","_super","ClassMembersSuperClass","_members","opts","ClassMembersClass","_instanceClass","_convert","cls","origin","_origin","_construct","args","Class","_superDescriptor","prop"],"mappings":"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","file":"static/js/7.fc359d96.chunk.js","sourcesContent":["const db = require('./lib/compiledCities.json')\nconst TrieSearch = require('trie-search')\n\nconst trie = new TrieSearch([],\n  {\n    min: 2,\n    splitOnRegEx: false,\n  }\n)\n\n\nfor (let countryName in db) {\n  for (let state in db[countryName].states) {\n    for (let idx in db[countryName].states[state]) {\n      const toSave = {\n        city: db[countryName].states[state][idx],\n        state: state,\n        country: db[countryName],\n      }\n//      const key = db[countryName].states[state][idx].name.toLowerCase().replace(/\\s/g,'')\n      const key = db[countryName].states[state][idx].name\n      trie.map(key, toSave)\n    }\n  }\n}\n\nvar compCities = {\n\n  getAll: () => { return db },\n  getCountriesShort: () => {\n    let res = []\n    for (var key in db) {\n      res.push(key)\n    }\n    return res\n  },\n  getCountryByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      return db[shortName]\n    } else {\n      return null\n    }\n  },\n  getCountryInfoByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          res[key] = db[shortName][key]\n        }\n      }\n      return res\n    } else {\n      return null\n    }\n  },\n  getStatesByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = []\n      if (typeof db[shortName].states !== 'undefined') {\n        res = Object.keys(db[shortName].states)\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCities: (shortName, state) => {\n    if (typeof db[shortName] !== 'undefined') {\n      if (typeof db[shortName].states != 'undefined') {\n        let res=[]\n        for (let idx in  db[shortName].states[state]) {\n          res.push(db[shortName].states[state][idx].name)\n        }\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCountries: () => {\n    let res = []\n    for (var shortName in db) {\n      let obj = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          obj.shortName = shortName\n          obj[key] = db[shortName][key]\n        }\n      }\n      res.push(obj)\n    }\n    return res\n  },\n  getCitiesByName: name => {\n    const res = trie.search(name)\n    return res\n  },\n}\n\nmodule.exports = compCities\n","module.exports = require('./src/TrieSearch');","var HashArray = require('hasharray');\n\nvar MAX_CACHE_SIZE = 64;\n\nvar IS_WHITESPACE = /^[\\s]*$/;\n\nvar DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES = [\n  {\n    regex: /[åäàáâãæ]/ig,\n    alternate: 'a'\n  },\n  {\n    regex: /[èéêë]/ig,\n    alternate: 'e'\n  },\n  {\n    regex: /[ìíîï]/ig,\n    alternate: 'i'\n  },\n  {\n    regex: /[òóôõö]/ig,\n    alternate: 'o'\n  },\n  {\n    regex: /[ùúûü]/ig,\n    alternate: 'u'\n  },\n  {\n    regex: /[æ]/ig,\n    alternate: 'ae'\n  }\n];\n\nString.prototype.replaceCharAt=function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar TrieSearch = function (keyFields, options) {\n  this.options = options || {};\n\n  // Default ignoreCase to true\n  this.options.ignoreCase = (this.options.ignoreCase === undefined) ? true : this.options.ignoreCase;\n  this.options.maxCacheSize = this.options.maxCacheSize || MAX_CACHE_SIZE;\n  this.options.cache = this.options.hasOwnProperty('cache') ? this.options.cache : true;\n  this.options.splitOnRegEx = this.options.hasOwnProperty('splitOnRegEx') ? this.options.splitOnRegEx : /\\s/g;\n  this.options.splitOnGetRegEx = this.options.hasOwnProperty('splitOnGetRegEx') ? this.options.splitOnGetRegEx : this.options.splitOnRegEx;\n  this.options.min = this.options.min || 1;\n  this.options.keepAll = this.options.hasOwnProperty('keepAll') ? this.options.keepAll : false;\n  this.options.keepAllKey = this.options.hasOwnProperty('keepAllKey') ? this.options.keepAllKey : 'id';\n  this.options.idFieldOrFunction = this.options.hasOwnProperty('idFieldOrFunction') ? this.options.idFieldOrFunction : undefined;\n  this.options.expandRegexes = this.options.expandRegexes || DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES;\n  this.options.insertFullUnsplitKey = this.options.hasOwnProperty('insertFullUnsplitKey') ? this.options.insertFullUnsplitKey : false;\n\n  this.keyFields = keyFields ? (keyFields instanceof Array ? keyFields : [keyFields]) : [];\n  this.root = {};\n  this.size = 0;\n\n  if (this.options.cache) {\n    this.getCache = new HashArray('key');\n  }\n};\n\nfunction deepLookup(obj, keys) {\n  return keys.length === 1 ? obj[keys[0]] : deepLookup(obj[keys[0]], keys.slice(1, keys.length));\n}\n\nTrieSearch.prototype = {\n  add: function (obj, customKeys) {\n    if (this.options.cache)\n      this.clearCache();\n\n    // Someone might have called add via an array forEach where the second param is a number\n    if (typeof customKeys === 'number') {\n      customKeys = undefined;\n    }\n\n    var keyFields = customKeys || this.keyFields;\n\n    for (var k in keyFields)\n    {\n      var key = keyFields[k],\n        isKeyArr = key instanceof Array,\n        val = isKeyArr ? deepLookup(obj, key) : obj[key];\n\n      if (!val) continue;\n\n      val = val.toString();\n\n      var expandedValues = this.expandString(val);\n\n      for (var v = 0; v < expandedValues.length; v++) {\n        var expandedValue = expandedValues[v];\n\n        this.map(expandedValue, obj);\n      }\n    }\n  },\n  /**\n   * By default using the options.expandRegexes, given a string like 'ö är bra', this will expand it to:\n   *\n   * ['ö är bra', 'o är bra', 'ö ar bra', 'o ar bra']\n   *\n   * By default this was built to allow for internationalization, but it could be also be expanded to\n   * allow for word alternates, etc. like spelling alternates ('teh' and 'the').\n   *\n   * This is used for insertion! This should not be used for lookup since if a person explicitly types\n   * 'ä' they probably do not want to see all results for 'a'.\n   *\n   * @param value The string to find alternates for.\n   * @returns {Array} Always returns an array even if no matches.\n   */\n  expandString: function(value) {\n    var values = [value];\n\n    if (this.options.expandRegexes && this.options.expandRegexes.length) {\n      for (var i = 0; i < this.options.expandRegexes.length; i++) {\n        var er = this.options.expandRegexes[i];\n        var match;\n\n        while((match = er.regex.exec(value)) !== null) {\n          var alternateValue = value.replaceCharAt(match.index, er.alternate);\n          values.push(alternateValue);\n        }\n      }\n    }\n\n    return values;\n  },\n  addAll: function (arr, customKeys) {\n    for (var i = 0; i < arr.length; i++)\n      this.add(arr[i], customKeys);\n  },\n  reset: function () {\n    this.root = {};\n    this.size = 0;\n  },\n  clearCache: function () {\n    // if (this.getCache && !this.getCache._list.length) {\n    //   return;\n    // }\n    this.getCache = new HashArray('key');\n  },\n  cleanCache: function () {\n    while (this.getCache.all.length > this.options.maxCacheSize)\n      this.getCache.remove(this.getCache.all[0]);\n  },\n  addFromObject: function (obj, valueField) {\n    if (this.options.cache)\n      this.clearCache();\n\n    valueField = valueField || 'value';\n\n    if (this.keyFields.indexOf('_key_') == -1)\n      this.keyFields.push('_key_');\n\n    for (var key in obj)\n    {\n      var o = {_key_: key};\n      o[valueField] = obj[key];\n      this.add(o);\n    }\n  },\n  map: function (key, value) {\n    if (this.options.splitOnRegEx && this.options.splitOnRegEx.test(key))\n    {\n      var phrases = key.split(this.options.splitOnRegEx);\n      var emptySplitMatch = phrases.filter(function(p) { return IS_WHITESPACE.test(p); });\n      var selfMatch = phrases.filter(function(p) { return p === key; });\n      var selfIsOnlyMatch = selfMatch.length + emptySplitMatch.length === phrases.length;\n\n      // There is an edge case that a RegEx with a positive lookeahed like:\n      //  /?=[A-Z]/ // Split on capital letters for a camelcase sentence\n      // Will then match again when we call map, creating an infinite stack loop.\n      if (!selfIsOnlyMatch) {\n        for (var i = 0, l = phrases.length; i < l; i++) {\n          if (!IS_WHITESPACE.test(phrases[i])) {\n            this.map(phrases[i], value);\n          }\n        }\n\n        if (!this.options.insertFullUnsplitKey) {\n          return;\n        }\n      }\n    }\n\n    if (this.options.cache)\n      this.clearCache();\n\n    if (this.options.keepAll) {\n      this.indexed = this.indexed || new HashArray([this.options.keepAllKey]);\n      this.indexed.add(value);\n    }\n\n    if (this.options.ignoreCase) {\n      key = key.toLowerCase();\n    }\n\n    var keyArr = this.keyToArr(key),\n      self = this;\n\n    insert(keyArr, value, this.root);\n\n    function insert(keyArr, value, node) {\n      if (keyArr.length == 0)\n      {\n        node['value'] = node['value'] || [];\n        node['value'].push(value);\n        return; \n      }\n\n      var k = keyArr.shift();\n\n      if (!node[k])\n        self.size++;\n\n      node[k] = node[k] || {};\n\n      insert(keyArr, value, node[k])\n    }\n  },\n  keyToArr: function (key) {\n    var keyArr;\n      \n    if (this.options.min && this.options.min > 1)\n    {\n      if (key.length < this.options.min)\n        return [];\n\n      keyArr = [key.substr(0, this.options.min)];\n      keyArr = keyArr.concat(key.substr(this.options.min).split(''));\n    }\n    else keyArr = key.split('');\n\n    return keyArr;\n  },\n  findNode: function (key) {\n    return f(this.keyToArr(key), this.root);\n\n    function f(keyArr, node) {\n      if (!node) return undefined;\n      if (keyArr.length == 0) return node;\n\n      var k = keyArr.shift();\n      return f(keyArr, node[k]);\n    }\n  },\n  _getCacheKey: function(phrase, limit){\n    var cacheKey = phrase\n    if(limit) {\n      cacheKey = phrase + \"_\" + limit\n    }\n    return cacheKey\n  },\n  _get: function (phrase, limit) {\n    phrase = this.options.ignoreCase ? phrase.toLowerCase() : phrase;\n    \n    var c, node;\n    if (this.options.cache && (c = this.getCache.get(this._getCacheKey(phrase, limit))))\n      return c.value;\n\n    var ret = undefined,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      words = this.options.splitOnGetRegEx ? phrase.split(this.options.splitOnGetRegEx) : [phrase];\n\n    for (var w = 0, l = words.length; w < l; w++)\n    {\n      if (this.options.min && words[w].length < this.options.min)\n        continue;\n\n      var temp = new HashArray(haKeyFields);\n\n      if (node = this.findNode(words[w]))\n        aggregate(node, temp);\n\n      ret = ret ? ret.intersection(temp) : temp;\n    }\n    \n    var v = ret ? ret.all : [];\n\n    if (this.options.cache)\n    {\n      var cacheKey = this._getCacheKey(phrase, limit)\n      this.getCache.add({key: cacheKey, value: v});\n      this.cleanCache();\n    }\n\n    return v;\n    \n    function aggregate(node, ha) {\n      if(limit && ha.all.length === limit) {\n        return\n      }\n\n      if (node.value && node.value.length) {\n        if(!limit || (ha.all.length + node.value.length) < limit) {\n          ha.addAll(node.value);\n        } else {\n          // Limit is less than the number of entries in the node.value + ha combined\n          ha.addAll(node.value.slice(0, limit - ha.all.length))\n          return\n        }\n      }\n\n      for (var k in node) {\n        if (limit && ha.all.length === limit){\n          return\n        }\n        if (k != 'value') {\n          aggregate(node[k], ha);\n        }\n      }\n    }\n  },\n  get: function (phrases, reducer, limit) {\n    var haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      ret = undefined,\n      accumulator = undefined;\n\n    if (reducer && !this.options.idFieldOrFunction) {\n      throw new Error('To use the accumulator, you must specify and idFieldOrFunction');\n    }\n\n    phrases = (phrases instanceof Array) ? phrases : [phrases];\n\n    for (var i = 0, l = phrases.length; i < l; i++)\n    {\n      var matches = this._get(phrases[i], limit);\n\n      if (reducer) {\n        accumulator = reducer(accumulator, phrases[i], matches, this);\n      } else {\n        ret = ret ? ret.addAll(matches) : new HashArray(haKeyFields).addAll(matches);\n      }\n    }\n\n    return !reducer ? ret.all : accumulator;\n  },\n  search: function(phrases, reducer) {\n    return this.get(phrases, reducer);\n  },\n  getId: function (item) {\n    return typeof this.options.idFieldOrFunction === 'function' ? this.options.idFieldOrFunction(item) : item[this.options.idFieldOrFunction];\n  }\n};\n\nTrieSearch.UNION_REDUCER = function(accumulator, phrase, matches, trie) {\n  if (accumulator === undefined) {\n    return matches;\n  }\n\n  var map = {}, i, id;\n  var maxLength = Math.max(accumulator.length, matches.length);\n  var results = [];\n  var l = 0;\n\n  // One loop, O(N) for max length of accumulator or matches.\n  for (i = 0; i < maxLength; i++) {\n    if (i < accumulator.length) {\n      id = trie.getId(accumulator[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = accumulator[i];\n      }\n    }\n\n    if (i < matches.length) {\n      id = trie.getId(matches[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = matches[i];\n      }\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = TrieSearch;\n","module.exports = require('./src/HashArray.js');","/*===========================================================================*\\\n * Requires\n\\*===========================================================================*/\nvar JClass = require('jclass');\n\n/*===========================================================================*\\\n * HashArray\n\\*===========================================================================*/\nvar HashArray = JClass._extend({\n  //-----------------------------------\n  // Constructor\n  //-----------------------------------\n  init: function(keyFields, callback, options) {\n    keyFields = keyFields instanceof Array ? keyFields : [keyFields];\n\n    this._map = {};\n    this._list = [];\n    this.callback = callback;\n\n    this.keyFields = keyFields;\n\n    this.isHashArray = true;\n    \n    this.options = options || {\n      ignoreDuplicates: false\n    };\n\n    if (callback) {\n      callback('construct');\n    }\n  },\n  //-----------------------------------\n  // add()\n  //-----------------------------------\n  addOne: function (obj) {\n    var needsDupCheck = false;\n    for (var key in this.keyFields) {\n      key = this.keyFields[key];\n      var inst = this.objectAt(obj, key);\n      if (inst) {\n        if (this.has(inst)) {\n          if (this.options.ignoreDuplicates)\n            return;\n          if (this._map[inst].indexOf(obj) != -1) {\n            // Cannot add the same item twice\n            needsDupCheck = true;\n            continue;\n          }\n          this._map[inst].push(obj);\n        }\n        else this._map[inst] = [obj];\n      }\n    }\n\n    if (!needsDupCheck || this._list.indexOf(obj) == -1)\n      this._list.push(obj);\n  },\n  add: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this.addOne(arguments[i]);\n    }\n\n    if (this.callback) {\n      this.callback('add', Array.prototype.slice.call(arguments, 0));\n    }\n    \n    return this;\n  },\n  addAll: function (arr) {\n    if (arr.length < 100)\n      this.add.apply(this, arr);\n    else {\n      for (var i = 0; i < arr.length; i++)\n        this.add(arr[i]);\n    }\n    \n    return this;\n  },\n  addMap: function(key, obj) {\n    this._map[key] = obj;\n    if (this.callback) {\n      this.callback('addMap', {\n        key: key,\n        obj: obj\n      });\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Intersection, union, etc.\n  //-----------------------------------\n  /**\n   * Returns a new HashArray that contains the intersection between this (A) and the hasharray passed in (B). Returns A ^ B.\n   */\n  intersection: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.intersection() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true),\n      allItems = this.clone(null, true).addAll(this.all.concat(other.all));\n\n    allItems.all.forEach(function (item) {\n      if (self.collides(item) && other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  /**\n   * Returns a new HashArray that contains the complement (difference) between this hash array (A) and the hasharray passed in (B). Returns A - B.\n   */\n  complement: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.complement() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true);\n\n    this.all.forEach(function (item) {\n      if (!other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  //-----------------------------------\n  // Retrieval\n  //-----------------------------------\n  get: function(key) {\n    return (!(this._map[key] instanceof Array) || this._map[key].length != 1) ? this._map[key] : this._map[key][0];\n  },\n  getAll: function(keys) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    if (keys[0] == '*')\n      return this.all;\n\n    var res = new HashArray(this.keyFields);\n    for (var key in keys)\n      res.add.apply(res, this.getAsArray(keys[key]));\n\n    return res.all;\n  },\n  getAsArray: function(key) {\n    return this._map[key] || [];\n  },\n  getUniqueRandomIntegers: function (count, min, max) {\n    var res = [], map = {};\n\n    count = Math.min(Math.max(max - min, 1), count);\n    \n    while (res.length < count)\n    {\n      var r = Math.floor(min + (Math.random() * (max + 1)));\n      if (map[r]) continue;\n      map[r] = true;\n      res.push(r);\n    }\n\n    return res;\n  },\n  sample: function (count, keys) {\n    // http://en.wikipedia.org/wiki/Image_(mathematics)\n    var image = this.all,\n      ixs = {},\n      res = [];\n\n    if (keys)\n      image = this.getAll(keys);\n\n    var rand = this.getUniqueRandomIntegers(count, 0, image.length - 1);\n\n    for (var i = 0; i < rand.length; i++)\n      res.push(image[rand[i]]);\n\n    return res;\n  },\n  //-----------------------------------\n  // Peeking\n  //-----------------------------------\n  has: function(key) {\n    return this._map.hasOwnProperty(key);\n  },\n  collides: function (item) {\n    for (var k in this.keyFields)\n      if (this.has(this.objectAt(item, this.keyFields[k])))\n        return true;\n    \n    return false;\n  },\n  hasMultiple: function(key) {\n    return this._map[key] instanceof Array;\n  },\n  //-----------------------------------\n  // Removal\n  //-----------------------------------\n  removeByKey: function() {\n    var removed = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var key = arguments[i];\n      var items = this._map[key].concat();\n      if (items) {\n        removed = removed.concat(items);\n        for (var j in items) {\n          var item = items[j];\n          for (var ix in this.keyFields) {\n            var key2 = this.objectAt(item, this.keyFields[ix]);\n            if (key2 && this.has(key2)) {\n              var ix = this._map[key2].indexOf(item);\n              if (ix != -1) {\n                this._map[key2].splice(ix, 1);\n              }\n\n              if (this._map[key2].length == 0)\n                delete this._map[key2];\n            }\n          }\n\n          this._list.splice(this._list.indexOf(item), 1);\n        }\n      }\n      delete this._map[key];\n    }\n\n    if (this.callback) {\n      this.callback('removeByKey', removed);\n    }\n    \n    return this;\n  },\n  remove: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n      for (var ix in this.keyFields) {\n        var key = this.objectAt(item, this.keyFields[ix]);\n        if (key) {\n          var ix = this._map[key].indexOf(item);\n          if (ix != -1)\n            this._map[key].splice(ix, 1);\n          else\n            throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n\n          if (this._map[key].length == 0)\n            delete this._map[key];\n        }\n      }\n\n      var ix = this._list.indexOf(item);\n\n      if (ix != -1)\n        this._list.splice(ix, 1);\n      else\n        throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n    }\n\n    if (this.callback) {\n      this.callback('remove', arguments);\n    }\n    \n    return this;\n  },\n  removeAll: function() {\n    var old = this._list.concat();\n    this._map = {};\n    this._list = [];\n\n    if (this.callback) {\n      this.callback('remove', old);\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Utility\n  //-----------------------------------\n  objectAt: function(obj, path) {\n    if (typeof path === 'string') {\n      return obj[path];\n    }\n\n    var dup = path.concat();\n    // else assume array.\n    while (dup.length && obj) {\n      obj = obj[dup.shift()];\n    }\n\n    return obj;\n  },\n  //-----------------------------------\n  // Iteration\n  //-----------------------------------\n  forEach: function(keys, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var objs = this.getAll(keys);\n\n    objs.forEach(callback);\n    \n    return this;\n  },\n  forEachDeep: function(keys, key, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var self = this,\n      objs = this.getAll(keys);\n\n    objs.forEach(function (item) {\n      callback(self.objectAt(item, key), item);\n    });\n    \n    return this;\n  },\n  //-----------------------------------\n  // Cloning\n  //-----------------------------------\n  clone: function(callback, ignoreItems) {\n    var n = new HashArray(this.keyFields.concat(), callback ? callback : this.callback);\n    if (!ignoreItems)\n      n.add.apply(n, this.all.concat());\n    return n;\n  },\n  //-----------------------------------\n  // Mathematical\n  //-----------------------------------\n  sum: function(keys, key, weightKey) {\n    var self = this,\n      ret = 0;\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= self.objectAt(item, weightKey);\n\n      ret += value;\n    });\n    return ret;\n  },\n  average: function(keys, key, weightKey) {\n    var ret = 0,\n      tot = 0,\n      weightsTotal = 0,\n      self = this;\n\n    if (weightKey !== undefined)\n      this.forEachDeep(keys, weightKey, function (value) {\n        weightsTotal += value;\n      })\n\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= (self.objectAt(item, weightKey) / weightsTotal);\n\n      ret += value;\n      tot++;\n    });\n\n    return weightKey !== undefined ? ret : ret / tot;\n  },\n  //-----------------------------------\n  // Filtering\n  //-----------------------------------\n  filter: function (keys, callbackOrKey) {\n    var self = this;\n    \n    var callback = (typeof(callbackOrKey) == 'function') ? callbackOrKey : defaultCallback;\n\n    var ha = new HashArray(this.keyFields);\n    ha.addAll(this.getAll(keys).filter(callback));\n    return ha;\n    \n    function defaultCallback(item) {\n      var val = self.objectAt(item, callbackOrKey);\n      return val !== undefined && val !== false;\n    }\n  }\n});\n\n//-----------------------------------\n// Operators\n//-----------------------------------\nObject.defineProperty(HashArray.prototype, 'all', {\n  get: function () {\n    return this._list;\n  }\n});\n\nObject.defineProperty(HashArray.prototype, 'map', {\n  get: function () {\n    return this._map;\n  }\n});\n\nmodule.exports = HashArray;\n\n//-----------------------------------\n// Browser\n//-----------------------------------\nif (typeof window !== 'undefined')\n  window.HashArray = HashArray;","/**\n * jclass v1.1.9\n * https://github.com/riga/jclass\n *\n * Marcel Rieger, 2015\n * MIT licensed, http://www.opensource.org/licenses/mit-license\n */\n\n(function(factory) {\n\n  /**\n   * Make jclass available in any context.\n   */\n\n  if (typeof(define) == \"function\" && define.amd) {\n    // AMD\n    define([], factory);\n\n  } else if (typeof(exports) == \"object\") {\n    // CommonJS\n    exports = factory();\n\n    if (typeof(module) == \"object\") {\n      // NodeJS\n      module.exports = exports;\n    }\n\n  } else if (window) {\n    // Browser\n    window.JClass = factory();\n\n  } else if (typeof(console) == \"object\" && console.error instanceof Function) {\n    // error case\n    console.error(\"cannot determine environment\");\n  }\n\n})(function() {\n\n  /**\n   * Helper functions.\n   */\n\n  /**\n   * Checks whether a passed object is a function.\n   *\n   * @param obj - The object to check.\n   * @returns {boolean}\n   */\n  var isFn = function(obj) {\n    return obj instanceof Function;\n  };\n\n  /**\n   * Extends a target object by one or more source objects with shallow key comparisons. Note that\n   * the extension is done in-place.\n   *\n   * @param {object} target - The target object to extend.\n   * @param {...object} source - Source objects.\n   * @returns {object} The extended object.\n   */\n  var extend = function(target) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n\n    // loop through all sources\n    for (var i in sources) {\n      var source = sources[i];\n\n      // object check\n      if (typeof(source) != \"object\") {\n        continue;\n      }\n\n      // loop through all source attributes\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  };\n\n\n  /**\n   * Default options.\n   */\n\n  var defaultOptions = {\n    // internal object for indicating that class objects don't have a class object themselves,\n    // may not be used by users\n    _isClassObject: false\n  };\n\n\n  /**\n   * Flags.\n   */\n\n  // flag to distinguish between prototype and class instantiation \n  var initializing = false;\n\n\n  /**\n   * Base class definition.\n   */\n\n  // empty BaseClass implementation\n  var BaseClass = function(){};\n\n  // add the _subClasses entry\n  BaseClass._subClasses = [];\n\n  // empty init method\n  BaseClass.prototype.init = function(){};\n\n\n  /**\n   * Extend mechanism. Returns a derived class.\n   *\n   * @param {object} instanceMembers - Members that will be owned by instances.\n   * @param {object} classMembers - Members that will be owned by the class itself.\n   * @returns {JClass}\n   */\n  BaseClass._extend = function(instanceMembers, classMembers, options) {\n\n    // default arguments\n    if (instanceMembers === undefined) {\n      instanceMembers = {};\n    }\n    if (classMembers === undefined) {\n      classMembers = {};\n    }\n    if (options === undefined) {\n      options = {};\n    }\n\n    // mixin default options\n    options = extend({}, defaultOptions, options);\n\n\n    // sub class dummy constructor\n    var JClass = function() {\n      // nothing happens here when we are initializing\n      if (initializing) {\n        return;\n      }\n\n      // store a reference to the class itself\n      this._class = JClass;\n\n      // all construction is actually done in the init method\n      if (this.init instanceof Function) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n\n    // alias for readability\n    var SuperClass = this;\n\n    // create an instance of the super class via new\n    // the flag sandwich prevents a call to the init method\n    initializing = true;\n    var prototype = new SuperClass();\n    initializing = false;\n\n    // get the prototype of the super class\n    var superPrototype = SuperClass.prototype;\n\n    // the instance of the super class is our new prototype\n    JClass.prototype = prototype;\n\n    // enforce the constructor to be what we expect\n    // calls to the constructor will invoke the init method (see above)\n    JClass.prototype.constructor = JClass;\n\n    // store a reference to the super class\n    JClass._superClass = SuperClass;\n\n    // store references to all extending classes\n    JClass._subClasses = [];\n    SuperClass._subClasses.push(JClass);\n\n    // make this class extendable as well\n    JClass._extend = SuperClass._extend;\n\n\n    // _extends returns true if the class itself extended \"target\"\n    // in any hierarchy, e.g. every class extends \"JClass\" itself\n    JClass._extends = function(target) {\n      // this function operates recursive, so stop when the super class is our BaseClass\n      if (this._superClass == BaseClass) {\n        return false;\n      }\n\n      // success case\n      if (target == this._superClass || target == BaseClass) {\n        return true;\n      }\n\n      // continue with the next super class\n      return this._superClass._extends(target);\n    };\n\n\n    // propagate instance members directly to the created protoype,\n    // the member is either a normal member or a descriptor\n    for (var key in instanceMembers) {\n      var property = Object.getOwnPropertyDescriptor(instanceMembers, key);\n      var member   = property.value;\n\n      // descriptor flag set?\n      if (member !== null && typeof(member) == \"object\" && member.descriptor) {\n        Object.defineProperty(prototype, key, member);\n\n      // getter/setter syntax\n      } else if (!(\"value\" in property) && (\"set\" in property || \"get\" in property)) {\n        Object.defineProperty(prototype, key, property);\n\n      // normal member, simple assignment\n      } else {\n        prototype[key] = member;\n\n        // if both member and the super member are distinct functions\n        // add the super member to the member as \"_super\"\n        var superMember = superPrototype[key];\n        if (isFn(member) && isFn(superMember) && member !== superMember) {\n          member._super = superMember;\n        }\n      }\n    }\n\n\n    // propagate class members to the _members object\n    if (!options._isClassObject) {\n      // try to find the super class of the _members object \n      var ClassMembersSuperClass = SuperClass._members === undefined ?\n        BaseClass : SuperClass._members._class;\n\n      // create the actual class of the _members instance\n      // with an updated version of our options\n      var opts = extend({}, options, { _isClassObject: true });\n      var ClassMembersClass = ClassMembersSuperClass._extend(classMembers, {}, opts);\n\n      // store the actual JClass in ClassMembersClass\n      ClassMembersClass._instanceClass = JClass;\n\n      // create the _members instance\n      JClass._members = new ClassMembersClass();\n    }\n\n\n    // return the new class\n    return JClass;\n  };\n\n\n  /**\n   * Converts arbitrary protoype-style classes to our JClass definition.\n   *\n   * @param {function} cls - The class to convert.\n   * @returns {JClass}\n   */\n  BaseClass._convert = function(cls, options) {\n    // the properties consist of the class' prototype\n    var instanceMembers = cls.prototype;\n\n    // add the constructor function\n    instanceMembers.init = function() {\n      // simply create an instance of our target class\n      var origin = this._origin = BaseClass._construct(cls, arguments);\n\n      // add properties for each own property in _origin\n      Object.keys(origin).forEach(function(key) {\n        if (!origin.hasOwnProperty(key)) {\n          return;\n        }\n\n        Object.defineProperty(this, key, {\n          get: function() {\n            return origin[key];\n          }\n        });\n      }, this);\n    };\n\n    // finally, create and return our new class\n    return BaseClass._extend(instanceMembers, {}, options);\n  };\n\n\n  /**\n   * Returns an instance of a class with a list of arguments. This provides an apply-like\n   * constructor usage. Note that this approach does not work with native constructors (e.g. String\n   * or Boolean).\n   *\n   * @param {Class|JClass} cls - The class to instantiate. This may be a JClass or a prototype-based\n   *   class.\n   * @param {array} [args=[]] - Arguments to pass to the constructor.\n   * @returns {instance}\n   */\n  BaseClass._construct = function(cls, args) {\n    // empty default args\n    if (args === undefined) {\n      args = [];\n    }\n\n    // create a class wrapper that calls cls like a function\n    var Class = function() {\n      return cls.apply(this, args);\n    };\n\n    // copy the prototype\n    Class.prototype = cls.prototype;\n\n    // return a new instance\n    return new Class();\n  };\n\n\n  /**\n   * Returns a property descriptor of the super class.\n   *\n   * @param {JClass|instance} cls - A JClass or an instance of a JClass to retrieve the property\n   *   descriptor from.\n   * @param {string} prop - The name of the property descriptor to get.\n   * @returns {object}\n   */\n  BaseClass._superDescriptor = function(cls, prop) {\n    // if cls is an instance, use its class\n    if (\"_class\" in cls && cls instanceof cls._class) {\n      cls = cls._class;\n    }\n\n    // a JClass?\n    if (\"_extends\" in cls && cls._extends instanceof Function && cls._extends(this)) {\n      return Object.getOwnPropertyDescriptor(cls._superClass.prototype, prop);\n    } else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Return the BaseClass.\n   */\n\n  return BaseClass;\n});\n"],"sourceRoot":""}
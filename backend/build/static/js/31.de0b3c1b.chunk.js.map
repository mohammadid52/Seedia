{"version":3,"sources":["components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/Modal.tsx","components/alerts/Error.tsx","components/Spinner.tsx","pages/DashboardLayout.tsx","components/DiscoverButton.tsx","components/VerticalProfileCard.tsx","pages/dashboard/PostModal.tsx","pages/dashboard/PostInput.tsx","assets/svg/no-posts.svg","pages/groups/InviteUserModal.tsx","pages/groups/SingleGroupView.tsx"],"names":["FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","onClick","length","Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","Root","as","Fragment","static","style","zIndex","noop","Child","Overlay","Error","errors","map","idx","Spinner","DashboardLayout","firstCol","secondCol","thirdCol","firstColClass","firstColStyles","thirdColClass","thirdColStyles","mainClass","minHeight","DiscoverCard","extraItems","href","links","groups","item","link","VerticalProfileCard","user","content","isBusiness","useAccountType","defaultContent","business","company","jobTitle","getProfile","alt","src","coverPicture","profilePicture","avatarPlaceholder","fullName","PostModal","setNotification","useNotifications","setNewPostAdded","usePostContext","useMutation","addPost","onSuccess","data","postUrl","title","buttonText","buttonUrl","postById","mutate","isLoading","isError","formRef","useRef","innerRef","initialValues","text","onSubmit","values","modifiedData","postData","Button","gradient","loading","current","size","PostInput","customButtons","showPostModal","setShowPostModal","defaultButtons","invert","Icon","HiOutlinePhotograph","BsCameraVideo","bgColor","BiCalendarEvent","RiArticleLine","Card","InviteUserModal","followingList","group","refetchGroup","selectedUsers","setSelectedUsers","config","users","useQuery","fetchUsers","isFetched","isSuccess","sendInvite","unselectAll","sendingInvites","errorSendingInvites","localUsers","setLocalUsers","useEffect","getType","loadingText","targetIdArray","_id","groupId","onSendInvite","rounded","toLowerCase","searchedList","filter","firstName","includes","lastName","isPersonal","alreadyMember","members","find","g","requestSent","requests","findIndex","remove","unshift","onUserClick","checked","d","companyName","background","education","userId","toString","ExitGroup","showModal","setShowModal","history","useHistory","exitGroup","push","targetId","SingleGroupView","userData","useParams","isMember","undefined","verifyMember","FEED","fetchGroupById","refetch","groupData","Loading","isOwner","createdBy","isAdmin","admin","authorized","DashboardHeader","Meta","pageTitle","following","moment","createdOn","format","followers","groupName","CgPoll","NoPosts","cardTitle","slice","member","groupDescription","groupRules","_admin"],"mappings":"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","file":"static/js/31.de0b3c1b.chunk.js","sourcesContent":["import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block align-bottom  bg-white dark:bg-gray-900 rounded-lg px-4 pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top  sm:p-6 pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div>\n                {header && (\n                  <div className=\"modal-header divider dark:divider \">\n                    <h3 className=\"dark:text-white text-gray-900 text-2xl font-semibold\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                {children}\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst DashboardLayout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  firstColClass,\n  firstColStyles,\n  thirdColClass,\n  thirdColStyles,\n  mainClass = '',\n}: {\n  firstColClass?: string\n  mainClass?: string\n  firstColStyles?: any\n  firstCol?: React.ReactNode\n  thirdColClass?: string\n  thirdColStyles?: any\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n}) => {\n  return (\n    <div className=\"flex-grow pt-24 w-full px-4 md:max-w-6xl lg:max-w-7xl sm:max-w-5xl mx-auto xl:px-8 lg:flex relative\">\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 px-6 sm:px-4 lg:px-0  min-w-0 bg-gray-100 dark:bg-gray-900 xl:flex\">\n        <div\n          style={{ ...firstColStyles }}\n          className={`${firstColClass}  dark:bg-gray-900 xl:flex-shrink-0 xl:w-64 bg-gray-100`}\n        >\n          <div\n            className=\"h-full py-6\n          \"\n          >\n            {/* Start left column area */}\n            <div className=\"h-full  relative\" style={{ minHeight: '12rem' }}>\n              {firstCol}\n            </div>\n            {/* End left column area */}\n          </div>\n        </div>\n\n        <div className=\"bg-gray-100 dark:bg-gray-900 lg:min-w-0 lg:pl-6 pl-0 lg:flex-1 \">\n          <div className=\"h-full py-6 px-0 lg:px-6 xl:px-8\">\n            {/* Start main area*/}\n            <div className=\"relative h-full \" style={{}}>\n              {secondCol}\n            </div>\n            {/* End main area */}\n          </div>\n        </div>\n      </div>\n\n      <div\n        style={{ ...thirdColStyles }}\n        className={`${thirdColClass} bg-gray-100 dark:bg-gray-900 px-4 lg:px-0 lg:flex-shrink-0 `}\n      >\n        <div className=\"h-full pl-0 lg:pl-6  py-6 \">\n          {/* Start right column area */}\n          <div className=\"h-full relative\" style={{ minHeight: '16rem' }}>\n            {thirdCol}\n          </div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardLayout\n","import { links } from 'constants/Links'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\" cursor-pointer flex items-center justify-between\">\n            <p className=\"hover:underline \">Events</p>\n            <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n              +\n            </div>\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst VerticalProfileCard = ({\n  user,\n  content = null,\n}: {\n  user: IParent\n  content?: React.ReactNode\n}) => {\n  const { isBusiness } = useAccountType(user)\n\n  const defaultContent = (\n    <>\n      <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n        {isBusiness ? user?.business?.name : user?.company?.jobTitle}\n      </p>\n      <a\n        className=\"dark:text-white text-gray-900 text-lg font-medium\"\n        href={links.getProfile(user)}\n      >\n        <div className=\"mt-2\">View full profile</div>\n      </a>\n    </>\n  )\n\n  return (\n    <div className=\"plain-card\">\n      <img\n        alt=\"\"\n        src={\n          user?.coverPicture\n            ? user?.coverPicture\n            : 'https://source.unsplash.com/1600x900/?nature,water'\n        }\n        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n      />\n      <div className=\"flex justify-center -mt-8\">\n        <img\n          alt=\"\"\n          src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n          className=\"rounded-full border-solid lg:h-16 lg:w-16 h-12 w-12 dark:border-gray-800 border-white  border-2 -mt-3\"\n        />\n      </div>\n      <div className={`text-center ${content ? '' : 'px-3 pb-6 pt-2'}`}>\n        <a\n          href={links.getProfile(user, true)}\n          className=\"dark:text-white cursor-pointer text-gray-900 text-base font-bold \"\n        >\n          {user.fullName}\n        </a>\n        {content || defaultContent}\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalProfileCard\n","import { addPost } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { Form, Formik } from 'formik'\nimport { useRef } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostModal = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const initialValues = {\n    text: '',\n  }\n  const formRef = useRef()\n\n  const onSubmit = (values: { text: string }) => {\n    const modifiedData = {\n      postData: { text: values.text },\n    }\n    mutate(modifiedData)\n  }\n\n  return (\n    <Modal setOpen={setOpen} header=\"Create a post\" open={open}>\n      <div className=\" min-w-132 min-h-56 max-h-132 overflow-y-auto\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            <FormInput\n              gridClass=\"hideBorders\"\n              hideBorders\n              textClass=\"text-sm text-gray-700 dark:text-gray-100 sm:text-lg\"\n              placeholder=\"What do you want to talk about?\"\n              rows={10}\n              name=\"text\"\n              id=\"text\"\n              textarea\n            />\n            <div className=\"mt-5 m-1 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={isLoading}\n                // @ts-ignore\n                disabled={formRef?.current?.values.text.length <= 0}\n                type=\"submit\"\n                label=\"Post\"\n                size=\"lg\"\n              />\n            </div>\n            {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport PostModal from 'pages/dashboard/PostModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal open={showPostModal} setOpen={setShowPostModal} />\n      )}\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","export default __webpack_public_path__ + \"static/media/no-posts.25d46d19.svg\";","import { XIcon } from '@heroicons/react/solid'\nimport { sendInvite } from 'apis/mutations'\nimport { fetchUsers } from 'apis/queries'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport Spinner from 'components/Spinner'\nimport useAccountType from 'hooks/useAccountType'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport { findIndex, remove } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useMutation, useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst InviteUserModal = ({\n  open,\n  setOpen,\n  followingList,\n  group,\n  refetchGroup,\n}: {\n  open: boolean\n  group: IGroup\n  followingList: string[]\n  refetchGroup: any\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState<IParent[]>([])\n\n  const config = {\n    users: followingList,\n  }\n  const { data, isFetched, isLoading, isSuccess } = useQuery(`user-list`, () =>\n    fetchUsers(config)\n  )\n\n  const {\n    mutate,\n    isLoading: sendingInvites,\n    error: errorSendingInvites,\n  } = useMutation(sendInvite, {\n    onSuccess: () => {\n      setOpen(false)\n      unselectAll()\n      refetchGroup()\n    },\n  })\n\n  const onUserClick = (user: IParent) => {\n    const selectedIdx = findIndex(selectedUsers, ['_id', user._id])\n    if (selectedIdx !== -1) {\n      // selected\n      remove(selectedUsers, ['_id', user._id])\n    } else {\n      selectedUsers.unshift(user)\n\n      // not selected\n    }\n    setSelectedUsers([...selectedUsers])\n  }\n\n  const unselectAll = () => {\n    setSelectedUsers([])\n  }\n\n  const unselect = (userId: string) => {\n    remove(selectedUsers, ['_id', userId])\n    setSelectedUsers([...selectedUsers])\n  }\n\n  const users: IParent[] =\n    !isLoading && isFetched && isSuccess ? data.data.data.users : []\n\n  const [localUsers, setLocalUsers] = useState<IParent[]>([])\n  useEffect(() => {\n    if (users && users.length > 0) {\n      setLocalUsers([...users])\n    }\n  }, [users])\n\n  const { getType } = useAccountType()\n\n  const onSendInvite = () => {\n    const targetIdArray = selectedUsers.map((user) => user._id)\n    mutate({ targetIdArray, groupId: group._id })\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.toLowerCase()\n    let searchedList = users.filter((user) => {\n      return (\n        user.firstName.toLowerCase().includes(value) ||\n        user.lastName.toLowerCase().includes(value) ||\n        user.fullName.toLowerCase().includes(value)\n      )\n    })\n    setLocalUsers([...searchedList])\n  }\n\n  return (\n    <Modal\n      fixedBottom={\n        <div>\n          {!isLoading && isFetched && (\n            <div className=\"flex items-center justify-end  p-4\">\n              <Button\n                label={`Invite ${\n                  selectedUsers.length > 0 ? selectedUsers.length : ''\n                }`}\n                size=\"lg\"\n                loading={sendingInvites}\n                loadingText=\"Sending invites\"\n                onClick={() => onSendInvite()}\n                disabled={selectedUsers.length <= 0}\n                gradient\n                rounded=\"rounded-full\"\n              />\n            </div>\n          )}\n        </div>\n      }\n      header=\"Invite connections\"\n      open={open}\n      setOpen={setOpen}\n    >\n      <div className=\"lg:min-w-160 min-w-132 max-w-256\">\n        {!isLoading && isFetched ? (\n          <div>\n            <div className=\"w-full\">\n              <input\n                type=\"search\"\n                placeholder=\"Search by name\"\n                className=\"w-full py-2 px-4 outline-none border-none focus:ring-1 text-gray-600 dark:text-gray-400 text-sm focus:ring-yellow-500 bg-transparent h-full\"\n                onChange={onChange}\n              />\n            </div>\n            <div className=\"grid grid-cols-5 p-2 border-t border-gray-200 dark:border-gray-800\">\n              <div className=\"col-span-3 min-h-136 pb-12  max-h-136 flex flex-col  overflow-y-scroll overflow-x-hidden \">\n                {localUsers.map((user: IParent) => {\n                  const { isBusiness, isPersonal } = getType(user)\n                  const alreadyMember = Boolean(\n                    // @ts-ignore\n                    group.members.find((g) => g._id === user._id)\n                  )\n                  const requestSent = Boolean(\n                    // @ts-ignore\n                    group.requests.find((g) => g === user._id)\n                  )\n                  return (\n                    <div\n                      key={user._id}\n                      className={`p-2 py-4 relative cursor-pointer border-b border-gray-200 dark:border-gray-700 ${\n                        alreadyMember || requestSent\n                          ? 'dark:bg-gray-800 opacity-75 bg-gray-100 pointer-events-none'\n                          : 'dark:hover:bg-gray-800 hover:bg-gray-100'\n                      }  transition-all`}\n                      onClick={() => onUserClick(user)}\n                    >\n                      <div className=\"flex  cursor-pointer items-center \">\n                        <input\n                          id=\"users\"\n                          // onChange={(e) => onUserClick(user)}\n                          name=\"candidates\"\n                          checked={Boolean(\n                            selectedUsers.find((d) => d._id === user._id)\n                          )}\n                          type=\"checkbox\"\n                          className=\"focus:ring-yellow-500 mr-4 h-5 w-5 text-yellow-600 border-gray-300 rounded\"\n                        />\n                        <img\n                          src={user.profilePicture || avatarPlaceholder}\n                          alt=\"\"\n                          className=\"rounded-full mr-2 h-12 w-12\"\n                        />\n                        <div>\n                          <h4 className=\"dark:text-white text-gray-900\">\n                            {user.fullName}\n                          </h4>\n                          <p className=\"dark:text-gray-500 text-gray-600 text-sm\">\n                            {isBusiness\n                              ? user?.business?.name\n                              : isPersonal\n                              ? user?.company?.companyName\n                              : user?.background?.education &&\n                                user?.background?.education[0].name}\n                          </p>\n                        </div>\n                      </div>\n                      {(alreadyMember || requestSent) && (\n                        <p className=\"absolute text-xs italic dark:text-gray-500 text-gray-400 bottom-1 right-2 \">\n                          {alreadyMember ? 'Already member' : 'Request sent'}\n                        </p>\n                      )}\n                    </div>\n                  )\n                })}\n              </div>\n              <div className=\"col-span-2 ml-2\">\n                <div className=\"border-b text-sm border-gray-200 dark:border-gray-800  text-gray-500 dark:text-gray-400 p-4 flex items-center justify-between\">\n                  <p>{selectedUsers.length} selected</p>\n                  <button\n                    onClick={unselectAll}\n                    className=\"font-medium dark:text-gray-300\"\n                  >\n                    Unselect all\n                  </button>\n                </div>\n                <div className=\"p-4 pr-0 flex flex-col gap-y-4 max-w-56 min-w-56  max-h-136 pb-20 overflow-y-scroll mx-2\">\n                  {selectedUsers &&\n                    selectedUsers.length > 0 &&\n                    selectedUsers.map((user: IParent) => (\n                      <div className=\"flex  items-center  justify-between\">\n                        <div className=\"flex items-center\">\n                          <img\n                            src={user.profilePicture || avatarPlaceholder}\n                            alt=\"\"\n                            className=\"rounded-full mr-2 h-8 w-8\"\n                          />\n                          <h4 className=\"dark:text-white\">{user.fullName}</h4>\n                        </div>\n                        <div\n                          onClick={() => unselect(user._id)}\n                          className=\"dark:hover:bg-gray-700 transition-all rounded-full p-0.5\"\n                        >\n                          <XIcon\n                            className=\"cursor-pointer h-5 w-5   dark:text-gray-400\"\n                            aria-hidden=\"true\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"flex items-center justify-center\">\n            <Spinner />\n          </div>\n        )}\n        <div>\n          {errorSendingInvites && (\n            <Error errors={[errorSendingInvites.toString()]} />\n          )}\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default InviteUserModal\n","import { fetchGroupById } from 'apis/queries'\nimport { exitGroup } from 'apis/mutations'\nimport NoPosts from 'assets/svg/no-posts.svg'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport DiscoverCard from 'components/DiscoverButton'\nimport Loading from 'components/Loading'\nimport Spinner from 'components/Spinner'\nimport VerticalProfileCard from 'components/VerticalProfileCard'\nimport { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport moment from 'moment'\nimport PostInput from 'pages/dashboard/PostInput'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport InviteUserModal from 'pages/groups/InviteUserModal'\nimport { useEffect, useState } from 'react'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { CgPoll } from 'react-icons/cg'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { useMutation, useQuery } from 'react-query'\nimport { useHistory, useParams } from 'react-router'\nimport Modal from 'components/atoms/Modal'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst ExitGroup = ({\n  userId,\n  groupId,\n}: {\n  userId: string\n  groupId: string\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const history = useHistory()\n  const { mutate } = useMutation(exitGroup, {\n    onSuccess: () => {\n      history.push(links.groups())\n    },\n  })\n\n  return (\n    <>\n      <Modal header=\"Confirm\" open={showModal} setOpen={setShowModal}>\n        <div className=\" \">\n          <p className=\"dark:text-gray-400 text-gray-500 text-lg\">\n            Are you sure you want to exit this group?\n          </p>\n          <div className=\"flex items-center p-4 justify-end\">\n            <Button\n              label=\"Confirm\"\n              gradient\n              onClick={() => mutate({ targetId: userId, groupId: groupId })}\n            />\n          </div>\n        </div>\n      </Modal>\n      <div className=\"rounded-lg border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n        <h1\n          onClick={() => setShowModal(true)}\n          className=\"text-center hover:bg-red-500 hover:text-white rounded-lg p-2 cursor-pointer text-red-500\"\n        >\n          Exit group\n        </h1>\n      </div>\n    </>\n  )\n}\n\nconst SingleGroupView = ({ userData }: { userData: IParent }) => {\n  const params: any = useParams()\n  const groupId = params.groupId\n\n  // check if the current user is a member of group\n  const verifyMember = () => {\n    let isMember = false\n    if (groupId) {\n      if (\n        !userData ||\n        userData?.groups === undefined ||\n        userData?.groups?.length === 0\n      ) {\n        isMember = false\n      } else if (userData.groups.includes(groupId)) {\n        isMember = true\n      } else {\n        isMember = false\n      }\n    } else {\n      isMember = false\n    }\n    return isMember\n  }\n\n  const history = useHistory()\n\n  const isMember = verifyMember()\n  useEffect(() => {\n    if (!isMember) {\n      history.push(links.FEED)\n    }\n  }, [groupId, isMember])\n\n  const { data, isLoading, isFetched, refetch } = useQuery('group-data', () =>\n    fetchGroupById(groupId)\n  )\n  const groupData: IGroup = isFetched && !isLoading && data.data.data\n\n  const { getType } = useAccountType(userData)\n  const [showModal, setShowModal] = useState(false)\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  const isOwner = groupData?.createdBy?.toString() === userData._id\n  const isAdmin = groupData?.admin?.includes(userData._id)\n\n  const authorized = isOwner || isAdmin\n\n  return (\n    isMember && (\n      <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n        <DashboardHeader userData={userData} />\n        <Meta pageTitle={`Post | Feed | 13RMS`} />\n\n        {authorized && (\n          <InviteUserModal\n            refetchGroup={refetch}\n            group={groupData}\n            followingList={userData.following}\n            open={showModal}\n            setOpen={setShowModal}\n          />\n        )}\n\n        <div\n          className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n        >\n          <DashboardLayout\n            firstColClass={`   max-h-152 lg:block  xl:block w-full `}\n            firstCol={\n              <div className=\"flex flex-col gap-y-12\">\n                {isFetched && !isLoading ? (\n                  <>\n                    <VerticalProfileCard\n                      content={\n                        <div>\n                          <div>\n                            <div className=\"ml-2 flex-shrink-0 items-center justify-center flex\">\n                              <p className=\"px-2 inline-flex text-sm items-center justify-center leading-5 font-semibold rounded-md bg-gray-100 text-gray-800 dark:bg-gray-600 dark:text-gray-200\">\n                                {isOwner\n                                  ? 'Owner'\n                                  : isAdmin\n                                  ? 'Admin'\n                                  : 'Member'}\n                              </p>\n                            </div>\n\n                            <p className=\"mb-4 text-gray-600 dark:text-gray-400 text-sm tracking-wide mt-1\">\n                              Group created:{' '}\n                              {moment(groupData.createdOn).format('MMM YYYY')}\n                            </p>\n                            {authorized && (\n                              <div className=\"flex border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700 transition-all  item-center px-4 cursor-pointer justify-between\">\n                                <h6 className=\"font-medium \">\n                                  Requests to join\n                                </h6>\n                                <a\n                                  href={links.followers()}\n                                  className=\"hover:underline text-link cursor-pointer font-semibold\"\n                                >\n                                  {groupData?.requests?.length || 0}\n                                </a>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      }\n                      user={userData}\n                    />\n                    <DiscoverCard />\n                    {!isOwner && (\n                      <ExitGroup groupId={groupId} userId={userData._id} />\n                    )}\n\n                    {/* <Modal\n                      setOpen={setShowCreateGroupModal}\n                      header=\"Create group\"\n                      open={showCreateGroupModal}\n                    >\n                      <div className=\" min-w-132 max-w-164 min-h-56 max-h-132 overflow-y-auto\">\n                        <CreateGroup\n                          refetchGroup={refetch}\n                          groupData={groupData}\n                          onSuccess={() => setShowCreateGroupModal(false)}\n                        />\n                      </div>\n                    </Modal>\n\n                    {authorized && (\n                      <Button\n                        label=\"Edit group details\"\n                        gradient\n                        onClick={() => setShowCreateGroupModal(true)}\n                        // link={links.editGroup(groupData._id)}\n                      />\n                    )} */}\n                  </>\n                ) : (\n                  <Spinner />\n                )}\n              </div>\n            }\n            secondCol={\n              <div className=\"\">\n                {isLoading && !isFetched ? (\n                  <Spinner />\n                ) : (\n                  <div className=\"flex gap-y-12 mx-auto lg:max-w-2xl  flex-col\">\n                    <div className=\"rounded-lg border dark:border-gray-700  border-gray-200 overflow-hidden  bg-white dark:bg-gray-800\">\n                      <img\n                        alt=\"\"\n                        src={\n                          groupData?.coverPicture\n                            ? groupData?.coverPicture\n                            : 'https://source.unsplash.com/1600x900/?nature,water'\n                        }\n                        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n                      />\n                      <div className=\"flex justify-start mx-8 -mt-5\">\n                        <img\n                          alt=\"\"\n                          src={\n                            groupData.profilePicture\n                              ? groupData.profilePicture\n                              : avatarPlaceholder\n                          }\n                          className=\" border-solid lg:h-16 lg:w-16 h-12 w-12  border-white border-2 -mt-3\"\n                        />\n                      </div>\n                      <div className=\"text-left mx-8 mt-2 pb-6 pt-2\">\n                        <h3 className=\"dark:text-white text-gray-900 text-2xl font-medium \">\n                          {groupData.groupName}\n                        </h3>\n                      </div>\n                    </div>\n\n                    <PostInput\n                      // for now\n                      disabled\n                      placeholder=\"Start a post in this group\"\n                      customButtons={\n                        <>\n                          <Button\n                            gradient\n                            invert\n                            Icon={HiOutlinePhotograph}\n                            label=\"Photo\"\n                          />\n                          <Button\n                            gradient\n                            Icon={BsCameraVideo}\n                            invert\n                            label=\"Video\"\n                          />\n                          <Button gradient Icon={CgPoll} invert label=\"Poll\" />\n                        </>\n                      }\n                      profilePicture={userData?.profilePicture}\n                    />\n\n                    <Card\n                      content={\n                        <div className=\"m-4 text-center flex items-center justify-center flex-col\">\n                          <img\n                            src={NoPosts}\n                            alt=\"\"\n                            className=\"h-28 sm:h-32 lg:h-36 xl:h-40 w-full\"\n                          />\n                          <h3 className=\"mt-4 text-xl font-medium dark:text-gray-300 text-gray-900\">\n                            Create the first post\n                          </h3>\n                          <p className=\"mt-1 text-base text-gray-500\">\n                            Get the conversation going. Be the first to post in\n                            this group!\n                          </p>\n                        </div>\n                      }\n                    />\n                  </div>\n                )}\n              </div>\n            }\n            thirdColClass=\"lg:block\"\n            thirdCol={\n              <div className=\"space-y-12 lg:max-w-84 max-w-sm\">\n                <Card\n                  cardTitle={`${groupData.members.length} member${\n                    groupData.members.length > 1 ? 's' : ''\n                  }`}\n                  content={\n                    <div className=\"mt-4 flex-shrink-0 sm:mt-0 \">\n                      <div className=\"flex overflow-hidden -space-x-2\">\n                        {groupData.members\n                          .slice(0, 4)\n                          // @ts-ignore\n                          .map((member: IParent) => (\n                            <img\n                              key={member._id}\n                              className=\"inline-block lg:h-12 lg:w-12 h-12 w-12 rounded-full ring-2 dark:ring-transparent ring-white\"\n                              src={member.profilePicture}\n                              alt={''}\n                            />\n                          ))}\n                      </div>\n                      {authorized && (\n                        <Button\n                          onClick={() => setShowModal(true)}\n                          gradient\n                          rounded=\"rounded-full\"\n                          className=\"mt-4\"\n                          label=\"Invite connections\"\n                        />\n                      )}\n                    </div>\n                  }\n                />\n                <Card\n                  cardTitle=\"About this group\"\n                  content={\n                    <p className=\"text-gray-900 dark:text-gray-200 line-clamp \">\n                      {groupData.groupDescription}\n                    </p>\n                  }\n                />\n                {groupData.groupRules && (\n                  <Card\n                    cardTitle=\"Group rules\"\n                    content={\n                      <p className=\"text-gray-900 dark:text-gray-200 line-clamp \">\n                        {groupData.groupRules}\n                      </p>\n                    }\n                  />\n                )}\n                <Card\n                  cardTitle=\"Admin\"\n                  content={\n                    <div>\n                      {/* Start */}\n                      {/* @ts-ignore */}\n                      {groupData.admin.map((_admin: IParent) => {\n                        const { isBusiness, isPersonal } = getType(_admin)\n                        return (\n                          <div className=\"flex \">\n                            <div className=\"mr-4 mt-2 flex-shrink-0\">\n                              <img\n                                alt=\"\"\n                                src={\n                                  _admin.profilePicture\n                                    ? _admin.profilePicture\n                                    : avatarPlaceholder\n                                }\n                                className=\"rounded-full border-solid lg:h-12 lg:w-12 h-12 w-12  border-white border-2 -mt-3\"\n                              />\n                            </div>\n                            <div>\n                              <a\n                                href={links.getProfile(_admin)}\n                                className=\"text-base  dark:text-white font-semibold\"\n                              >\n                                {_admin.fullName}\n                              </a>\n                              <p className=\"mt-1 text-sm dark:text-gray-500\">\n                                {isBusiness\n                                  ? _admin?.business?.name\n                                  : isPersonal\n                                  ? _admin?.company?.companyName\n                                  : _admin?.background?.education &&\n                                    _admin?.background?.education[0].name}\n                              </p>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  }\n                />\n\n                {/* <Following\n                  showSingleCard\n                  list={userData?.following}\n                  interests={userData?.background?.interests}\n                /> */}\n              </div>\n            }\n          />\n        </div>\n      </div>\n    )\n  )\n}\n\nexport default SingleGroupView\n"],"sourceRoot":""}
{"version":3,"sources":["components/atoms/Toggle.tsx","containers/Layout.tsx","../../../../src/components/description/description.tsx","../../../../src/components/label/label.tsx","../../../../src/components/switch/switch.tsx","pages/account/student/EducationStep.jsx"],"names":["classNames","classes","filter","Boolean","join","Toggle","enabled","setEnabled","text","subText","Group","as","className","Label","passive","Description","checked","onChange","aria-hidden","Layout","title","subtitle","children","src","alt","DescriptionContext","createContext","useDescriptionContext","context","useContext","err","Error","LabelContext","useLabelContext","GroupContext","DEFAULT_GROUP_TAG","Switch","props","passThroughProps","id","useId","groupContext","toggle","useCallback","handleClick","isDisabledReactIssue7711","event","handleKeyUp","Keys","handleKeyPress","slot","useMemo","propsWeControl","ref","role","tabIndex","onClick","onKeyUp","onKeyPress","Object","type","render","defaultTag","name","useState","switchElement","setSwitchElement","labelIds","setLabelIds","register","existing","clone","idx","contextBag","value","useLabels","labelledby","LabelProvider","descriptionIds","setDescriptionIds","useDescriptions","describedby","DescriptionProvider","switch","setSwitch","preventScroll","useIsoMorphicEffect","allProps","console","log","yearList","EducationStep","isLoaded","setIsLoaded","history","useHistory","useForm","education","grade","grade_subject","start_year","end_year","above_sixteen","fields","errors","setFields","setErrors","setTimeout","saving","setSaving","nextStep","isValid","trimmedLen","field","trim","length","jobTitle","latestCompany","validateForm","wait","then","push","label","required","error","list","selectedItem","onSelect","item","yearListWithFuture","onlyText","rounded","primary","fullWidth","loading","gradient","size"],"mappings":"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","file":"static/js/6.9263a363.chunk.js","sourcesContent":["import { Switch } from '@headlessui/react'\n\nexport const classNames = (...classes: string[]) => {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Toggle = ({\n  enabled,\n  setEnabled,\n  text,\n  subText,\n}: {\n  enabled: boolean\n  setEnabled: React.Dispatch<React.SetStateAction<boolean>>\n  text: string\n  subText?: string\n}) => {\n  return (\n    <Switch.Group as=\"div\" className=\"flex items-center justify-between\">\n      <span className=\"flex-grow flex flex-col items-start\">\n        <Switch.Label\n          as=\"span\"\n          className=\"text-sm font-medium text-gray-900\"\n          passive\n        >\n          {text}\n        </Switch.Label>\n        <Switch.Description as=\"span\" className=\"text-sm text-gray-500\">\n          {subText}\n        </Switch.Description>\n      </span>\n      <Switch\n        checked={enabled}\n        onChange={setEnabled}\n        className={classNames(\n          enabled\n            ? 'bg-gradient-to-r from-pink-500 to-yellow-500'\n            : 'bg-gray-200',\n          'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? 'translate-x-5' : 'translate-x-0',\n            'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200'\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  )\n}\nexport default Toggle\n","import Copyright from 'components/Copyright'\nimport React from 'react'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n}: {\n  title: string\n  subtitle: React.ReactNode\n  children: React.ReactNode\n}) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"13RMS\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          {title}\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n      </div>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n","/* eslint-disable quotes */\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport Toggle from 'components/atoms/Toggle'\nimport Loading from 'components/Loading'\nimport Layout from 'containers/Layout'\nimport useForm from 'hooks/useForm'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\nimport { yearList, yearListWithFuture } from 'values/values'\nconsole.log('🚀 ~ file: EducationStep.jsx ~ line 13 ~ yearList', yearList)\n\nconst EducationStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n\n  //capture inputs\n\n  const INITIAL_FIELDS = {\n    education: '',\n    grade: '',\n    grade_subject: '',\n    start_year: { id: '', name: '' },\n    end_year: { id: '', name: '' },\n    above_sixteen: false,\n  }\n\n  const ERROR_INITIAL_FIELDS = {\n    education: '',\n    grade: '',\n    grade_subject: '',\n    start_year: '',\n    end_year: '',\n    above_sixteen: '',\n  }\n\n  const { fields, onChange, errors, setFields, setErrors } = useForm(\n    INITIAL_FIELDS,\n    ERROR_INITIAL_FIELDS\n  )\n\n  const validateForm = () => {\n    let isValid = true\n\n    const trimmedLen = (field) => fields[field].trim().length\n\n    if (trimmedLen('jobTitle') <= 0) {\n      isValid = false\n      errors.jobTitle = 'Job title could not be empty.'\n    } else {\n      isValid = true\n      errors.jobTitle = ''\n    }\n\n    if (trimmedLen('latestCompany') <= 0) {\n      isValid = false\n      errors.latestCompany = 'This field is important.'\n    } else {\n      isValid = true\n      errors.latestCompany = ''\n    }\n\n    setErrors({ ...errors })\n\n    return isValid\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const [saving, setSaving] = useState(false)\n\n  const nextStep = () => {\n    const isValid = validateForm()\n    if (isValid) {\n      setSaving(true)\n      wait(3000).then(() => {\n        setSaving(false)\n        return history.push('/account/personal/edit-profile/location')\n      })\n    } else {\n    }\n  }\n\n  const goBack = () => {\n    history.push('/signup')\n  }\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title=\"Education Information\"\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\n          <div className=\"space-y-6\">\n            <FormInput\n              label=\"Education\"\n              id=\"education\"\n              name=\"education\"\n              onChange={onChange}\n              required\n              type=\"text\"\n              error={errors.education}\n              value={fields.education}\n            />\n\n            <FormInput\n              label=\"Grade / title\"\n              id=\"grade\"\n              name=\"grade\"\n              onChange={onChange}\n              error={errors.grade}\n              required\n              value={fields.grade}\n            />\n            <FormInput\n              label=\"Graduation subject\"\n              id=\"grade_subject\"\n              name=\"grade_subject\"\n              onChange={onChange}\n              error={errors.grade_subject}\n              required\n              value={fields.grade_subject}\n            />\n            <div className=\"mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2\">\n              <div className=\"mt-6\">\n                <Selector\n                  label={'Start year'}\n                  list={yearList}\n                  selectedItem={\n                    fields.start_year.name\n                      ? fields.start_year\n                      : { id: 0, name: '-' }\n                  }\n                  onSelect={(item) =>\n                    setFields({\n                      ...fields,\n                      start_year: { id: item.id, name: item.name },\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"mt-6\">\n                <Selector\n                  label={'End year (or expected)'}\n                  list={yearListWithFuture}\n                  selectedItem={\n                    fields.end_year.name\n                      ? fields.end_year\n                      : { id: 0, name: '-' }\n                  }\n                  onSelect={(item) =>\n                    setFields({\n                      ...fields,\n                      end_year: { id: item.id, name: item.name },\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div>\n              <Toggle\n                enabled={fields.above_sixteen}\n                text={\"I'm over 16 years old\"}\n                setEnabled={() =>\n                  setFields({ ...fields, above_sixteen: !fields.above_sixteen })\n                }\n              />\n            </div>\n            <div>\n              <Button\n                onClick={nextStep}\n                onlyText\n                rounded=\"rounded-lg\"\n                primary\n                fullWidth\n                loading={saving}\n                label=\"I'm not a student\"\n              />\n            </div>\n\n            <div>\n              <Button\n                onClick={nextStep}\n                fullWidth\n                rounded=\"rounded-lg\"\n                gradient\n                loading={saving}\n                label=\"Next Step\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"my-4\">\n          <Button\n            onClick={goBack}\n            rounded=\"rounded-lg\"\n            gradient\n            size=\"sm\"\n            label=\"Go back\"\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default EducationStep\n"],"sourceRoot":""}
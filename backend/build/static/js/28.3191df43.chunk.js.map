{"version":3,"sources":["utils/functions/index.js","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/Dropdown/Dropdown.tsx","components/Spinner.tsx","components/atoms/Title.tsx","components/atoms/SectionTitle.tsx","assets/svg/placeholder.png","components/atoms/products/Section.tsx","pages/products/QuickOverview.tsx","pages/products/Product.tsx","../../../../src/components/radio-group/radio-group.tsx","../../../src/hooks/use-flags.ts","components/atoms/Label.tsx","pages/store/BannerImage.tsx","pages/store/OpenStore.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","onClick","Dropdown","list","as","Button","Fragment","Items","item","Item","active","style","zIndex","stopPropagation","classNames","Icon","Spinner","Title","children","size","fontWeight","textColor","isLoading","SectionTitle","title","gradient","Section","showChildren","noDataText","_ref","ref","content","subtitle","iconUrl","QuickOverview","setShow","product","availableColors","class","selectedClass","selectedColor","setSelectedColor","availableSizes","inStock","selectedSize","setSelectedSize","Root","onClose","fontSize","Child","Overlay","images","src","url","alt","productName","price","rating","href","reviews","Label","color","Option","background","code","checked","fullWidth","Product","showWhoPurchased","purchasedBy","loadingFriends","userId","quickOverviewModal","setQuickOverviewModal","itsMyProduct","postedBy","toString","_delete","useMutation","deleteProduct","onSuccess","dropdownList","mutate","_id","friend","links","getProfileById","profileUrl","other","template","fullName","coverPicture","getProductUrl","ActionTypes","reducers","options","state","action","element","propsRef","idx","radio","RadioGroupContext","createContext","useRadioGroupContext","component","context","useContext","err","Error","RadioGroup","stateReducer","match","props","passThroughProps","useReducer","dispatch","useLabels","labelledby","LabelProvider","useDescriptions","describedby","DescriptionProvider","useId","radioGroupRef","useRef","firstOption","useMemo","option","containsCheckedOption","triggerChange","useCallback","nextValue","nextOption","useTreeWalker","container","accept","node","NodeFilter","walk","handleKeyDown","all","event","Keys","focusIn","Focus","FocusResult","activeOption","document","registerOption","RegisterOption","api","change","propsWeControl","role","onKeyDown","render","defaultTag","OptionState","optionRef","initialFlags","flags","setFlags","addFlag","hasFlag","removeFlag","toggleFlag","useFlags","useIsoMorphicEffect","radioGroupDisabled","radioGroupValue","handleClick","handleFocus","handleBlur","isFirstOption","isDisabled","tabIndex","undefined","onFocus","onBlur","slot","text","BannerImage","onImageSelect","media","setMedia","bannerRef","backgroundImage","URL","createObjectURL","current","click","React","memo","ListProducts","onLoad","useQuery","fetchAllProducts","data","isFetched","isSuccess","products","setNotification","useNotifications","buttonText","buttonUrl","addProduct","to","FEED","OpenStore","userData","isStoreOpened","isEmpty","store","upload","uploadMediaToServer","a","b","values","formRef","finalInput","bannerImage","location","selectedProducts","storeData","setSelectedProducts","openStore","firstName","viewStore","creatingStore","history","useHistory","useEffect","push","validationSchema","Yup","buttonLabel","min","max","buttonLink","customMaxWidth","pageTitle","initialValues","innerRef","onSubmit","fd","FormData","append","setFieldValue","files","rounded","loading"],"mappings":"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","file":"static/js/28.3191df43.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst Title = ({\n  className,\n  children,\n  size = 'text-3xl',\n  fontWeight = 'font-semibld',\n  textColor = 'text-gray-900 dark:text-white',\n  isLoading = false,\n}: {\n  className?: string\n  size?: string\n  isLoading?: boolean\n  textColor?: string\n  fontWeight?: string\n  children: React.ReactNode\n}) => {\n  if (isLoading) {\n    return (\n      <div\n        className={`h-4 animate-pulse bg-gray-400 rounded ${className} ${size} ${fontWeight} ${textColor}`}\n      ></div>\n    )\n  }\n  return (\n    <h1 className={`${className} ${size} ${fontWeight} ${textColor}`}>\n      {children}\n    </h1>\n  )\n}\n\nexport default Title\n","const SectionTitle = ({\n  title,\n  gradient = true,\n  className,\n}: {\n  title: string\n  gradient?: boolean\n  className?: string\n}) => {\n  return (\n    <h2\n      className={`${className} text-2xl mb-6 font-extrabold ${\n        gradient ? 'gradient-border' : ''\n      } border-b pb-2 tracking-tight\n         dark:text-white text-gray-900`}\n    >\n      {title}\n    </h2>\n  )\n}\n\nexport default SectionTitle\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport SectionTitle from 'components/atoms/SectionTitle'\nimport { LegacyRef } from 'react'\n\nconst Section = ({\n  children,\n  title = '',\n  showChildren,\n  // @ts-ignore\n  noDataText = 'No products found',\n  _ref,\n}: {\n  _ref?: LegacyRef<HTMLDivElement> | undefined\n  showChildren?: boolean\n  children: React.ReactNode\n  title?: string\n  noDataText?: string\n}) => {\n  return (\n    <div ref={_ref} className=\"py-16 \">\n      {title && <h2 className=\"sr-only\">{title}</h2>}\n      {title && <SectionTitle title={title} />}\n\n      {showChildren ? (\n        <div className=\" grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n          {children}\n        </div>\n      ) : (\n        <Card\n          content={\n            <div>\n              <EmptyState\n                title={noDataText}\n                subtitle=\"Cannot find products\"\n                hideBorders\n                iconUrl=\"/empty-cart.png\"\n              />\n            </div>\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","import { Dialog, RadioGroup, Transition } from '@headlessui/react'\nimport { StarIcon, XIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport React, { Fragment, useState } from 'react'\nimport { classNames } from 'utils/classNames'\n\nconst QuickOverview = ({ show, setShow, product }: any) => {\n  const [selectedColor, setSelectedColor] = useState(\n    product\n      ? product.availableColors[0]\n      : { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' }\n  )\n  const [selectedSize, setSelectedSize] = useState(\n    product ? product.availableSizes[1] : { name: 'XXS', inStock: false }\n  )\n\n  return (\n    <Transition.Root show={show} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        onClose={setShow}\n      >\n        <div\n          className=\"pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0\"\n          style={{ fontSize: 0 }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden md:inline-block md:align-middle md:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 md:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 md:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n          >\n            <div className=\"flex text-base  text-left transform transition w-full md:inline-block md:max-w-2xl md:px-4 md:my-8 md:align-middle lg:max-w-4xl\">\n              <div className=\"w-full relative flex items-center bg-white dark:bg-gray-900 px-4 pt-14 pb-8 overflow-hidden shadow-2xl sm:px-6 sm:pt-8 md:p-6 lg:p-8\">\n                <button\n                  type=\"button\"\n                  className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-500 sm:top-8 sm:right-6 md:top-6 md:right-6 lg:top-8 lg:right-8\"\n                  onClick={() => setShow(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <div className=\"w-full grid grid-cols-1 gap-y-8 gap-x-6 items-start sm:grid-cols-12 lg:gap-x-8\">\n                  <div className=\"aspect-w-2 aspect-h-3 rounded-lg bg-gray-100 dark:bg-gray-700 overflow-hidden sm:col-span-4 lg:col-span-5\">\n                    {product?.images?.length > 0 ? (\n                      <img\n                        src={product.images[0].url}\n                        alt={product.images[0].alt}\n                        className=\"object-center object-cover\"\n                      />\n                    ) : (\n                      <div />\n                    )}\n                  </div>\n                  <div className=\"sm:col-span-8 lg:col-span-7\">\n                    <h2 className=\"text-2xl font-extrabold dark:text-white text-gray-900 sm:pr-12\">\n                      {product.productName}\n                    </h2>\n\n                    <section\n                      aria-labelledby=\"information-heading\"\n                      className=\"mt-2\"\n                    >\n                      <h3 id=\"information-heading\" className=\"sr-only\">\n                        Product information\n                      </h3>\n\n                      <p className=\"text-2xl text-gray-900 dark:text-white\">\n                        ${product.price}\n                      </p>\n\n                      {/* Reviews */}\n                      <div className=\"mt-6\">\n                        <h4 className=\"sr-only\">Reviews</h4>\n                        <div className=\"flex items-center\">\n                          <div className=\"flex items-center\">\n                            {[0, 1, 2, 3, 4].map((rating) => (\n                              <StarIcon\n                                key={rating}\n                                className={classNames(\n                                  4 > rating\n                                    ? 'text-yellow-500'\n                                    : 'text-gray-200',\n                                  'h-5 w-5 flex-shrink-0'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ))}\n                          </div>\n                          <p className=\"sr-only\">\n                            {product.rating} out of 5 stars\n                          </p>\n                          <a\n                            href=\"#/\"\n                            className=\"ml-3 text-sm font-medium gradient-text\"\n                          >\n                            {product?.reviews?.length} reviews\n                          </a>\n                        </div>\n                      </div>\n                    </section>\n\n                    <section\n                      aria-labelledby=\"options-heading\"\n                      className=\"mt-10\"\n                    >\n                      <h3 id=\"options-heading\" className=\"sr-only\">\n                        Product options\n                      </h3>\n\n                      <form>\n                        {/* Colors */}\n                        {product?.availableColors &&\n                          product?.availableColors?.length > 0 && (\n                            <div>\n                              <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                Color\n                              </h4>\n\n                              <RadioGroup\n                                value={selectedColor}\n                                onChange={setSelectedColor}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a color\n                                </RadioGroup.Label>\n                                <div className=\"flex items-center space-x-3\">\n                                  {product.availableColors.map((color: any) => (\n                                    <RadioGroup.Option\n                                      key={color.name}\n                                      value={color}\n                                      style={{ background: color.code }}\n                                      className={({ active, checked }) =>\n                                        classNames(\n                                          active && checked\n                                            ? 'ring ring-offset-1'\n                                            : '',\n                                          !active && checked ? 'ring-2' : '',\n                                          '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                                        )\n                                      }\n                                    >\n                                      <RadioGroup.Label\n                                        as=\"p\"\n                                        className=\"sr-only\"\n                                      >\n                                        {color.name}\n                                      </RadioGroup.Label>\n                                      <span\n                                        aria-hidden=\"true\"\n                                        className={classNames(\n                                          color.class,\n                                          'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                                        )}\n                                      />\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        {/* Sizes */}\n                        {product?.availableSizes &&\n                          product?.availableSizes?.length > 0 && (\n                            <div className=\"mt-10\">\n                              <div className=\"flex items-center justify-between\">\n                                <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                  Size\n                                </h4>\n                                <a\n                                  href=\"#/\"\n                                  className=\"text-sm font-medium gradient-text \"\n                                >\n                                  Size guide\n                                </a>\n                              </div>\n\n                              <RadioGroup\n                                value={selectedSize}\n                                onChange={setSelectedSize}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a size\n                                </RadioGroup.Label>\n                                <div className=\"grid grid-cols-4 gap-4\">\n                                  {product.availableSizes.map((size: any) => (\n                                    <RadioGroup.Option\n                                      key={size.name}\n                                      value={size}\n                                      // disabled={!size.inStock}\n                                      className={({ active }) =>\n                                        classNames(\n                                          'bg-gray-50 text-gray-200 cursor-not-allowed',\n                                          active\n                                            ? 'ring-2 ring-indigo-500'\n                                            : '',\n                                          'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1'\n                                        )\n                                      }\n                                    >\n                                      {({ active, checked }) => (\n                                        <>\n                                          <RadioGroup.Label as=\"p\">\n                                            {size.name}\n                                          </RadioGroup.Label>\n                                          <div\n                                            className={classNames(\n                                              active ? 'border' : 'border-2',\n                                              checked\n                                                ? 'border-indigo-500'\n                                                : 'border-transparent',\n                                              'absolute -inset-px rounded-md pointer-events-none'\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                        </>\n                                      )}\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        <Button\n                          size=\"xl\"\n                          className=\"mt-10\"\n                          fullWidth\n                          gradient\n                          label=\"Add to bag\"\n                        />\n                      </form>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default QuickOverview\n","import Dropdown from 'components/Dropdown/Dropdown'\nimport { links } from 'constants/Links'\nimport { IProduct, IShortProfile } from 'interfaces/UniversalInterface'\nimport QuickOverview from 'pages/products/QuickOverview'\nimport { useState } from 'react'\nimport { eclipse } from 'utils/functions'\nimport { useMutation } from 'react-query'\nimport { deleteProduct } from 'apis/mutations'\n\nconst Product = ({\n  product,\n  showWhoPurchased = false,\n  purchasedBy,\n  loadingFriends,\n  userId,\n}: {\n  loadingFriends?: boolean\n  product: IProduct\n  showWhoPurchased?: boolean\n  purchasedBy?: IShortProfile[]\n  userId: string\n}) => {\n  const [quickOverviewModal, setQuickOverviewModal] = useState(false)\n  const itsMyProduct = product.postedBy.toString() === userId\n\n  const _delete = useMutation(deleteProduct, { onSuccess: () => {} })\n\n  const dropdownList = [\n    {\n      id: '1',\n      name: 'Add to bag',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '2',\n      name: 'Add to favorites',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '3',\n      name: 'Quick Overview',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    itsMyProduct && {\n      id: 'ddfd413',\n      name: 'Delete',\n      onClick: () => {\n        _delete.mutate(product._id)\n      },\n    },\n  ].filter(Boolean)\n\n  return (\n    <>\n      <QuickOverview\n        product={product}\n        show={quickOverviewModal}\n        setShow={setQuickOverviewModal}\n      />\n      <div className=\"group\">\n        {showWhoPurchased && !loadingFriends && (\n          <div className=\"mb-2 cursor-pointer \">\n            <div className=\"flex overflow-hidden -space-x-1\">\n              {purchasedBy.map((friend) => (\n                <a\n                  href={links.getProfileById(\n                    friend.profileUrl,\n                    friend?.other?.template,\n                    'private'\n                  )}\n                >\n                  <img\n                    title={friend.fullName}\n                    key={friend._id}\n                    className=\"inline-block h-8 w-8 rounded-full ring-2 ring-white dark:ring-gray-800\"\n                    src={friend.coverPicture}\n                    alt={''}\n                  />\n                </a>\n              ))}\n            </div>\n          </div>\n        )}\n        <a\n          key={product._id}\n          href={`${links.getProductUrl(product._id)}`}\n          className=\"group\"\n        >\n          <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n            {product?.images?.length > 0 ? (\n              <img\n                src={product.images[0].url}\n                alt={product.images[0].alt}\n                className=\"w-full h-full object-center object-cover group-hover:opacity-75 transition-all\"\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        </a>\n        <div className=\"flex mt-4 items-start justify-between\">\n          <div>\n            <h3 className=\" text-sm  text-gray-700 dark:text-gray-400\">\n              {eclipse(product.productName, 60)}\n            </h3>\n            <p className=\"mt-1 text-lg font-medium dark:text-white text-gray-900\">\n              ${product.price}\n            </p>\n          </div>\n          <div>\n            <Dropdown list={dropdownList} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Product\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","const Label = ({\n  text,\n  className,\n  required = false,\n}: {\n  text: string\n  className?: string\n  required?: boolean\n}) => {\n  return (\n    <label\n      className={`block dark:text-white text-sm font-medium text-gray-700 ${className}`}\n    >\n      {text}{' '}\n      {required ? (\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n          *\n        </span>\n      ) : (\n        // to remove white space\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n      )}\n    </label>\n  )\n}\n\nexport default Label\n","import placeholder from 'assets/svg/placeholder.png'\nimport React, { useRef } from 'react'\n\nconst BannerImage = ({ onImageSelect, media, setMedia }: any) => {\n  const bannerRef = useRef()\n\n  const openFileExplorer = () =>\n    //@ts-ignore\n    bannerRef?.current?.click()\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${\n          media ? URL.createObjectURL(media) : placeholder\n        })`,\n      }}\n      className=\"h-96 bg-center flex items-center justify-center bg-no-repeat bg-cover shadow-xl rounded-xl w-full border border-gray-200 dark:border-gray-700\"\n    >\n      <input\n        ref={bannerRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, setMedia)}\n        accept={'image/x-png,image/jpeg'}\n      />\n      <h1\n        onClick={openFileExplorer}\n        className=\"text-3xl font-bold  transition-all cursor-pointer bg-transparent hover:bg-white px-2 py-2 hover:text-gray-700 text-white\"\n      >\n        {media ? 'Change' : '+ Choose'} Banner Image\n      </h1>\n    </div>\n  )\n}\n\nexport default React.memo(BannerImage)\n","import { openStore, uploadMediaToServer } from 'apis/mutations'\nimport { fetchAllProducts } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Label from 'components/atoms/Label'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Section from 'components/atoms/products/Section'\nimport Title from 'components/atoms/Title'\nimport Spinner from 'components/Spinner'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IParent, IProduct, IStore } from 'interfaces/UniversalInterface'\nimport { isEmpty } from 'lodash'\nimport Product from 'pages/products/Product'\nimport BannerImage from 'pages/store/BannerImage'\nimport { useEffect, useRef, useState } from 'react'\nimport { useMutation, useQuery } from 'react-query'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst ListProducts = ({ userId, onLoad }: { userId: string; onLoad: any }) => {\n  const { isLoading, data, isFetched, isSuccess } = useQuery(\n    'list-all-my-products',\n    () => fetchAllProducts(userId)\n  )\n  const products: IProduct[] = isFetched && !isLoading ? data.data.data : []\n\n  const { setNotification } = useNotifications()\n\n  if (!products && products?.length === 0) {\n    setNotification({\n      show: true,\n      // eslint-disable-next-line quotes\n      title: \"You don't have enough products for store.\",\n      buttonText: 'Add now',\n      buttonUrl: links.addProduct(),\n    })\n    return <Redirect to={links.FEED} />\n  }\n\n  if (isSuccess && products && products?.length > 0) {\n    if (onLoad) {\n      onLoad(products)\n    }\n  }\n\n  return (\n    <Section showChildren>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        products &&\n        products?.length > 0 &&\n        products?.map((product) => (\n          <Product userId={userId} key={product._id} product={product} />\n        ))\n      )}\n    </Section>\n  )\n}\n\nconst OpenStore = ({ userData }: { userData: IParent }) => {\n  const isStoreOpened = !isEmpty(userData?.store)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a, b) => {\n      // @ts-ignore\n      const values = formRef?.current?.values\n      if (formRef?.current && values) {\n        const finalInput = {\n          bannerImage: a.data.data.location,\n          products: selectedProducts,\n          ...values,\n        }\n\n        mutate({ storeData: finalInput })\n      }\n    },\n  })\n\n  const [selectedProducts, setSelectedProducts] = useState<IProduct[]>([])\n\n  const {\n    isLoading: creatingStore,\n\n    mutate,\n    isSuccess,\n  } = useMutation(openStore, {\n    onSuccess: () => {\n      setNotification({\n        show: true,\n        title: `Congratulations ${userData.firstName}. You have successfully opened a shop on Tradingpost13RMS. Good luck selling your stuff.`,\n        buttonText: 'View store',\n        buttonUrl: links.viewStore(userData.profileUrl),\n      })\n    },\n  })\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isSuccess || !isEmpty(userData?.store)) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1,\n          'private'\n        )\n      )\n    }\n  }, [isSuccess])\n\n  const onSubmit = (e: any) => {\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const onImageSelect = (e: any, setFieldValue: any) => {\n    const img = e.target.files[0]\n\n    setFieldValue(img)\n  }\n\n  const validationSchema = Yup.object({\n    buttonLabel: Yup.string()\n      .required('Button label is required')\n      .min(3)\n      .max(150),\n    buttonLink: Yup.string()\n      // .test(regex)\n      .required('Button link is required')\n      .min(5)\n      .max(150),\n  })\n\n  // @ts-ignore\n  const initialValues: IStore = {\n    buttonLabel: '',\n    buttonLink: '',\n  }\n  const formRef = useRef()\n\n  const [media, setMedia] = useState()\n  const { setNotification } = useNotifications()\n\n  if (isStoreOpened) {\n    setNotification({\n      show: true,\n      title: 'Store is already created.',\n    })\n    return <Redirect to={links.FEED} />\n  }\n\n  return (\n    <NarrowLayout customMaxWidth=\"max-w-7xl\" userData={userData}>\n      <Meta pageTitle={`Open Store | 13RMS`} />\n      <Title fontWeight=\"font-bold mb-8\">Open store</Title>\n\n      <Formik\n        initialValues={initialValues}\n        innerRef={formRef}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"my-4 flex flex-col gap-y-12\">\n          <div className=\"grid grid-cols-1 gap-y-12\">\n            <div>\n              <Label text=\"Banner Image\" />\n              <BannerImage\n                media={media}\n                setMedia={setMedia}\n                onImageSelect={onImageSelect}\n              />\n            </div>\n            <div>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-12\">\n                <div>\n                  <Label text=\"Button label\" />\n                  <FormInput\n                    info=\"The name of button\"\n                    name=\"buttonLabel\"\n                    placeholder=\"Discover\"\n                  />\n                </div>\n                <div>\n                  <Label text=\"Button link\" />\n                  <FormInput\n                    name=\"buttonLink\"\n                    info=\"Link of button\"\n                    placeholder=\"www.myshoppingsite.com\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <Label text=\"Select product\" />\n              <ListProducts\n                onLoad={(products: IProduct[]) => setSelectedProducts(products)}\n                userId={userData._id}\n              />\n              <div>\n                <div className=\"flex items-center justify-end\">\n                  <Button\n                    // onClick={onSubmit}\n                    type=\"submit\"\n                    rounded=\"rounded-lg\"\n                    loading={creatingStore || upload.isLoading}\n                    gradient\n                    size=\"lg\"\n                    label=\"Create store\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default OpenStore\n"],"sourceRoot":""}
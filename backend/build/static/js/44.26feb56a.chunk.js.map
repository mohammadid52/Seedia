{"version":3,"sources":["utils/functions/index.js","hooks/useUser.ts","components/Dropdown/Dropdown.tsx","components/atoms/SectionTitle.tsx","components/atoms/products/Section.tsx","pages/products/QuickOverview.tsx","pages/products/Product.tsx","pages/products/ProfileCard/ProfileCard.tsx","pages/products/ProductLayout.tsx","pages/products/FriendsPurchases/FriendsPurchases.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Dropdown","list","as","className","Button","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","item","Item","active","style","zIndex","onClick","stopPropagation","classNames","Icon","name","SectionTitle","title","gradient","Section","children","showChildren","noDataText","_ref","ref","content","subtitle","hideBorders","iconUrl","QuickOverview","show","setShow","product","useState","availableColors","class","selectedClass","selectedColor","setSelectedColor","availableSizes","inStock","selectedSize","setSelectedSize","Root","onClose","fontSize","Child","Overlay","type","images","src","url","alt","productName","id","price","rating","href","reviews","onChange","Label","color","Option","background","code","checked","size","fullWidth","label","Product","showWhoPurchased","purchasedBy","loadingFriends","userId","quickOverviewModal","setQuickOverviewModal","itsMyProduct","postedBy","toString","_delete","useMutation","deleteProduct","onSuccess","dropdownList","mutate","Boolean","friend","links","getProfileById","other","template","fullName","coverPicture","getProductUrl","ProfileCard","targetId","sectionTitle","useFollow","following","addFollow","removeFollow","profilePicture","avatarPlaceholder","summary","followers","purchases","ProductLayout","DashboardHeader","FriendsPurchases","fetchFriendsPurchase","error","isError","config","users","fetchShortUsers","data2","isLoading2","isFetched2","products","friends","Loading","resetErrorBoundary","message","Meta","keywords","pageUrl","window","location","pageTitle"],"mappings":"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","file":"static/js/44.26feb56a.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","const SectionTitle = ({\n  title,\n  gradient = true,\n  className,\n}: {\n  title: string\n  gradient?: boolean\n  className?: string\n}) => {\n  return (\n    <h2\n      className={`${className} text-2xl mb-6 font-extrabold ${\n        gradient ? 'gradient-border' : ''\n      } border-b pb-2 tracking-tight\n         dark:text-white text-gray-900`}\n    >\n      {title}\n    </h2>\n  )\n}\n\nexport default SectionTitle\n","import Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport SectionTitle from 'components/atoms/SectionTitle'\nimport { LegacyRef } from 'react'\n\nconst Section = ({\n  children,\n  title = '',\n  showChildren,\n  // @ts-ignore\n  noDataText = 'No products found',\n  _ref,\n}: {\n  _ref?: LegacyRef<HTMLDivElement> | undefined\n  showChildren?: boolean\n  children: React.ReactNode\n  title?: string\n  noDataText?: string\n}) => {\n  return (\n    <div ref={_ref} className=\"py-16 \">\n      {title && <h2 className=\"sr-only\">{title}</h2>}\n      {title && <SectionTitle title={title} />}\n\n      {showChildren ? (\n        <div className=\" grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n          {children}\n        </div>\n      ) : (\n        <Card\n          content={\n            <div>\n              <EmptyState\n                title={noDataText}\n                subtitle=\"Cannot find products\"\n                hideBorders\n                iconUrl=\"/empty-cart.png\"\n              />\n            </div>\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","import { Dialog, RadioGroup, Transition } from '@headlessui/react'\nimport { StarIcon, XIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport React, { Fragment, useState } from 'react'\nimport { classNames } from 'utils/classNames'\n\nconst QuickOverview = ({ show, setShow, product }: any) => {\n  const [selectedColor, setSelectedColor] = useState(\n    product\n      ? product.availableColors[0]\n      : { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' }\n  )\n  const [selectedSize, setSelectedSize] = useState(\n    product ? product.availableSizes[1] : { name: 'XXS', inStock: false }\n  )\n\n  return (\n    <Transition.Root show={show} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        onClose={setShow}\n      >\n        <div\n          className=\"pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0\"\n          style={{ fontSize: 0 }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden md:inline-block md:align-middle md:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 md:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 md:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n          >\n            <div className=\"flex text-base  text-left transform transition w-full md:inline-block md:max-w-2xl md:px-4 md:my-8 md:align-middle lg:max-w-4xl\">\n              <div className=\"w-full relative flex items-center bg-white dark:bg-gray-900 px-4 pt-14 pb-8 overflow-hidden shadow-2xl sm:px-6 sm:pt-8 md:p-6 lg:p-8\">\n                <button\n                  type=\"button\"\n                  className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-500 sm:top-8 sm:right-6 md:top-6 md:right-6 lg:top-8 lg:right-8\"\n                  onClick={() => setShow(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <div className=\"w-full grid grid-cols-1 gap-y-8 gap-x-6 items-start sm:grid-cols-12 lg:gap-x-8\">\n                  <div className=\"aspect-w-2 aspect-h-3 rounded-lg bg-gray-100 dark:bg-gray-700 overflow-hidden sm:col-span-4 lg:col-span-5\">\n                    {product?.images?.length > 0 ? (\n                      <img\n                        src={product.images[0].url}\n                        alt={product.images[0].alt}\n                        className=\"object-center object-cover\"\n                      />\n                    ) : (\n                      <div />\n                    )}\n                  </div>\n                  <div className=\"sm:col-span-8 lg:col-span-7\">\n                    <h2 className=\"text-2xl font-extrabold dark:text-white text-gray-900 sm:pr-12\">\n                      {product.productName}\n                    </h2>\n\n                    <section\n                      aria-labelledby=\"information-heading\"\n                      className=\"mt-2\"\n                    >\n                      <h3 id=\"information-heading\" className=\"sr-only\">\n                        Product information\n                      </h3>\n\n                      <p className=\"text-2xl text-gray-900 dark:text-white\">\n                        ${product.price}\n                      </p>\n\n                      {/* Reviews */}\n                      <div className=\"mt-6\">\n                        <h4 className=\"sr-only\">Reviews</h4>\n                        <div className=\"flex items-center\">\n                          <div className=\"flex items-center\">\n                            {[0, 1, 2, 3, 4].map((rating) => (\n                              <StarIcon\n                                key={rating}\n                                className={classNames(\n                                  4 > rating\n                                    ? 'text-yellow-500'\n                                    : 'text-gray-200',\n                                  'h-5 w-5 flex-shrink-0'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ))}\n                          </div>\n                          <p className=\"sr-only\">\n                            {product.rating} out of 5 stars\n                          </p>\n                          <a\n                            href=\"#/\"\n                            className=\"ml-3 text-sm font-medium gradient-text\"\n                          >\n                            {product?.reviews?.length} reviews\n                          </a>\n                        </div>\n                      </div>\n                    </section>\n\n                    <section\n                      aria-labelledby=\"options-heading\"\n                      className=\"mt-10\"\n                    >\n                      <h3 id=\"options-heading\" className=\"sr-only\">\n                        Product options\n                      </h3>\n\n                      <form>\n                        {/* Colors */}\n                        {product?.availableColors &&\n                          product?.availableColors?.length > 0 && (\n                            <div>\n                              <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                Color\n                              </h4>\n\n                              <RadioGroup\n                                value={selectedColor}\n                                onChange={setSelectedColor}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a color\n                                </RadioGroup.Label>\n                                <div className=\"flex items-center space-x-3\">\n                                  {product.availableColors.map((color: any) => (\n                                    <RadioGroup.Option\n                                      key={color.name}\n                                      value={color}\n                                      style={{ background: color.code }}\n                                      className={({ active, checked }) =>\n                                        classNames(\n                                          active && checked\n                                            ? 'ring ring-offset-1'\n                                            : '',\n                                          !active && checked ? 'ring-2' : '',\n                                          '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                                        )\n                                      }\n                                    >\n                                      <RadioGroup.Label\n                                        as=\"p\"\n                                        className=\"sr-only\"\n                                      >\n                                        {color.name}\n                                      </RadioGroup.Label>\n                                      <span\n                                        aria-hidden=\"true\"\n                                        className={classNames(\n                                          color.class,\n                                          'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                                        )}\n                                      />\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        {/* Sizes */}\n                        {product?.availableSizes &&\n                          product?.availableSizes?.length > 0 && (\n                            <div className=\"mt-10\">\n                              <div className=\"flex items-center justify-between\">\n                                <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                  Size\n                                </h4>\n                                <a\n                                  href=\"#/\"\n                                  className=\"text-sm font-medium gradient-text \"\n                                >\n                                  Size guide\n                                </a>\n                              </div>\n\n                              <RadioGroup\n                                value={selectedSize}\n                                onChange={setSelectedSize}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a size\n                                </RadioGroup.Label>\n                                <div className=\"grid grid-cols-4 gap-4\">\n                                  {product.availableSizes.map((size: any) => (\n                                    <RadioGroup.Option\n                                      key={size.name}\n                                      value={size}\n                                      // disabled={!size.inStock}\n                                      className={({ active }) =>\n                                        classNames(\n                                          'bg-gray-50 text-gray-200 cursor-not-allowed',\n                                          active\n                                            ? 'ring-2 ring-indigo-500'\n                                            : '',\n                                          'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1'\n                                        )\n                                      }\n                                    >\n                                      {({ active, checked }) => (\n                                        <>\n                                          <RadioGroup.Label as=\"p\">\n                                            {size.name}\n                                          </RadioGroup.Label>\n                                          <div\n                                            className={classNames(\n                                              active ? 'border' : 'border-2',\n                                              checked\n                                                ? 'border-indigo-500'\n                                                : 'border-transparent',\n                                              'absolute -inset-px rounded-md pointer-events-none'\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                        </>\n                                      )}\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        <Button\n                          size=\"xl\"\n                          className=\"mt-10\"\n                          fullWidth\n                          gradient\n                          label=\"Add to bag\"\n                        />\n                      </form>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default QuickOverview\n","import Dropdown from 'components/Dropdown/Dropdown'\nimport { links } from 'constants/Links'\nimport { IProduct, IShortProfile } from 'interfaces/UniversalInterface'\nimport QuickOverview from 'pages/products/QuickOverview'\nimport { useState } from 'react'\nimport { eclipse } from 'utils/functions'\nimport { useMutation } from 'react-query'\nimport { deleteProduct } from 'apis/mutations'\n\nconst Product = ({\n  product,\n  showWhoPurchased = false,\n  purchasedBy,\n  loadingFriends,\n  userId,\n}: {\n  loadingFriends?: boolean\n  product: IProduct\n  showWhoPurchased?: boolean\n  purchasedBy?: IShortProfile[]\n  userId: string\n}) => {\n  const [quickOverviewModal, setQuickOverviewModal] = useState(false)\n  const itsMyProduct = product.postedBy.toString() === userId\n\n  const _delete = useMutation(deleteProduct, { onSuccess: () => {} })\n\n  const dropdownList = [\n    {\n      id: '1',\n      name: 'Add to bag',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '2',\n      name: 'Add to favorites',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '3',\n      name: 'Quick Overview',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    itsMyProduct && {\n      id: 'ddfd413',\n      name: 'Delete',\n      onClick: () => {\n        _delete.mutate(product._id)\n      },\n    },\n  ].filter(Boolean)\n\n  return (\n    <>\n      <QuickOverview\n        product={product}\n        show={quickOverviewModal}\n        setShow={setQuickOverviewModal}\n      />\n      <div className=\"group\">\n        {showWhoPurchased && !loadingFriends && (\n          <div className=\"mb-2 cursor-pointer \">\n            <div className=\"flex overflow-hidden -space-x-1\">\n              {purchasedBy.map((friend) => (\n                <a\n                  href={links.getProfileById(\n                    friend.profileUrl,\n                    friend?.other?.template,\n                    'private'\n                  )}\n                >\n                  <img\n                    title={friend.fullName}\n                    key={friend._id}\n                    className=\"inline-block h-8 w-8 rounded-full ring-2 ring-white dark:ring-gray-800\"\n                    src={friend.coverPicture}\n                    alt={''}\n                  />\n                </a>\n              ))}\n            </div>\n          </div>\n        )}\n        <a\n          key={product._id}\n          href={`${links.getProductUrl(product._id)}`}\n          className=\"group\"\n        >\n          <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n            {product?.images?.length > 0 ? (\n              <img\n                src={product.images[0].url}\n                alt={product.images[0].alt}\n                className=\"w-full h-full object-center object-cover group-hover:opacity-75 transition-all\"\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        </a>\n        <div className=\"flex mt-4 items-start justify-between\">\n          <div>\n            <h3 className=\" text-sm  text-gray-700 dark:text-gray-400\">\n              {eclipse(product.productName, 60)}\n            </h3>\n            <p className=\"mt-1 text-lg font-medium dark:text-white text-gray-900\">\n              ${product.price}\n            </p>\n          </div>\n          <div>\n            <Dropdown list={dropdownList} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Product\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport SectionTitle from 'components/atoms/SectionTitle'\nimport useFollow from 'hooks/useFollow'\nimport useUser from 'hooks/useUser'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst ProfileCard = ({\n  userData,\n\n  targetId,\n  sectionTitle = '',\n}: {\n  userData: IParent\n  iAmOwnerOfThisProfile?: boolean\n  targetId?: string\n  sectionTitle?: string\n}) => {\n  const { iAmOwnerOfThisProfile } = useUser(userData.profileUrl, userData)\n  const { following, addFollow, removeFollow } = useFollow(\n    userData?.following,\n    targetId\n  )\n\n  return (\n    <div className=\" \">\n      {sectionTitle && <SectionTitle title={sectionTitle} />}\n      <Card\n        className=\"p-6\"\n        content={\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-12\">\n              <div className=\"\">\n                <span className=\"sr-only\">13RMS</span>\n                <img\n                  className=\"border-gradient border-transparent border-4 h-36 w-36 sm:h-40 sm:w-40 cursor-pointer rounded-full shadow-xl\"\n                  src={\n                    userData?.profilePicture\n                      ? userData?.profilePicture\n                      : avatarPlaceholder\n                  }\n                  alt=\"\"\n                />\n              </div>\n              <div className=\"space-y-4\">\n                <h1 className=\"text-2xl leading-6 font-semibold dark:text-white text-gray-900\">\n                  {userData?.fullName}\n                </h1>\n                <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                  {userData?.background?.summary ||\n                    'In  placeholder text commonly used to demonstrate the visual form of a document'}\n                </h5>\n                {!iAmOwnerOfThisProfile && (\n                  <Button\n                    onClick={() =>\n                      !following\n                        ? addFollow.mutate(targetId)\n                        : removeFollow.mutate(targetId)\n                    }\n                    label=\"Follow\"\n                    gradient\n                    size=\"lg\"\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"border-l h-full border-gray-200 dark:border-gray-600\">\n              <div className=\"flex py-4 flex-col pl-16 items-center justify-around space-y-6\">\n                <div className=\"flex w-56 flex-col border-b border-gray-200 dark:border-gray-600 pb-4\">\n                  <span className=\"text-base font-semibold text-gray-900 dark:text-white\">\n                    {userData?.followers?.length || 0}\n                  </span>\n                  <span className=\"text-base font-medium text-gray-500 dark:text-gray-500\">\n                    Followers\n                  </span>\n                </div>\n                <div className=\"flex flex-col  w-56  border-b border-gray-200 dark:border-gray-600 pb-4\">\n                  <span className=\"text-base font-semibold text-gray-900 dark:text-white\">\n                    {userData?.purchases?.length || 0}\n                  </span>\n                  <span className=\"text-base font-medium text-gray-500 dark:text-gray-500\">\n                    Purchases\n                  </span>\n                </div>\n                <div className=\"flex flex-col w-56  border-b border-gray-200 dark:border-gray-600 pb-4\">\n                  <span className=\"text-base font-semibold text-gray-900 dark:text-white\">\n                    {userData?.reviews?.length || 0}\n                  </span>\n                  <span className=\"text-base font-medium text-gray-500 dark:text-gray-500\">\n                    Reviews\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n      />\n    </div>\n  )\n}\n\nexport default ProfileCard\n","import { IParent } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\n\nconst ProductLayout = ({\n  children,\n  userData,\n}: {\n  children: React.ReactNode\n  userData?: IParent\n}) => {\n  return (\n    <div className=\"dark:bg-gray-900 bg-gray-100\">\n      {userData && <DashboardHeader userData={userData} />}\n\n      <div className=\"max-w-2xl min-h-screen mx-auto px-4 sm:px-6 lg:max-w-7xl lg:px-8 overflow-hidden bg-gray-100 smooth-scroll dark:bg-gray-900 py-12\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default ProductLayout\n","import { fetchFriendsPurchase, fetchShortUsers } from 'apis/queries'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Section from 'components/atoms/products/Section'\nimport Loading from 'components/Loading'\nimport useUser from 'hooks/useUser'\nimport { ErrorFallback } from 'index'\nimport { IParent, IProduct, IShortProfile } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport Product from 'pages/products/Product'\nimport ProductLayout from 'pages/products/ProductLayout'\nimport ProfileCard from 'pages/products/ProfileCard/ProfileCard'\nimport { useQuery } from 'react-query'\n\nconst FriendsPurchases = ({ userData }: { userData: IParent }) => {\n  const { otherUserData, iAmOwnerOfThisProfile } = useUser(\n    userData?.profileUrl,\n    userData\n  )\n\n  const { isLoading, error, data, isFetched, isError, refetch } = useQuery(\n    'friends-purchases',\n    () => fetchFriendsPurchase()\n  )\n\n  const config = {\n    users: userData.following,\n  }\n  const {\n    data: data2,\n    isLoading: isLoading2,\n    isFetched: isFetched2,\n  } = useQuery('friends-profiles', () => fetchShortUsers(config))\n\n  const products: IProduct[] = isFetched && !isLoading && data.data.data\n  const friends: IShortProfile[] = isFetched2 && !isLoading2 && data2.data.data\n\n  if (isLoading) {\n    return <Loading />\n  }\n  if (isError) {\n    return (\n      <ErrorFallback resetErrorBoundary={refetch} error={{ message: error }} />\n    )\n  }\n\n  const getFriendsList = (purchasedBy: IProduct['purchasedBy']) =>\n    friends.length > 0\n      ? friends.filter((friend) => purchasedBy.includes(friend._id.toString()))\n      : []\n\n  return (\n    <ProductLayout userData={userData}>\n      <Meta\n        keywords=\"friends purchases,products, 13rms\"\n        pageUrl={window.location.href}\n        pageTitle={`Friends Purchases | ${userData.fullName} | 13RMS`}\n      />\n      <DashboardHeader userData={userData} />\n\n      <ProfileCard\n        userData={userData}\n        targetId={otherUserData?._id}\n        iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n      />\n\n      <Section\n        showChildren={products && products.length > 0}\n        title={\n          // eslint-disable-next-line quotes\n          \"Your Friend's Purchases\"\n        }\n      >\n        {products &&\n          products.length > 0 &&\n          products.map((product) => (\n            <Product\n              userId={userData._id}\n              loadingFriends={isLoading2 && !isFetched2}\n              purchasedBy={getFriendsList(product.purchasedBy)}\n              showWhoPurchased\n              product={product}\n            />\n          ))}\n      </Section>\n    </ProductLayout>\n  )\n}\n\nexport default FriendsPurchases\n"],"sourceRoot":""}
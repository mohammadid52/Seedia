{"version":3,"sources":["components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","components/atoms/Toggle.tsx","pages/account/student/EducationStep.jsx"],"names":["AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","name","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","onClick","color","Toggle","enabled","setEnabled","subText","Group","as","Label","passive","Description","checked","onChange","classNames","EducationStep","user","history","useHistory","useState","saving","setSaving","useEffect","other","accountFilled","console","log","push","links","FEED","accountType","accountFinishedStep","CHOOSE_TEMPLATE","LOCATION_S","renderPathByType","CHOOSE_ACCOUNT","redirection","setValues","useUserContext","onSubmit","values","a","token","getAccessToken","updatedData","background","id","nanoid","from","fields","start_year","to","end_year","network","post","headers","Authorization","STUDENT_STEP_2","error","validationSchema","Yup","required","above_sixteen","setFields","BUSINESS_STEP_1","initialValues","enableReinitialize","FormInput","label","Selector","list","yearList","selectedItem","placeholder","onSelect","yearListWithFuture","Button","fullWidth","rounded","gradient","type","loading"],"mappings":"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","file":"static/js/40.1cfb0f59.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","import { Switch } from '@headlessui/react'\nimport { classNames } from 'utils/classNames'\n\nconst Toggle = ({\n  enabled,\n  setEnabled,\n  text,\n  subText,\n  className,\n}: {\n  enabled: boolean\n  setEnabled: React.Dispatch<React.SetStateAction<boolean>>\n  text: string\n  subText?: string\n  className?: string\n}) => {\n  return (\n    <Switch.Group\n      as=\"div\"\n      className={`flex items-center justify-between ${className}`}\n    >\n      <span className=\"flex-grow flex flex-col items-start\">\n        <Switch.Label\n          as=\"span\"\n          className=\"text-sm font-medium text-white\"\n          passive\n        >\n          {text}\n        </Switch.Label>\n        <Switch.Description as=\"span\" className=\"text-sm text-gray-500\">\n          {subText}\n        </Switch.Description>\n      </span>\n      <Switch\n        checked={enabled}\n        onChange={setEnabled}\n        className={classNames(\n          enabled\n            ? 'bg-gradient-to-r from-pink-500 to-yellow-500'\n            : 'bg-gray-900',\n          'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? 'translate-x-5' : 'translate-x-0',\n            'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200'\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  )\n}\nexport default Toggle\n","/* eslint-disable quotes */\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Toggle from 'components/atoms/Toggle'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useUserContext } from 'context/UserContext'\nimport { Form, Formik } from 'formik'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport { StudentStepOne } from 'initials'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { yearList, yearListWithFuture } from 'values/values'\nimport * as Yup from 'yup'\n\nconst EducationStep = ({ user }) => {\n  const history = useHistory()\n\n  const [saving, setSaving] = useState(false)\n\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountType === 'education') {\n          if (user.other?.accountFinishedStep === 'location') {\n            // redirect to choose template page\n            console.log('redirect to choose template page')\n            return history.push(links.CHOOSE_TEMPLATE)\n          } else if (user.other?.accountFinishedStep === 'education') {\n            // redirect to location page\n            console.log('redirect to location page')\n            return history.push(links.LOCATION_S)\n          } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n            console.log('get the accountType and redirect as per account type')\n            // get the accountType and redirect as per account type\n            return history.push(renderPathByType(user.other?.accountType))\n          } else if (user.other?.accountFinishedStep === 'signup') {\n            // redirect to choose Account page\n            console.log('redirect to choose Account page')\n            return history.push(links.CHOOSE_ACCOUNT)\n          }\n        } else {\n          if (user && user.other) {\n            console.log('get the accountType and redirect as per account type')\n            // get the accountType and redirect as per account type\n            return history.push(renderPathByType(user.other.accountType))\n          }\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [user?.other?.accountFilled, user?.other?.accountFinishedStep])\n\n  const { setValues } = useUserContext()\n\n  const onSubmit = async (values) => {\n    try {\n      const token = getAccessToken()\n\n      setSaving(true)\n      const updatedData = {\n        ...user,\n        background: {\n          ...user.background,\n          education: [\n            {\n              id: nanoid(9),\n              name: values.education,\n              grade: values.grade,\n              grade_subject: values.grade_subject,\n              from: fields.start_year,\n              to: fields.end_year,\n            },\n          ],\n        },\n        other: {\n          ...user.other,\n          accountFinishedStep: 'education',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.STUDENT_STEP_2)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const validationSchema = Yup.object({\n    education: Yup.string().required('Please add education'),\n    grade: Yup.string().required('Please add grade'),\n    grade_subject: Yup.string().required('Please add grade subject'),\n  })\n\n  const [fields, setFields] = useState({\n    start_year: '',\n    end_year: '',\n    above_sixteen: false,\n  })\n\n  return (\n    <Layout\n      title=\"Education Information\"\n      withButton={\n        <TextButton\n          text=\"or create a business account\"\n          onClick={() => history.push(links.BUSINESS_STEP_1)}\n        />\n      }\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-900 border border-white dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={StudentStepOne}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            enableReinitialize\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Education\"\n                id=\"education\"\n                name=\"education\"\n                required\n              />\n\n              <FormInput\n                label=\"Grade / title\"\n                id=\"grade\"\n                name=\"grade\"\n                required\n              />\n              <FormInput\n                label=\"Graduation subject\"\n                id=\"grade_subject\"\n                name=\"grade_subject\"\n                required\n              />\n              <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2\">\n                <div className=\"\">\n                  <Selector\n                    label={'Start year'}\n                    list={yearList}\n                    selectedItem={fields.start_year}\n                    placeholder={'-'}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        start_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n\n                <div className=\"\">\n                  <Selector\n                    label={'End year (or expected)'}\n                    placeholder={'-'}\n                    list={yearListWithFuture}\n                    selectedItem={fields.end_year}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        end_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div>\n                <Toggle\n                  className=\"mt-2\"\n                  enabled={fields.above_sixteen}\n                  text={\"I'm over 16 years old\"}\n                  setEnabled={() =>\n                    setFields({\n                      ...fields,\n                      above_sixteen: !fields.above_sixteen,\n                    })\n                  }\n                />\n              </div>\n              <div>\n                <TextButton\n                  color=\"gray\"\n                  onClick={() => history.push(links.CHOOSE_ACCOUNT)}\n                  text={\"I'm not a student\"}\n                  className=\"text-center py-2\"\n                />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  type=\"submit\"\n                  loading={saving}\n                  label=\"Next Step\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default EducationStep\n"],"sourceRoot":""}
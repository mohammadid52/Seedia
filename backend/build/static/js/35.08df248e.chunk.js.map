{"version":3,"sources":["utils/functions/index.js","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/NormalFormInput.tsx","components/alerts/Error.tsx","components/atoms/Title.tsx","components/atoms/FormSelector.tsx","components/atoms/FormMultipleSelector.tsx","components/List.tsx","components/atoms/FormTagsInput.tsx","pages/products/UploadImages.tsx","pages/products/AddProduct.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","onClick","NormalFormInput","fullWidth","autoComplete","success","props","onKeyDown","onKeyPress","onKeyUp","Error","errors","idx","Title","children","size","fontWeight","textColor","isLoading","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","open","Label","Button","onBlur","as","Fragment","Options","static","item","Option","hasOwnProperty","active","classNames","selected","FormMultipleSelector","sortBy","defaultItem","disableFieldOption","disable","setDisable","values","setValues","find","remove","push","prev","checked","orderBy","code","style","backgroundColor","defaultValue","List","min","max","initialValues","features","setFeatures","useEffect","$setError","featureField","setFeatureField","feature","featureId","f","nanoid","invert","gradient","FormTagsInput","tags","setTags","tagField","setTagField","toLowerCase","bgColor","tagId","UploadImages","setImagesUploaded","productImageRef","useRef","imageList","setImageList","useMutation","uploadMultipleImages","mutate","isError","data","isSuccess","toString","finalImageList","img","url","location","isCover","alt","image","speed","plugins","lgZoom","src","URL","createObjectURL","ref","multiple","console","log","imgs","Object","files","forEach","accept","current","click","Icon","AiOutlineCamera","fd","FormData","append","setTimeout","loading","loadingText","AiOutlineUpload","AddProduct","profileUrl","number","userData","minMsg","validationSchema","Yup","productName","productDescription","details","price","matches","addProduct","imagesUploaded","history","useHistory","links","getProfileById","other","template","onSubmit","a","NarrowLayout","Meta","pageTitle","images","availableColors","availableSizes","estimatedDelivery","highlights","colorsList","sizeList","times","rounded"],"mappings":"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","file":"static/js/35.08df248e.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\n\nconst Title = ({\n  className,\n  children,\n  size = 'text-3xl',\n  fontWeight = 'font-semibld',\n  textColor = 'text-gray-900 dark:text-white',\n  isLoading = false,\n}: {\n  className?: string\n  size?: string\n  isLoading?: boolean\n  textColor?: string\n  fontWeight?: string\n  children: React.ReactNode\n}) => {\n  if (isLoading) {\n    return (\n      <div\n        className={`h-4 animate-pulse bg-gray-400 rounded ${className} ${size} ${fontWeight} ${textColor}`}\n      ></div>\n    )\n  }\n  return (\n    <h1 className={`${className} ${size} ${fontWeight} ${textColor}`}>\n      {children}\n    </h1>\n  )\n}\n\nexport default Title\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field.value.length > 0\n                  ? field.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Listbox, Transition } from '@headlessui/react'\nimport { SelectorIcon } from '@heroicons/react/solid'\nimport { useField } from 'formik'\nimport { orderBy, remove } from 'lodash'\nimport find from 'lodash/find'\nimport map from 'lodash/map'\nimport { Fragment, useState } from 'react'\nimport { AiOutlineCheck } from 'react-icons/ai'\nimport { classNames } from 'utils/classNames'\n\ninterface Item {\n  name: string\n  id?: string | number\n  code?: string\n}\n\ninterface SelecterProps {\n  list: Item[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  onSelect?: (event: any) => void\n  border?: boolean\n  className?: string\n  name: string\n  sortBy?: string\n  disableFieldOption?: boolean\n  defaultItem?: string\n}\n\nconst FormMultipleSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  className = '',\n  onSelect = () => {},\n  border = true,\n  name,\n  sortBy = 'name',\n  defaultItem,\n  disableFieldOption = false,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n  const { setTouched, setError, setValue } = helpers\n  const [disable, setDisable] = useState(disableFieldOption)\n\n  const [values, setValues] = useState<any[]>([])\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    if (!find(values, ['name', selectedOption.name])) {\n      values.push(selectedOption)\n    } else {\n      remove(values, ['name', selectedOption.name])\n    }\n    setValues((prev) => [...prev])\n    setValue(values)\n    setTouched(true)\n    setError(undefined)\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          <div className={'flex items-center space-x-3'}>\n            {label && (\n              <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n                {label}{' '}\n                {required && (\n                  <span className=\"text-red-500 font-medium text-base\">*</span>\n                )}\n              </Listbox.Label>\n            )}\n            {disableFieldOption && (\n              <div className=\"flex items-center h-5\">\n                <input\n                  onChange={(e) => setDisable(!e.target.checked)}\n                  aria-describedby=\"disable-field\"\n                  type=\"checkbox\"\n                  className=\"focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 h-4 w-4 text-yellow-500 border-gray-300 rounded\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div\n            className={classNames(\n              'mt-1 relative',\n              disable ? 'opacity-50 pointer-events-none' : 'opacity-100'\n            )}\n          >\n            <Listbox.Button\n              id=\"multiple-selector\"\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white  dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`flex space-x-4 truncate ${\n                  values.length === 0\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {values.length > 0\n                  ? map(orderBy(values, [sortBy, 'asc']), (d, idx) => (\n                      <div key={idx} className=\"flex items-center\">\n                        {d.code && (\n                          <div\n                            className={`rounded-full border border-gray-600 h-4 w-4`}\n                            style={{ backgroundColor: d.code }}\n                          />\n                        )}\n                        <span>{d.name}</span>\n                        {idx !== values.length - 1 && ','}\n                      </div>\n                    ))\n                  : placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                defaultValue={defaultItem ? defaultItem : null}\n                static\n                className=\"pl-0 z-10 absolute scroll-dark-md  mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5  overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-pointer select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'truncate flex items-center justify-between w-full relative dark:text-white text-left'\n                          )}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            {item.code && (\n                              <div\n                                className={`rounded-full  h-3 w-3`}\n                                style={{ backgroundColor: item.code }}\n                              />\n                            )}\n                            <span>{item.name}</span>\n                          </div>\n                          {find(values, ['name', item.name]) && (\n                            <AiOutlineCheck className=\"font-bold text-lg\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n  )\n}\nexport default FormMultipleSelector\n","import Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { useField } from 'formik'\nimport { map } from 'lodash'\nimport remove from 'lodash/remove'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useState } from 'react'\nimport { BiTrashAlt } from 'react-icons/bi'\nconst List = ({\n  name,\n  label,\n  placeholder,\n  min = 10,\n  max = 150,\n  initialValues,\n}: {\n  placeholder?: string\n  name: string\n  label?: string\n  min?: number\n  initialValues?: { name: string; id: string }[]\n  max?: number\n}) => {\n  const [field, meta, helpers] = useField(name)\n\n  const [features, setFeatures] = useState<{ name: string; id: string }[]>([])\n\n  useEffect(() => {\n    if (initialValues) {\n      setFeatures([...initialValues])\n    }\n  }, [initialValues])\n\n  const { setTouched, setError: $setError, setValue } = helpers\n  const [error, setError] = useState('')\n\n  const [featureField, setFeatureField] = useState('')\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFeatureField(e.target.value)\n    $setError(``)\n    setError(``)\n  }\n\n  const onFeatureAdd = () => {\n    if (featureField.length >= min && featureField.length < max) {\n      setError('')\n      features.push({ name: featureField, id: nanoid(4) })\n      setFeatures((prev) => [...prev])\n\n      setValue([...features])\n      setTouched(true)\n      $setError(undefined)\n      setFeatureField('')\n    } else {\n      if (featureField.length >= min) {\n        setError(`${name} text must be at least ${min} characters`)\n      } else if (featureField.length < max) {\n        setError(`${name} text cannot be longer than ${max} characters`)\n      }\n    }\n  }\n\n  const onFeatureRemove = (featureId: string) => {\n    remove(features, (f) => f.id === featureId)\n    setFeatures((prev) => [...prev])\n  }\n\n  return (\n    <div>\n      {features && features.length > 0 && (\n        <ol className=\"space-y-4 border dark:border-gray-700 border-gray-200 rounded-lg p-4  list-disc \">\n          {map(features, (feature) => (\n            <li\n              className=\"flex items-center on-hover-container relative text-gray-900 dark:text-white  cursor-pointer text-left\"\n              key={feature.id}\n            >\n              <div className=\"\">\n                <span className=\"block text-gray-900 dark:text-gray-400 text-sm font-normal\">\n                  {feature.name}\n                </span>\n              </div>\n\n              <span\n                onClick={() => onFeatureRemove(feature.id)}\n                className=\"absolute on-hover-item  pr-4 right-0\"\n              >\n                <BiTrashAlt className=\"hover:bg-gray-700 p-2 h-8 w-8  rounded-md text-red-500\" />\n              </span>\n            </li>\n          ))}\n        </ol>\n      )}\n      <div\n        className={`flex mt-4 justify-start  ${\n          !error ? 'items-end' : 'items-center'\n        } rounded-md  gap-2`}\n      >\n        <NormalFormInput\n          error={error}\n          label={`Add ${label || name}`}\n          value={featureField}\n          id=\"tags\"\n          placeholder={`Enter ${placeholder || name}`}\n          fullWidth\n          className=\"w-full capitalize\"\n          onChange={onChange}\n        />\n\n        <Button\n          onClick={onFeatureAdd}\n          size=\"lg\"\n          invert\n          className=\"w-32\"\n          gradient\n          label=\"+ Add\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default List\n","import { Transition } from '@headlessui/react'\nimport Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { useField } from 'formik'\nimport find from 'lodash/find'\nimport map from 'lodash/map'\nimport remove from 'lodash/remove'\nimport { nanoid } from 'nanoid'\nimport React, { useState } from 'react'\nimport { MdCancel } from 'react-icons/md'\n\nconst FormTagsInput = ({\n  name,\n  className = '',\n}: {\n  name: string\n  className?: string\n}) => {\n  const [tags, setTags] = useState<{ name: string; id: string }[]>([])\n\n  const [tagField, setTagField] = useState('')\n  const [field, meta, helpers] = useField(name)\n\n  const { setTouched, setError: $setError, setValue } = helpers\n\n  const onAdd = () => {\n    if (tagField.length >= 3) {\n      const exist = find(\n        tags,\n        (d) => d.name.toLowerCase() === tagField.toLowerCase()\n      )\n      if (!exist) {\n        setError('')\n        setTags((prev) => [...prev, { name: tagField, id: nanoid(4) }])\n        setValue(tags)\n        setTouched(true)\n        $setError(undefined)\n        setTagField('')\n      } else {\n        setError(`Tag: ${tagField} already exists`)\n      }\n    } else {\n      setError(`Tag must be at least 3 characters`)\n    }\n  }\n\n  const [error, setError] = useState('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTagField(e.target.value)\n    setError(``)\n  }\n\n  const onRemove = (tagId: string) => {\n    remove(tags, (tag) => tag.id === tagId)\n    setTags((prev) => [...prev])\n  }\n\n  return (\n    <div className={className}>\n      <>\n        <div className=\"flex flex-col items-start gap-y-4\">\n          <div\n            className={`flex ${\n              error ? 'items-center' : 'items-end'\n            } gap-x-4 w-full`}\n          >\n            <NormalFormInput\n              error={error}\n              label=\"Add Tags/Keywords\"\n              value={tagField}\n              id=\"tags\"\n              placeholder=\"Enter tag\"\n              className=\"w-full\"\n              //   gridClass=\"col-span-2\"\n              onChange={onChange}\n            />\n            <Button\n              gradient\n              size=\"lg\"\n              invert\n              className=\"\"\n              onClick={onAdd}\n              bgColor=\"pink\"\n              label={'+ Add'}\n            />\n          </div>\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            show={tags && tags.length > 0}\n          >\n            <div className=\"gap-x-4 gap-y-4 flex items-center w-full flex-wrap\">\n              {map(tags, (tag: any, idx: number) => (\n                <div\n                  className=\"gradient-text on-hover-container border border-gray-200 dark:border-gray-600   px-3 py-2 text-xs rounded-md shadow-md cursor-pointer relative\"\n                  key={tag + '-' + idx}\n                >\n                  {tag.name}\n                  <div\n                    onClick={() => onRemove(tag.id)}\n                    className=\"absolute on-hover-item  -top-2 -right-2  flex items-center\"\n                  >\n                    <MdCancel\n                      className=\"h-5 w-5 text-red-500\"\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Transition>\n        </div>\n      </>\n    </div>\n  )\n}\n\nexport default FormTagsInput\n","import { uploadMultipleImages } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport { IProductImage } from 'interfaces/UniversalInterface'\nimport lgZoom from 'lightgallery/plugins/zoom'\nimport LightGallery from 'lightgallery/react'\nimport { forEach, map } from 'lodash'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useRef, useState } from 'react'\nimport { AiOutlineCamera, AiOutlineUpload } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\n\nconst UploadImages = ({\n  setImagesUploaded,\n}: {\n  setImagesUploaded: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const productImageRef: React.LegacyRef<HTMLInputElement> = useRef()\n  const [_, meta, helpers] = useField('images')\n\n  const { setValue, setError } = helpers\n  const [imageList, setImageList] = useState<any[]>([])\n\n  const {\n    mutate,\n    isLoading,\n    isError,\n    error = '',\n    data,\n    isSuccess,\n  } = useMutation(uploadMultipleImages)\n\n  const onImageSelect = (e: any): void => {\n    console.log('🚀 ~ file: UploadImages.tsx ~ line 43 ~ onImageSelect ~ e', e)\n    const imgs: File[] = Object.values(e.target.files)\n\n    if (imgs.length > 0) {\n      imgs.forEach((img) => imageList.push(img))\n\n      setImageList((prev) => [...prev])\n    }\n  }\n\n  const showFileExplorer = () => productImageRef?.current?.click()\n\n  const upload = () => {\n    const fd = new FormData()\n\n    forEach(imageList, (image) => {\n      fd.append('images', image)\n    })\n\n    setTimeout(() => {\n      mutate(fd)\n    }, 500)\n  }\n\n  if (isError) {\n    setError(error.toString())\n  }\n\n  useEffect(() => {\n    if (isSuccess) {\n      const finalImageList: IProductImage[] = map(\n        data.data.data,\n        (img, idx: number) => ({\n          id: nanoid(24),\n          url: img.location,\n          isCover: idx === 0,\n          alt: '',\n        })\n      )\n\n      setValue(finalImageList)\n      setImagesUploaded(true)\n    }\n  }, [isSuccess])\n\n  return (\n    <div>\n      {imageList && imageList.length > 0 && (\n        <div className=\"grid grid-cols-2 sm:grid-cols-4 mb-8 gap-8\">\n          {imageList.map(\n            (image, idx) =>\n              // <div key={idx}>\n              image && (\n                <LightGallery key={idx} speed={500} plugins={[lgZoom]}>\n                  <img\n                    className={`shadow-lg  rounded-lg`}\n                    src={URL.createObjectURL(image)}\n                    alt=\"People working on laptops\"\n                  />\n                </LightGallery>\n              )\n            // </div>\n          )}\n        </div>\n      )}\n      <input\n        ref={productImageRef}\n        className=\"hidden\"\n        multiple\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      <div className=\"flex items-center gap-x-4\">\n        <Button\n          onClick={showFileExplorer}\n          size=\"lg\"\n          invert\n          // className=\"w-32\"\n          gradient\n          Icon={AiOutlineCamera}\n          label=\"+ Add Images\"\n        />\n        {imageList.length > 0 && (\n          <Button\n            onClick={upload}\n            size=\"lg\"\n            // className=\"w-32\"\n            loading={isLoading}\n            loadingText=\"Uploading Images...\"\n            gradient\n            Icon={AiOutlineUpload}\n            label=\"Upload Images\"\n          />\n        )}\n      </div>\n      <FormError\n        show={Boolean(meta.touched && meta.error)}\n        error={meta.error}\n      />\n    </div>\n  )\n}\n\nexport default UploadImages\n","import { addProduct } from 'apis/mutations'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormMultipleSelector from 'components/atoms/FormMultipleSelector'\nimport FormSelector from 'components/atoms/FormSelector'\nimport FormTagsInput from 'components/atoms/FormTagsInput'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Title from 'components/atoms/Title'\nimport List from 'components/List'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { Form, Formik } from 'formik'\nimport { IParent, IProduct } from 'interfaces/UniversalInterface'\nimport { map, times } from 'lodash'\nimport UploadImages from 'pages/products/UploadImages'\nimport { useEffect, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router'\nimport { colorsList, sizeList } from 'values/values'\nimport * as Yup from 'yup'\n\nconst AddProduct = ({\n  profileUrl,\n  userData,\n}: {\n  profileUrl: string\n  userData: IParent\n}) => {\n  const minMsg = (field: string, number: number) =>\n    `${field} must be atleast ${number} characters`\n  const maxMsg = (field: string, number: number) =>\n    `${field} must be maximum ${number} characters`\n\n  const validationSchema = Yup.object({\n    productName: Yup.string()\n      .required('Product name is required')\n      .min(8, minMsg('Product Name', 8))\n      .max(200, maxMsg('Product Name', 200)),\n    productDescription: Yup.string()\n      .required('Product description is required')\n      .min(50, minMsg('Product Description', 50)),\n\n    details: Yup.string()\n      .required('Product details is required')\n      .min(50, minMsg('Product details', 50)),\n\n    price: Yup.string()\n      .required('Price is required')\n      .matches(/^[0-9.]+$/, 'Must be only digits'),\n  })\n\n  // @ts-ignore\n  const initialValues: IProduct = {\n    images: [],\n    productName: '',\n    productDescription: '',\n    availableColors: [],\n    availableSizes: [],\n    tags: [],\n    estimatedDelivery: 'In 7 days',\n    price: '',\n    details: '',\n    features: [],\n    highlights: [],\n  }\n\n  const { mutate, isLoading, isError, isSuccess } = useMutation(addProduct)\n  const [imagesUploaded, setImagesUploaded] = useState(false)\n\n  const history = useHistory()\n  useEffect(() => {\n    if (isSuccess) {\n      history.push(\n        links.getProfileById(\n          userData.profileUrl,\n          userData?.other?.template || 1\n        )\n      )\n    }\n  }, [isSuccess])\n\n  const [error, setError] = useState('')\n\n  const onSubmit = async (values: any) => {\n    if (imagesUploaded) {\n      mutate(values)\n    } else {\n      setError('Please upload image')\n    }\n  }\n  return (\n    <NarrowLayout userData={userData}>\n      <Meta pageTitle=\"Add Product\" />\n      <Title fontWeight=\"font-bold mb-8\">Add New Product</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-8\">\n          <FormInput\n            label=\"Product Name\"\n            id=\"productName\"\n            name=\"productName\"\n            required\n            placeholder=\"Eg. Programming T-shirts\"\n          />\n          <UploadImages setImagesUploaded={setImagesUploaded} />\n          <FormInput\n            label=\"Product Description\"\n            id=\"productDescription\"\n            name=\"productDescription\"\n            placeholder=\"Tell your customer about the product in brief\"\n            required\n            textarea\n            rows={4}\n            cols={255}\n          />\n\n          <FormInput\n            label=\"Details\"\n            id=\"details\"\n            name=\"details\"\n            placeholder=\"What includes in product?\"\n            required\n            textarea\n            rows={2}\n            cols={255}\n          />\n          <div className=\"flex items-center w-full space-x-6\">\n            <FormMultipleSelector\n              className=\"w-1/2\"\n              label=\"Available Colors\"\n              disableFieldOption\n              name=\"availableColors\"\n              placeholder=\"Available colors for product\"\n              list={colorsList}\n            />\n            <FormMultipleSelector\n              className=\"w-1/2\"\n              sortBy=\"id\"\n              disableFieldOption\n              label=\"Available Sizes\"\n              name=\"availableSizes\"\n              placeholder=\"XS,M,XL\"\n              list={sizeList}\n            />\n          </div>\n          <div className=\"flex items-start w-full space-x-6\">\n            <FormInput\n              label=\"Product Price\"\n              id=\"price\"\n              gridClass=\"w-1/2\"\n              name=\"price\"\n              required\n              placeholder=\"99\"\n            />\n\n            <FormSelector\n              required\n              list={map(times(30), (d) => ({\n                name: `In ${d + 1} days`,\n                id: d.toString(),\n              }))}\n              className=\"w-1/2\"\n              name=\"estimatedDelivery\"\n              placeholder=\"In 3 days\"\n              label={'Estimated Delivery'}\n            />\n          </div>\n          <FormTagsInput name=\"tags\" />\n          <List name=\"features\" />\n          <List name=\"highlights\" />\n\n          {error && <Error errors={[error.toString()]} />}\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={isLoading}\n              gradient\n              size=\"lg\"\n              label=\"Submit\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default AddProduct\n"],"sourceRoot":""}
{"version":3,"sources":["components/atoms/Toggle.tsx","pages/account/student/EducationStep.jsx"],"names":["Toggle","enabled","setEnabled","text","subText","className","Group","as","Label","passive","Description","checked","onChange","classNames","EducationStep","user","history","useHistory","useState","saving","setSaving","useEffect","hasOwnProperty","accountFilled","push","links","DASHBAORD","checkAccount","setValues","useUserContext","onSubmit","values","a","token","getAccessToken","updatedData","background","education","id","nanoid","name","grade","grade_subject","from","fields","start_year","to","end_year","other","accountFinishedStep","network","post","headers","Authorization","password","STUDENT_STEP_2","console","error","validationSchema","Yup","required","above_sixteen","setFields","Layout","title","withButton","TextButton","onClick","BUSINESS_STEP_1","subtitle","AnimatedDiv","initialValues","StudentStepOne","enableReinitialize","FormInput","label","Selector","list","yearList","selectedItem","placeholder","onSelect","item","yearListWithFuture","color","CHOOSE_ACCOUNT","Button","fullWidth","rounded","gradient","type","loading"],"mappings":"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","file":"static/js/10.37c6891f.chunk.js","sourcesContent":["import { Switch } from '@headlessui/react'\nimport { classNames } from 'utils/classNames'\n\nconst Toggle = ({\n  enabled,\n  setEnabled,\n  text,\n  subText,\n  className,\n}: {\n  enabled: boolean\n  setEnabled: React.Dispatch<React.SetStateAction<boolean>>\n  text: string\n  subText?: string\n  className?: string\n}) => {\n  return (\n    <Switch.Group\n      as=\"div\"\n      className={`flex items-center justify-between ${className}`}\n    >\n      <span className=\"flex-grow flex flex-col items-start\">\n        <Switch.Label\n          as=\"span\"\n          className=\"text-sm font-medium text-white\"\n          passive\n        >\n          {text}\n        </Switch.Label>\n        <Switch.Description as=\"span\" className=\"text-sm text-gray-500\">\n          {subText}\n        </Switch.Description>\n      </span>\n      <Switch\n        checked={enabled}\n        onChange={setEnabled}\n        className={classNames(\n          enabled\n            ? 'bg-gradient-to-r from-pink-500 to-yellow-500'\n            : 'bg-gray-800',\n          'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? 'translate-x-5' : 'translate-x-0',\n            'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200'\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  )\n}\nexport default Toggle\n","/* eslint-disable quotes */\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Toggle from 'components/atoms/Toggle'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\nimport { yearList, yearListWithFuture } from 'values/values'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { StudentStepOne } from 'initials'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport { getAccessToken, network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\n\nconst EducationStep = ({ user }) => {\n  const history = useHistory()\n\n  const [saving, setSaving] = useState(false)\n\n  /**\n   * Check if account is already selected\n   */\n  const checkAccount = () => {\n    if (user && user.hasOwnProperty('accountFilled') && user?.accountFilled) {\n      return history.push(links.DASHBAORD)\n    }\n  }\n\n  useEffect(() => {\n    checkAccount()\n  }, [])\n\n  const { setValues } = useUserContext()\n\n  const onSubmit = async (values) => {\n    try {\n      const token = getAccessToken()\n\n      setSaving(true)\n      const updatedData = {\n        ...user,\n        background: {\n          ...user.background,\n          education: [\n            {\n              id: nanoid(9),\n              name: values.education,\n              grade: values.grade,\n              grade_subject: values.grade_subject,\n              from: fields.start_year,\n              to: fields.end_year,\n            },\n          ],\n        },\n        other: {\n          ...user.other,\n          accountFinishedStep: 'education',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.STUDENT_STEP_2)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const validationSchema = Yup.object({\n    education: Yup.string().required('Please add education'),\n    grade: Yup.string().required('Please add grade'),\n    grade_subject: Yup.string().required('Please add grade subject'),\n  })\n\n  const [fields, setFields] = useState({\n    start_year: '',\n    end_year: '',\n    above_sixteen: false,\n  })\n\n  return (\n    <Layout\n      title=\"Education Information\"\n      withButton={\n        <TextButton\n          text=\"or create a business account\"\n          onClick={() => history.push(links.BUSINESS_STEP_1)}\n        />\n      }\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-800 border border-white dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={StudentStepOne}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            enableReinitialize\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Education\"\n                id=\"education\"\n                name=\"education\"\n                required\n              />\n\n              <FormInput\n                label=\"Grade / title\"\n                id=\"grade\"\n                name=\"grade\"\n                required\n              />\n              <FormInput\n                label=\"Graduation subject\"\n                id=\"grade_subject\"\n                name=\"grade_subject\"\n                required\n              />\n              <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2\">\n                <div className=\"\">\n                  <Selector\n                    label={'Start year'}\n                    list={yearList}\n                    selectedItem={fields.start_year}\n                    placeholder={'-'}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        start_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n\n                <div className=\"\">\n                  <Selector\n                    label={'End year (or expected)'}\n                    placeholder={'-'}\n                    list={yearListWithFuture}\n                    selectedItem={fields.end_year}\n                    onSelect={(item) =>\n                      setFields({\n                        ...fields,\n                        end_year: item.name,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div>\n                <Toggle\n                  className=\"mt-2\"\n                  enabled={fields.above_sixteen}\n                  text={\"I'm over 16 years old\"}\n                  setEnabled={() =>\n                    setFields({\n                      ...fields,\n                      above_sixteen: !fields.above_sixteen,\n                    })\n                  }\n                />\n              </div>\n              <div>\n                <TextButton\n                  color=\"gray\"\n                  onClick={() => history.push(links.CHOOSE_ACCOUNT)}\n                  text={\"I'm not a student\"}\n                  className=\"text-center py-2\"\n                />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  type=\"submit\"\n                  loading={saving}\n                  label=\"Next Step\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default EducationStep\n"],"sourceRoot":""}
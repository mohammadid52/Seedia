{"version":3,"sources":["components/Spinner.tsx","components/atoms/TextButton.tsx","components/atoms/Divider.tsx","components/DiscoverButton.tsx","components/atoms/DatePicker.tsx","components/ProfileComponents/Activity.tsx","components/ProfileStrength.tsx","components/PublicProfileCard.tsx","pages/profile/AdditionalFeatures.tsx","pages/profile/Layout.tsx","pages/profile/PeopleAlsoViewed.tsx","components/BottomCard.tsx","components/AdditionalInfo.tsx","components/atoms/animation/Loader.tsx","components/atoms/Tabs.tsx","pages/profile/Recommendations.tsx","components/modals/AwardsModal.tsx","components/modals/EducationModal.tsx","components/modals/ExperienceTwoModal.tsx","components/modals/LanguagesModal.tsx","components/modals/SkillsModal.tsx","components/profileTwo/Awards.tsx","components/profileTwo/Cover.tsx","components/profileTwo/Education.tsx","components/profileTwo/Experiences.tsx","components/profileTwo/Languages.tsx","components/profileTwo/Shortcuts.tsx","components/profileTwo/Skills.tsx","pages/profile/Following.tsx","pages/profile/ProfileTwo.tsx"],"names":["Spinner","className","TextButton","text","onClick","color","Divider","withButton","Icon","onBtnClick","style","height","DiscoverCard","extraItems","useQuery","fetchEvents","isFetched","isLoading","data","shortEventsData","href","links","groups","length","map","ev","viewEvent","_id","eventName","item","link","name","DatePicker","date","setDate","label","required","optional","placeholder","minDate","maxDate","showMonthYearPicker","additionanProps","htmlFor","id","selectsStart","dateFormat","selected","onChange","showPopperArrow","placeholderText","calendarClassName","popperModifiers","offset","enabled","preventOverflow","escapeWithReference","boundariesElement","Activity","iAmOwnerOfThisProfile","userData","slicedList","activity","slice","cardTitle","content","followers","profileUrl","idx","postUrl","postById","showUserImage","Boolean","userImage","src","avatarPlaceholder","alt","subtext","fullWidth","invert","target","gradient","recentActivity","title","subtitle","firstName","iconUrl","ProfileStrength","secondary","authUser","useState","nextStepText","setNextStepText","accountType","other","progress","setProgress","useEffect","mainKeys","profilePicture","coverPicture","business","company","background","location","vals","values","wrapper","str","arrLen","filter","value","generateFinishStep","privateCard","getNanoId","arr","split","PublicProfileCard","match","useRouteMatch","initalFields","setInitalFields","middles","onlyName","pop","join","getMiddles","unsavedChanges","setUnsavedChanges","showUnsaveModal","setShowUnsaveModal","showEditProfileUrlModal","setShowEditProfileUrlModal","saving","setSaving","setValues","useUserContext","token","getAccessToken","history","useHistory","onSave","a","updatedData","password","network","post","headers","Authorization","push","getProfileById","template","window","reload","console","error","message","new_url","process","open","onClose","setOpen","header","e","prev","loading","disabled","rel","url","replace","hideCloseBtn","bgColor","AdditionalFeatures","isBusiness","otherUserData","refetchProfile","setNotification","useNotifications","mutate","useMutation","saveProfile","onSuccess","action","setSaved","show","fullName","buttonText","buttonUrl","myItems","alreadySaved","savedProfiles","find","d","saved","showResumeValidityModal","setShowResumeValidityModal","setError","isSuccess","setIsSuccess","isChecking","setIsChecking","animation","showEditOption","btnText","errorAnimation","seeResume","successAnimation","isValid","summary","birthDate","skills","experiences","education","socialMedia","wait","then","checkValidity","viewMyRequests","targetId","Layout","firstCol","secondCol","thirdCol","hideBorders","marginTop","SIDEBAR_HEIGHT","React","memo","PeopleAlsoViewed","showSingleCard","config","users","piv","limit","fetchUsers","pivCount","list","people","user","rounded","toAction","size","BottomCard","myFollowings","useAccountType","useFollow","toString","following","addFollow","removeFollow","zIndex","classNames","jobTitle","KeyValue","AdditionalInfo","refetch","showModal","setShowModal","initialState","twitter","facebook","instagram","github","localFields","setLocalFields","isEmpty","getUrl","type","s","Date","updateState","nanoid","disableBackdropClose","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","setFullYear","withCardHeadings","AiOutlineEdit","moment","format","media","Loader","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","Tabs","tabs","currentTab","setCurrentTab","defaultValue","tab","current","undefined","count","Recommendations","recommendation","fetchReceived","setFetchReceived","fetching","setFetching","fetchGiven","setFetchGiven","fetchReceivedList","received","g","userId","_r","fetchGivenList","given","_g","onCancel","validationSchema","Yup","min","max","Modal","onSubmit","initialValues","FormInput","textarea","Button","Card","recom","getProfile","EmptyState","awards","awardName","awardFor","AwardsModal","award","awardIdx","remove","NormalFormInput","newAward","from","to","degree","EducationModal","showContent","onEducationSelectUpdate","fieldName","update","getValue","onEducationFieldUpdate","_education","BiTrashAlt","newEdObj","hidden","ExperienceTwoModal","exp","joinDate","leaveDate","onExperienceFieldUpdate","onExperienceSelectUpdate","experience","newExperience","companyName","description","languages","langName","langLevel","languageKnownLevel","LanguagesModal","lang","Selector","onSelect","selectedItem","newLangauge","skillText","skillStrength","SkillsModal","skill","strength","skillsStrength","Awards","AWARDS","BtnIcon","PlusIcon","Cover","_image","setImage","fd","FormData","append","profileImageSelectorRef","useRef","URL","createObjectURL","click","showFileExplorerForProfile","noop","ref","img","files","onImageSelect","accept","address","city","state","country","currentCompany","email","typeOfBusiness","relationshipToBusiness","livesIn","Education","EDUCATION","ed","Experiences","PROFILE_TWO_EXPERIENCE","step","stepIdx","companyAddress","sumOfMonths","Number","diff","Languages","LANGUAGES","shortcuts","Shortcuts","shortcut","toLocaleLowerCase","Skills","SKILLS","Following","interests","gradientHover","BsChevronLeft","BsChevronRight","User","ProfileTwo","route","useRouter","params","viewMode","userIdFromParam","useUser","showAllButtons","commonBlockProps","commonProps","commonModalProps","commonBlockProps2","getType","Loading","DashboardHeader","Meta","pageTitle","userName","pageUrl","imageUrl","pageType","keywords","Sidebar","constants","renderModalHeader","renderModalContentByType","CustomFooter"],"mappings":"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","file":"static/js/18.f80ab08c.chunk.js","sourcesContent":["const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","const Divider = ({\n  className,\n  withButton,\n  Icon,\n  text,\n  onBtnClick,\n}: {\n  className?: string\n  withButton?: boolean\n  Icon?: any\n  text?: string\n  onBtnClick?: () => void\n}) => {\n  return withButton ? (\n    <div className=\"relative\">\n      <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n        <div className=\"w-full border-t dark:border-gray-700 border-gray-400\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span\n          onClick={onBtnClick}\n          className={`${className} bg-white text-xs dark:bg-gray-900 px-2 text-gray-600`}\n        >\n          {text}\n          {Icon && <Icon />}\n        </span>\n      </div>\n    </div>\n  ) : (\n    <div\n      style={{ height: 1 }}\n      className={`my-4 dark:bg-gray-700 bg-gray-400 ${className}`}\n    />\n  )\n}\n\nexport default Divider\n","import { links } from 'constants/Links'\nimport { useQuery } from 'react-query'\nimport { fetchEvents } from 'apis/queries'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  const { isFetched, isLoading, data } = useQuery('short-event-names', () =>\n    fetchEvents(true)\n  )\n\n  const shortEventsData: { _id: string; eventName: string }[] =\n    isFetched && !isLoading ? data?.data?.data : []\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\"flex flex-col\">\n            <div className=\" cursor-pointer flex  items-center justify-between\">\n              <div className=\"hover:underline \">Events</div>\n              <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n                +\n              </div>\n            </div>\n            {shortEventsData &&\n              shortEventsData.length > 0 &&\n              shortEventsData.map((ev) => (\n                <a\n                  href={links.viewEvent(ev._id)}\n                  className=\"py-2 text-xs font-medium text-gray-500 dark:text-gray-500 hover:underline cursor-pointer\"\n                >\n                  {ev.eventName}\n                </a>\n              ))}\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import DatepickerModule from 'react-datepicker'\n\nconst DatePicker = ({\n  date,\n  setDate,\n  name,\n  label,\n  required,\n  optional,\n  placeholder,\n  className = '',\n  minDate,\n  maxDate,\n  showMonthYearPicker = true,\n  additionanProps,\n}: {\n  date: any\n  setDate: any\n  name?: string\n  label?: string\n  placeholder?: string\n  required?: boolean\n  showMonthYearPicker?: boolean\n  optional?: boolean\n  className?: string\n  maxDate?: any\n  minDate?: any\n  additionanProps?: any\n}) => {\n  return (\n    <div>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n      <DatepickerModule\n        {...additionanProps}\n        required\n        selectsStart\n        dateFormat=\"dd/MM/yyyy\"\n        showMonthYearPicker={showMonthYearPicker}\n        selected={date}\n        onChange={(date) => setDate(date)}\n        // minDate={new Date()}\n        showPopperArrow={false}\n        placeholderText={placeholder}\n        minDate={minDate}\n        maxDate={maxDate}\n        calendarClassName=\"rasta-stripes\"\n        className={`dark:bg-gray-900 rounded-md border dark:border-gray-700 dark:placeholder-gray-700 dark:text-white ${className}`}\n        popperModifiers={{\n          // @ts-ignore\n          offset: {\n            enabled: true,\n            offset: '0px, 0px',\n          },\n          preventOverflow: {\n            enabled: true,\n            escapeWithReference: false,\n            boundariesElement: 'scrollParent',\n          },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DatePicker\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { links } from 'constants/Links'\nimport { IActivity, IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst Activity = ({\n  iAmOwnerOfThisProfile,\n  userData,\n}: {\n  iAmOwnerOfThisProfile: boolean\n  userData: IParent\n}) => {\n  const slicedList = userData?.activity?.slice(0, 4)\n\n  return (\n    <Card\n      cardTitle=\"Activity\"\n      content={\n        <div>\n          {iAmOwnerOfThisProfile ? (\n            <a href={links.followers(userData.profileUrl)} className=\"block\">\n              <div className=\"-mt-2 mb-2 text-link hover:underline font-medium tracking-wide \">\n                {userData?.followers?.length} followers\n              </div>\n            </a>\n          ) : (\n            <h5 className=\"-mt-2 mb-2 text-gray-600 dark:text-gray-400\">\n              {userData?.followers?.length} followers\n            </h5>\n          )}\n          {userData?.activity?.length > 0 ? (\n            <div>\n              <div\n                className={`grid gap-4 ${\n                  userData?.activity?.length > 1 ? 'grid-cols-2' : 'grid-cols-1'\n                }`}\n              >\n                {slicedList.map((activity: IActivity, idx) => {\n                  const postUrl = links.postById(activity.postUrl)\n                  const showUserImage = Boolean(activity.userImage)\n                  return (\n                    <div\n                      key={activity.text + idx}\n                      className=\"sm:flex overflow-hidden\"\n                    >\n                      <div className=\"mb-4 flex-shrink-0 sm:mb-0 sm:mr-4\">\n                        <img\n                          src={\n                            activity.userImage\n                              ? activity.userImage\n                              : avatarPlaceholder\n                          }\n                          alt=\"13RMS\"\n                          className={`sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 ${\n                            showUserImage ? 'rounded-full' : ''\n                          }`}\n                        />\n                      </div>\n                      <a href={postUrl} className=\"group cursor-pointer\">\n                        <h4 className=\"truncate text-base line-clamp group-hover:underline dark:text-gray-200 font-bold\">\n                          {activity.text}\n                        </h4>\n                        <span className=\"text-gray-500 dark:text-gray-600 group-hover:underline\">\n                          {activity.subtext}\n                        </span>\n                      </a>\n                    </div>\n                  )\n                })}\n              </div>\n              <div className=\"justify-end flex items-center\">\n                <Button\n                  label=\"Show all activity\"\n                  fullWidth\n                  className=\"mt-4 \"\n                  invert\n                  target=\"\"\n                  gradient\n                  link={links.recentActivity(userData.profileUrl)}\n                />\n              </div>\n            </div>\n          ) : (\n            <EmptyState\n              title=\"No Activity\"\n              subtitle={`${\n                iAmOwnerOfThisProfile ? 'Your' : `${userData.firstName}'s'`\n              } recent posts, comments, replies will be here`}\n              iconUrl={'/no-activity.png'}\n            />\n          )}\n        </div>\n      }\n    />\n  )\n}\n\nexport default Activity\n","import { IParent } from 'interfaces/UniversalInterface'\nimport React, { useEffect, useState } from 'react'\nimport Card from 'components/atoms/Card'\nimport 'styles/loader.scss'\nimport { filter, values } from 'lodash'\n\nconst ProfileStrength = ({\n  userData,\n  authUser,\n  secondary,\n}: {\n  userData?: IParent\n  authUser: boolean\n  secondary?: boolean\n}) => {\n  const [nextStepText, setNextStepText] = useState('')\n\n  const accountType = userData?.other?.accountType\n\n  const [progress, setProgress] = useState(20)\n\n  const generateFinishStep = () => {\n    const mainKeys = {\n      profilePicture: userData?.profilePicture,\n      coverPicture: userData?.coverPicture,\n      [accountType === 'business' ? 'business' : 'personal']:\n        accountType === 'business' ? userData?.business : userData?.company,\n      background: userData?.background,\n      location: userData?.location,\n    }\n\n    const vals = values(mainKeys)\n\n    const wrapper = (str: string) => `Add ${str} to get a star`\n\n    if (!vals[0]) {\n      setNextStepText(wrapper('your profile picture'))\n    } else if (!vals[1]) {\n      setNextStepText(wrapper('your cover picture'))\n    } else if (!vals[2]) {\n      setNextStepText(wrapper(`${accountType} details`))\n    } else if (!vals[3]) {\n      setNextStepText(wrapper(`background details`))\n    } else if (!vals[4]) {\n      setNextStepText(wrapper(`location details`))\n    } else {\n      setNextStepText('Woah! You have completed your profile details')\n    }\n\n    const arrLen = filter(vals, (value: any) => Boolean(value))\n\n    setProgress(arrLen.length * 20)\n  }\n\n  useEffect(() => {\n    generateFinishStep()\n  }, [userData])\n\n  return (\n    <Card\n      className=\"mb-12\"\n      secondary={secondary}\n      content={\n        <div className=\" pb-2 flex flex-col items-center\">\n          <div\n            className={`progress-circle ${\n              progress >= 50 ? 'over50' : ''\n            } p${progress}`}\n          >\n            <span>{progress}%</span>\n            <div className=\"left-half-clipper\">\n              <div className=\"transition-all duration-1000 first50-bar\"></div>\n              <div className=\"value-bar transition-all duration-1000\"></div>\n            </div>\n          </div>\n\n          <h4 className=\"dark:text-gray-400  text-sm font-medium text-gray-600 text-center\">\n            {nextStepText}\n          </h4>\n        </div>\n      }\n      privateCard\n      cardTitle=\"Profile Strength\"\n    />\n  )\n}\n\nexport default ProfileStrength\n","import { links } from 'constants/Links'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\nimport Button from './atoms/Button'\nimport Card from './atoms/Card'\nimport Modal from './atoms/Modal'\nimport NormalFormInput from './atoms/NormalFormInput'\n\nconst getMiddles = (str?: string) => {\n  if (str) {\n    const onlyName = str.split('_')\n    onlyName.pop()\n    return onlyName.join('_')\n  }\n  return ''\n}\n\nconst getNanoId = (str?: string) => {\n  if (str) {\n    const arr = str.split('_')\n    return arr[arr.length - 1]\n  }\n  return ''\n}\n\nconst PublicProfileCard = ({\n  secondary,\n  userData,\n}: {\n  secondary?: boolean\n  userData?: IParent\n}) => {\n  const profileUrl = userData?.profileUrl\n  const match = useRouteMatch()\n\n  const [initalFields, setInitalFields] = useState({\n    profileUrl: '',\n  })\n\n  useEffect(() => {\n    const middles = getMiddles(profileUrl)\n    if (profileUrl) {\n      setInitalFields({ profileUrl: middles })\n      return () => {\n        setInitalFields({ profileUrl: middles })\n      }\n    }\n  }, [profileUrl])\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [showUnsaveModal, setShowUnsaveModal] = useState(false)\n\n  const [showEditProfileUrlModal, setShowEditProfileUrlModal] = useState(false)\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n    }\n    setShowEditProfileUrlModal(false)\n  }\n\n  const [saving, setSaving] = useState(false)\n\n  const { setValues } = useUserContext()\n  const token = getAccessToken()\n  const history = useHistory()\n\n  const onSave = async () => {\n    if (initalFields.profileUrl.length > 6) {\n      try {\n        let updatedData = {\n          ...userData,\n          profileUrl: `${initalFields.profileUrl}_${getNanoId(profileUrl)}`,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post(\n          '/user/update',\n          {\n            ...updatedData,\n          },\n          {\n            headers: { Authorization: token },\n          }\n        )\n        history.push(\n          links.getProfileById(\n            updatedData.profileUrl,\n            userData?.other?.template\n          )\n        )\n        window.location.reload()\n      } catch (error) {\n        console.error(error.message)\n      } finally {\n        setSaving(false)\n        setShowEditProfileUrlModal(false)\n      }\n    }\n  }\n\n  const new_url = `${process.env.REACT_APP_BASE_URL}/${\n    initalFields.profileUrl\n  }_${getNanoId(profileUrl)}`\n\n  return (\n    <>\n      {showEditProfileUrlModal && (\n        <Modal\n          open={showEditProfileUrlModal}\n          onClose={onCancel}\n          setOpen={() => setShowEditProfileUrlModal(false)}\n          header={'Edit url'}\n        >\n          <div className=\"\">\n            <div className=\"overflow-y-auto min-w-132 custom-scroll-mini darker my-4 px-1\">\n              <>\n                <NormalFormInput\n                  value={initalFields.profileUrl}\n                  onChange={(e: any) =>\n                    setInitalFields((prev) => ({\n                      ...prev,\n                      profileUrl: e.target.value,\n                    }))\n                  }\n                  label=\"Enter new url\"\n                  name=\"profileUrl\"\n                />\n                <div>\n                  <p className=\"mt-4 text-gray-800  dark:text-gray-400\">\n                    New url: {new_url}\n                  </p>\n                </div>\n                <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    loading={saving}\n                    disabled={saving}\n                    onClick={onSave}\n                    label=\"Save\"\n                  />\n                </div>\n              </>\n            </div>\n          </div>\n        </Modal>\n      )}\n      <Card\n        className=\"mb-0\"\n        secondary={secondary}\n        cardTitle=\"Others\"\n        content={\n          <ul className=\"min-h-20  flex items-start flex-col gap-y-4 justify-center\">\n            <li\n              onClick={() => setShowEditProfileUrlModal(true)}\n              className=\"dark:text-gray-400 cursor-pointer hover:underline link-hover\"\n            >\n              Edit profile url\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`${match.url.replace('/private', '/public')}`}\n                className=\"dark:text-gray-400 hover:underline link-hover\"\n              >\n                View profile as other\n              </a>\n            </li>\n          </ul>\n        }\n      />\n      {showUnsaveModal && (\n        <Modal\n          hideCloseBtn\n          header=\"Discard changes\"\n          open={showUnsaveModal}\n          setOpen={setShowUnsaveModal}\n        >\n          <>\n            <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n              You have unsaved changes\n            </h1>\n            <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n            <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n              <Button\n                secondary\n                bgColor=\"gray\"\n                onClick={() => {\n                  setShowUnsaveModal(false)\n                  setShowEditProfileUrlModal(true)\n                }}\n                invert\n                label=\"No thanks\"\n              />\n              <Button\n                gradient\n                label=\"Discard\"\n                onClick={() => {\n                  setShowUnsaveModal(false)\n                  // setLocalFields({ ...initialState })\n                }}\n              />\n            </div>\n          </>\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default PublicProfileCard\n","/* eslint-disable quotes */\nimport { saveProfile } from 'apis/mutations'\nimport errorAnimation from 'assets/animation/error.json'\nimport successAnimation from 'assets/animation/success.json'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { useMutation } from 'react-query'\nimport animation from 'assets/animation/searching-user.json'\nimport { wait } from 'utils/wait'\nconst AdditionalFeatures = ({\n  isBusiness,\n  userData,\n  otherUserData,\n  iAmOwnerOfThisProfile,\n  refetchProfile,\n}: {\n  isBusiness: boolean\n  userData: IParent\n  otherUserData?: IParent\n  iAmOwnerOfThisProfile: boolean\n  refetchProfile: any\n}) => {\n  const { setNotification } = useNotifications()\n\n  const { mutate } = useMutation(saveProfile, {\n    onSuccess: (data) => {\n      const action = data.data.data\n      setSaved((prev) => !prev)\n      setNotification({\n        show: true,\n        title: `${otherUserData.fullName}'s Profile ${\n          action === 'save' ? 'added to' : 'remove from'\n        } saved list`,\n        buttonText: 'View',\n        buttonUrl: links.myItems(),\n      })\n      refetchProfile()\n    },\n  })\n\n  const _saveProfile = () => {\n    mutate({\n      targetId: otherUserData._id,\n      action: alreadySaved ? 'unsave' : 'save',\n    })\n  }\n\n  const alreadySaved = Boolean(\n    userData.savedProfiles &&\n      userData?.savedProfiles.find((d) => d === otherUserData._id)\n  )\n\n  const [saved, setSaved] = useState(alreadySaved)\n\n  const [showResumeValidityModal, setShowResumeValidityModal] = useState(false)\n\n  const [error, setError] = useState('')\n  const [isSuccess, setIsSuccess] = useState(false)\n\n  const [isChecking, setIsChecking] = useState(false)\n\n  function checkValidity(): boolean {\n    setIsChecking(true)\n    let isValid = true\n    if (userData) {\n      const { background } = userData\n      if (!userData?.profileUrl) {\n        setError('Please add your profile picture')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!background?.summary) {\n        setError('Please add summary')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!userData.birthDate) {\n        setError('Please add birthdate')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!background?.skills) {\n        setError('Please add skills')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!background?.experiences) {\n        setError('Please add experiences')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!isBusiness && !background?.education) {\n        setError('Please add education')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n      if (!userData?.socialMedia) {\n        setError('Please add atleast one social media link')\n        isValid = false\n      } else {\n        isValid = true\n        setError('')\n      }\n    }\n    setIsSuccess(false)\n    wait(3000).then(() => setIsChecking(false))\n\n    return isValid\n  }\n\n  const onResumeBtnClick = () => {\n    const isValid = checkValidity()\n\n    if (isValid) {\n      setIsSuccess(true)\n    } else {\n      setIsSuccess(false)\n    }\n    setShowResumeValidityModal(true)\n  }\n\n  const onAdd = () => {\n    setShowResumeValidityModal(false)\n  }\n\n  return (\n    <>\n      <Modal\n        open={showResumeValidityModal}\n        setOpen={setShowResumeValidityModal}\n      >\n        <div className=\"min-w-112 max-w-122 min-h-112\">\n          {isChecking ? (\n            <EmptyState\n              title=\"Verifying data\"\n              subtitle=\"Checking required fields...\"\n              animation={animation}\n            />\n          ) : error ? (\n            <EmptyState\n              showEditOption\n              title=\"Error\"\n              subtitle={error}\n              btnText=\"Add now\"\n              onBtnClick={() => onAdd()}\n              animation={errorAnimation}\n            />\n          ) : isSuccess ? (\n            <EmptyState\n              showEditOption\n              title=\"Hurrah\"\n              subtitle={'You can see your resume now'}\n              btnText=\"See resume\"\n              onBtnClick={() =>\n                window.open(links.seeResume(userData.profileUrl), '_blank')\n              }\n              animation={successAnimation}\n            />\n          ) : (\n            <div />\n          )}\n        </div>\n      </Modal>\n      <Card\n        // className={`${!isBusiness && iAmOwnerOfThisProfile ? 'block' : 'hidden'}`}\n        cardTitle=\"Additional Features\"\n        content={\n          <div className=\"flex flex-col gap-y-6\">\n            <Button onClick={onResumeBtnClick} label={'See resume'} gradient />\n            {!isBusiness && iAmOwnerOfThisProfile && (\n              <>\n                <Button\n                  link={links.viewMyRequests()}\n                  label=\"View My Requests\"\n                  gradient\n                />\n              </>\n            )}\n            {!iAmOwnerOfThisProfile && (\n              <Button\n                onClick={() => _saveProfile()}\n                label={saved ? 'Unsave profile' : 'Save profile'}\n                gradient\n              />\n            )}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default AdditionalFeatures\n","import { IParent } from 'interfaces/UniversalInterface'\nimport React from 'react'\nimport { SIDEBAR_HEIGHT } from 'state/Redux/constants'\n\n// min-width: 1280px; // 1280px or greater than that, then to do the action.\n// max-width: 1280px; // 1280px or less than that, then to do the action.\n\nconst Layout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  hideBorders = false,\n}: {\n  firstColClass?: string\n  firstCol?: React.ReactNode\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n  hideBorders?: boolean\n  business?: boolean\n  userData?: IParent\n}) => {\n  return (\n    <div\n      style={{ marginTop: SIDEBAR_HEIGHT }}\n      className=\"flex-grow w-full  mx-auto xl:px-8 justify-start max-w-360 items-start lg:flex\"\n    >\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 min-w-0 xl:flex items-start\">\n        <div\n          className={` border-${\n            hideBorders ? 'transparent xl:block hidden' : 'b'\n          } dark:border-gray-700 border-gray-200  xl:border-b-0 xl:flex-shrink-0 xl:w-64`}\n        >\n          <div className=\"h-full pl-4 pr-6 py-6 sm:pl-6 lg:pl-8 xl:pl-0\">\n            {/* Start left column area */}\n            <div className=\"h-full relative\">{firstCol}</div>\n            {/* End left column area */}\n          </div>\n        </div>\n\n        <div className=\"lg:min-w-0 lg:flex-1\">\n          <div className=\"h-full py-6 px-4 sm:px-6 lg:px-8\">\n            {/* Start main area*/}\n            <div className=\"relative h-full\">{secondCol}</div>\n            {/* End main area */}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"pr-4 sm:pr-6 lg:pr-8 lg:flex-shrink-0 xl:pr-0\">\n        <div className=\"h-full pl-6 py-6 lg:w-80\">\n          {/* Start right column area */}\n          <div className=\"h-full relative\">{thirdCol}</div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Layout)\n","import { fetchUsers } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Spinner from 'components/Spinner'\nimport User from 'components/User'\nimport { links } from 'constants/Links'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\n\nconst PeopleAlsoViewed = ({\n  secondary = false,\n  userData,\n\n  showSingleCard = true,\n}: {\n  secondary?: boolean\n  showSingleCard?: boolean\n\n  userData?: IParent\n}) => {\n  const config = {\n    users: userData.piv,\n    limit: 4,\n  }\n  const { data, isLoading, isFetched, isSuccess } = useQuery(\n    'people-also-viewed-list',\n    () => fetchUsers(config),\n    { enabled: userData?.pivCount > 0 }\n  )\n\n  const list: IParent[] =\n    isFetched && !isLoading && isSuccess ? data.data.data.users : []\n\n  return (\n    <Card\n      secondary={secondary}\n      cardTitle={'People You Viewed'}\n      content={\n        <div\n          className={`${\n            showSingleCard\n              ? 'flex flex-col items-center gap-4'\n              : 'grid-cols-1 grid mt-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4'\n          }  `}\n        >\n          {isLoading ? (\n            <div className=\"flex items-center justify-center\">\n              <Spinner />\n            </div>\n          ) : list && list.length > 0 ? (\n            <div className=\"flex items-center gap-4 justify-center flex-col\">\n              {list.map((people: IParent, idx: number) => (\n                <User key={people?._id} user={people} />\n              ))}\n              <div className=\"\">\n                <Button\n                  label=\"see more\"\n                  rounded=\"rounded-full\"\n                  gradient\n                  link={links.toAction('piv')}\n                  size=\"lg\"\n                />\n              </div>\n            </div>\n          ) : (\n            <EmptyState\n              hideBorders\n              title=\"Oops Can't find users.\"\n              subtitle={``}\n              iconUrl={'/no-users.png'}\n            />\n          )}\n        </div>\n      }\n    />\n  )\n}\n\nexport default PeopleAlsoViewed\n","import Button from 'components/atoms/Button'\nimport useAccountType from 'hooks/useAccountType'\nimport useFollow from 'hooks/useFollow'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { classNames } from 'utils/classNames'\n\nconst BottomCard = ({\n  userData,\n  myFollowings,\n}: {\n  userData: IParent\n  myFollowings: string[]\n}) => {\n  const { isBusiness } = useAccountType(userData)\n\n  const { following, addFollow, removeFollow } = useFollow(\n    myFollowings || [],\n    userData._id.toString()\n  )\n\n  return (\n    <div\n      style={{ zIndex: 999 }}\n      className={classNames(\n        following ? 'translate-y-28' : 'translate-y-0',\n        'transform transition-all duration-500 fixed bottom-5 inset-x-0'\n      )}\n    >\n      <div className=\" min-h-20 max-h-32  overflow-hidden p-4 mx-auto bg-white border dark:border-gray-700 border-gray-200 shadow-xl rounded-lg dark:bg-gray-800  max-w-112\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex\">\n            <div className=\"mr-4 flex-shrink-0\">\n              <img\n                className=\"inline-block lg:h-12 lg:w-12 h-12 w-12 rounded-full ring-2 dark:ring-transparent ring-white\"\n                src={\n                  userData?.profilePicture\n                    ? userData?.profilePicture\n                    : avatarPlaceholder\n                }\n                alt={''}\n              />\n            </div>\n            <div>\n              <h4 className=\"text-lg text-gray-900 dark:text-white font-bold\">\n                {userData?.fullName}\n              </h4>\n              <p className=\" text-sm font-medium dark:text-gray-400 text-gray-600 \">\n                {isBusiness\n                  ? userData.business.name\n                  : userData.company.jobTitle}{' '}\n                <span className=\"text-xs dark:text-gray-500 text-gray-500 font-medium\">\n                  • {userData?.followers?.length || 0} followers{' '}\n                </span>\n              </p>\n            </div>\n          </div>\n          <div>\n            <Button\n              onClick={() => {\n                following\n                  ? removeFollow.mutate(userData?._id)\n                  : addFollow.mutate(userData?._id)\n              }}\n              label={following ? 'Unfollow' : 'Follow'}\n              gradient\n              size=\"lg\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BottomCard\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport DatePicker from 'components/atoms/DatePicker'\nimport Modal from 'components/atoms/Modal'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { network } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { isEmpty } from 'lodash'\nimport moment from 'moment'\nimport { nanoid } from 'nanoid'\nimport React, { useEffect, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\n\nconst KeyValue = ({ label, text }: { label: string; text: string }) => {\n  return (\n    <div id={label}>\n      <span className=\"title block text-gray-400 text-sm\">{label}</span>\n      <span\n        title={text}\n        className=\"truncate data block text-sm  text-gray-900 dark:text-white\"\n      >\n        {text}\n      </span>\n    </div>\n  )\n}\n\nconst AdditionalInfo = ({\n  secondary,\n  userData,\n  authUser,\n  refetch,\n}: {\n  secondary: boolean\n  authUser: boolean\n  userData: IParent\n  refetch: any\n}) => {\n  const [showModal, setShowModal] = useState(false)\n\n  const initialState: any = {\n    birthDate: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    github: '',\n  }\n\n  const [localFields, setLocalFields] = useState(initialState)\n\n  useEffect(() => {\n    if (authUser && !isEmpty(userData)) {\n      function getUrl(type: string) {\n        if (userData?.socialMedia) {\n          return userData?.socialMedia.find((s) => s.name === type).url\n        }\n      }\n      setLocalFields({\n        ...localFields,\n        birthDate: userData?.birthDate ? new Date(userData?.birthDate) : '',\n        twitter: getUrl('twitter') || '',\n        facebook: getUrl('facebook') || '',\n        instagram: getUrl('instagram') || '',\n        github: getUrl('github') || '',\n      })\n    }\n  }, [authUser, userData])\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n    } else {\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    }\n    setShowModal(false)\n  }\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const updateState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setUnsavedChanges(true)\n    setLocalFields({\n      ...localFields,\n      [name]: value,\n    })\n  }\n\n  const [saving, setSaving] = useState(false)\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n\n      let updatedData: IParent = {\n        ...userData,\n        birthDate: localFields?.birthDate,\n        socialMedia: [\n          localFields?.twitter && {\n            id: nanoid(24),\n            name: 'twitter',\n            url: localFields?.twitter,\n          },\n          localFields?.facebook && {\n            id: nanoid(24),\n            name: 'facebook',\n            url: localFields?.facebook,\n          },\n          localFields?.instagram && {\n            id: nanoid(24),\n            name: 'instagram',\n            url: localFields?.instagram,\n          },\n          localFields?.github && {\n            id: nanoid(24),\n            name: 'github',\n            url: localFields?.github,\n          },\n        ].filter(Boolean),\n      }\n\n      await network.post('/user/update', {\n        ...updatedData,\n      })\n\n      refetch()\n\n      // add data to local state\n      setShowModal(false)\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  return (\n    <>\n      {authUser && showModal && (\n        <Modal\n          onClose={onCancel}\n          open={showModal}\n          disableBackdropClose={false}\n          setOpen={() => setShowModal(false)}\n          header=\"Edit Additional Info\"\n        >\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8\">\n            <DatePicker\n              placeholder=\"1/1/2001\"\n              maxDate={new Date()}\n              additionanProps={{\n                peekNextMonth: true,\n                showMonthDropdown: true,\n                showYearDropdown: true,\n                dropdownMode: 'select',\n              }}\n              minDate={new Date().setFullYear(1930)}\n              label={'Add your birthdate'}\n              showMonthYearPicker={false}\n              date={localFields.birthDate}\n              setDate={(date: string) =>\n                setLocalFields({ ...localFields, birthDate: date })\n              }\n            />\n\n            <NormalFormInput\n              name=\"twitter\"\n              label=\"Add twitter handle id\"\n              placeholder=\"your twitter handle\"\n              value={localFields.twitter}\n              onChange={updateState}\n            />\n\n            <NormalFormInput\n              name=\"facebook\"\n              label=\"Add facebook handle id\"\n              placeholder=\"your facebook handle\"\n              value={localFields.facebook}\n              onChange={updateState}\n            />\n\n            <NormalFormInput\n              name=\"instagram\"\n              label=\"Add instagram handle id\"\n              placeholder=\"your instagram handle\"\n              value={localFields.instagram}\n              onChange={updateState}\n            />\n\n            <NormalFormInput\n              name=\"github\"\n              label=\"Add github handle id\"\n              placeholder=\"your github handle\"\n              value={localFields.github}\n              onChange={updateState}\n            />\n          </div>\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button gradient onClick={onSave} loading={saving} label=\"Save\" />\n          </div>\n        </Modal>\n      )}\n\n      <Card\n        withCardHeadings={\n          authUser && (\n            <>\n              <Button\n                secondary\n                invert\n                bgColor=\"gray\"\n                onClick={() => setShowModal(true)}\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        secondary={secondary}\n        cardTitle=\"Additional Info\"\n        content={\n          <div className=\"space-y-4\">\n            <KeyValue\n              label=\"Birthdate\"\n              text={moment(userData?.birthDate).format('LL')}\n            />\n            {userData?.socialMedia &&\n              userData?.socialMedia?.map((media) => (\n                <KeyValue key={media.id} label={media.name} text={media.url} />\n              ))}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default AdditionalInfo\n","const Loader = ({ text = 'loading' }: { text?: string }) => {\n  return (\n    <div className=\"text-center flex items-center justify-center text-gray-400\">\n      <svg\n        className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n      {text}\n    </div>\n  )\n}\n\nexport default Loader\n","import { classNames } from 'utils/classNames'\n\nconst Tabs = ({\n  tabs,\n  currentTab,\n  setCurrentTab,\n}: {\n  tabs: { name: string; count: number }[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-pink-500 sm:text-sm rounded-md\"\n          //@ts-ignore\n          defaultValue={tabs.find((tab) => tab?.current)?.name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab?.name}>{tab?.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"border-b border-gray-200 dark:border-gray-600\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  tab.name === currentTab\n                    ? 'border-pink-500 text-pink-600'\n                    : 'border-transparent text-gray-400  ',\n                  'whitespace-nowrap cursor-pointer flex py-4 px-1 border-b-2 font-medium text-sm'\n                )}\n                aria-current={tab.name === currentTab ? 'page' : undefined}\n              >\n                {tab.name}\n                {tab.count ? (\n                  <span\n                    className={classNames(\n                      tab.name === currentTab\n                        ? 'bg-pink-100 text-pink-600'\n                        : 'bg-gray-100 text-gray-900',\n                      'hidden ml-3 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block'\n                    )}\n                  >\n                    {tab.count}\n                  </span>\n                ) : null}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import Loader from 'components/atoms/animation/Loader'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport Tabs from 'components/atoms/Tabs'\nimport { links } from 'constants/Links'\nimport { useUserContext } from 'context/UserContext'\nimport { Form, Formik } from 'formik'\nimport { network } from 'helpers'\nimport { IParent, IRecommendation } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { useEffect, useState } from 'react'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport * as Yup from 'yup'\n\nconst Recommendations = ({\n  recommendation,\n\n  userData,\n  secondary = false,\n  iAmOwnerOfThisProfile = false,\n}: {\n  authUser: boolean\n  iAmOwnerOfThisProfile: boolean\n  secondary?: boolean\n  userData?: IParent\n  recommendation?: { received: IRecommendation[]; given: IRecommendation[] }\n}) => {\n  const [fetchReceived, setFetchReceived] = useState<any[]>([])\n\n  const [fetching, setFetching] = useState(false)\n\n  const [fetchGiven, setFetchGiven] = useState<any[]>([])\n\n  const fetchReceivedList = async () => {\n    setFetching(true)\n    try {\n      const config = {\n        users: map(recommendation?.received, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config)\n\n      const _r = map(data.data, (r, idx: number) => ({\n        text: recommendation?.received[idx]?.text || 'Not found',\n        user: r,\n      }))\n\n      setFetchReceived(_r)\n      // setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setFetching(false)\n    }\n  }\n\n  const fetchGivenList = async () => {\n    setFetching(true)\n\n    try {\n      const config = {\n        users: map(recommendation?.given, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config)\n\n      const _g = map(data.data, (g, idx: number) => ({\n        text: recommendation?.given[idx].text,\n        user: g,\n      }))\n\n      setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setFetching(false)\n    }\n  }\n  const [currentTab, setCurrentTab] = useState('Received')\n\n  useEffect(() => {\n    if (currentTab === 'Received') {\n      // @ts-ignore\n      if (\n        recommendation &&\n        recommendation?.received &&\n        recommendation?.received.length > 0 &&\n        fetchReceived.length === 0\n      ) {\n        fetchReceivedList()\n      }\n    }\n  }, [recommendation?.received, fetchReceived, currentTab])\n\n  useEffect(() => {\n    if (currentTab === 'Given') {\n      // @ts-ignore\n      if (\n        recommendation &&\n        recommendation?.given &&\n        recommendation?.given.length > 0 &&\n        fetchGiven.length === 0\n      ) {\n        fetchGivenList()\n      }\n    }\n  }, [recommendation?.given, fetchReceived, currentTab])\n\n  const tabs = [\n    {\n      name: 'Received',\n      count: recommendation?.received ? recommendation.received.length : 0,\n    },\n    {\n      name: 'Given',\n      count: recommendation?.given ? recommendation.given.length : 0,\n    },\n  ]\n\n  const [showModal, setShowModal] = useState(false)\n  const onCancel = () => setShowModal(false)\n\n  const initialState = { recommendation: '' }\n  const validationSchema = Yup.object({\n    recommendation: Yup.string().min(10).max(250),\n  })\n\n  const { setValues } = useUserContext()\n\n  const onSave = async (values: any) => {\n    setSaving(true)\n    try {\n      if (values.recommendation) {\n        const config = { text: values.recommendation }\n        await network.post(`/user/giveRecommendation/${userData?._id}`, config)\n        onCancel()\n\n        if (!iAmOwnerOfThisProfile) {\n          setValues({\n            ...userData,\n            recommendation: {\n              received: [\n                // @ts-ignore\n                ...userData?.recommendation?.received,\n                { text: values.recommendation, userId: null },\n              ],\n              // @ts-ignore\n              given: [...userData?.recommendation?.given],\n            },\n          })\n          fetchReceivedList()\n        }\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const [saving, setSaving] = useState(false)\n\n  return (\n    <>\n      <Modal\n        open={showModal}\n        onClose={onCancel}\n        setOpen={setShowModal}\n        header={'Add recommendation'}\n      >\n        <div className=\"\">\n          <div className=\"overflow-y-auto min-w-132 min-h-32  custom-scroll-mini darker mt-4 px-1\">\n            <Formik\n              onSubmit={onSave}\n              initialValues={initialState}\n              validationSchema={validationSchema}\n            >\n              <Form className=\"py-2\">\n                <FormInput\n                  textarea\n                  placeholder=\"Add your recommendation\"\n                  name=\"recommendation\"\n                  id=\"recommendation\"\n                />\n                <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    loading={saving}\n                    disabled={saving}\n                    onClick={onSave}\n                    type=\"submit\"\n                    label=\"Save\"\n                  />\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n      <Card\n        secondary={secondary}\n        cardTitle=\"Recommendations\"\n        withCardHeadings={\n          <>\n            <Tabs\n              tabs={tabs}\n              currentTab={currentTab}\n              setCurrentTab={setCurrentTab}\n            />\n          </>\n        }\n        content={\n          <div className=\"grid mt-6  sm:grid-cols-1 md:grid-cols-1 space-y-12\">\n            {currentTab === 'Received' &&\n              (fetching ? (\n                <Loader />\n              ) : fetchReceived && fetchReceived.length > 0 ? (\n                map(fetchReceived, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 dark:text-gray-400 flex items-center text-right italic\">\n                        By,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          <a\n                            href={links.getProfile(recom.user)}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            {recom?.user?.fullName}\n                          </a>\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : avatarPlaceholder\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  {iAmOwnerOfThisProfile ? (\n                    <EmptyState\n                      title=\"No recommendations recieved yet\"\n                      subtitle=\"All recieved recommendations will show here \"\n                      iconUrl={'/referral.png'}\n                    />\n                  ) : (\n                    <Button\n                      label=\"Add recommendation\"\n                      className=\"flex\"\n                      gradient\n                      onClick={() => setShowModal(true)}\n                    />\n                  )}\n                </div>\n              ))}\n            {currentTab === 'Given' &&\n              (fetching ? (\n                <Loader />\n              ) : fetchGiven && fetchGiven.length > 0 ? (\n                map(fetchGiven, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 flex items-center dark:text-gray-400 text-right italic\">\n                        To,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          {recom?.user?.fullName}\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : avatarPlaceholder\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  <EmptyState\n                    title=\"No recommendations given yet\"\n                    subtitle=\"All given recommendations will show here \"\n                    iconUrl={'/referral.png'}\n                  />\n                </div>\n              ))}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Recommendations\n","import NormalFormInput from 'components/atoms/NormalFormInput'\n\nimport { IAward, IModalProps } from 'interfaces/UniversalInterface'\nimport { isEmpty, map, remove } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { nanoid } from 'nanoid'\nimport { getAccessToken, network } from 'helpers'\nimport { wait } from 'utils/wait'\nimport Button from 'components/atoms/Button'\n\nconst initialState: {\n  awards: IAward[]\n  awardName: string\n  awardFor: string\n} = {\n  awards: [],\n  awardName: '',\n  awardFor: '',\n}\n\nconst AwardsModal = ({\n  userData,\n  onCancel,\n  setUnsavedChanges,\n  setValues,\n  setShowUnsaveModal,\n}: IModalProps) => {\n  const { background } = userData || {}\n  const { awards = [] } = background || {}\n  const [localFields, setLocalFields] = useState(initialState)\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      setLocalFields((prev) => ({ ...prev, awards: [...awards] }))\n    }\n  }, [])\n\n  const addAward = () => {\n    const newAward: IAward = {\n      id: nanoid(6),\n      awardName: localFields.awardName,\n      awardFor: localFields.awardFor,\n    }\n    setLocalFields({\n      ...localFields,\n      awards: [...localFields.awards, newAward],\n      awardName: '',\n      awardFor: '',\n    })\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setLocalFields({ ...localFields, [name]: value })\n  }\n  const token = getAccessToken()\n\n  const [saving, setSaving] = useState(false)\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n\n      let updatedData = {\n        ...userData,\n\n        background: {\n          ...background,\n          awards:\n            localFields.awards && localFields.awards.length > 0\n              ? [...localFields.awards]\n              : awards,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      onCancel()\n      setShowUnsaveModal(false)\n      setUnsavedChanges(false)\n      wait(500).then(() => {\n        setLocalFields({ ...initialState })\n      })\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onAwardRemove = (id?: string) => {\n    setUnsavedChanges(true)\n    remove(localFields.awards, (item) => item.id === id)\n    setLocalFields({ ...localFields })\n  }\n\n  return (\n    <div>\n      <div className=\"overflow-y-auto min-w-132  custom-scroll-mini darker my-4\">\n        {localFields.awards && localFields.awards.length > 0 && (\n          <ol className=\"space-y-6 list-disc p-4  \">\n            {map(localFields.awards, (award, awardIdx) => (\n              <li\n                className=\"flex items-center relative on-hover-container text-gray-900 dark:text-white  cursor-pointer text-left\"\n                key={award.id}\n              >\n                <div className=\"w-96\">\n                  <span className=\"block truncate text-gray-900 dark:text-white text-lg font-medium\">\n                    {award.awardName}\n                  </span>\n                  <span className=\"block text-gray-600 dark:text-gray-500 text-sm font-medium\">\n                    {award.awardFor}\n                  </span>\n                </div>\n\n                <span\n                  onClick={() => onAwardRemove(award.id)}\n                  className=\"absolute on-hover-item pr-4 right-0\"\n                >\n                  <BiTrashAlt className=\"hover:bg-gray-700 p-2 h-8 w-8  rounded-md text-red-500\" />\n                </span>\n              </li>\n            ))}\n          </ol>\n        )}\n      </div>\n      <div className=\"\">\n        <h3 className=\"text-gray-900 dark:text-gray-500 mb-2\">New Award:</h3>\n        <div className=\"flex border border-gray-200 dark:border-gray-700 p-4 rounded-md items-center flex-col space-y-4\">\n          <NormalFormInput\n            placeholder=\"Enter award name\"\n            value={localFields.awardName}\n            onChange={onChange}\n            fullWidth\n            name=\"awardName\"\n          />\n          <NormalFormInput\n            placeholder=\"What's this award for?\"\n            value={localFields.awardFor}\n            onChange={onChange}\n            fullWidth\n            name=\"awardFor\"\n          />\n          <Button\n            onClick={addAward}\n            size=\"sm\"\n            gradient\n            label=\"Add\"\n            disabled={\n              localFields.awardName.length <= 3 ||\n              localFields.awardFor.length <= 3\n            }\n            fullWidth\n          />\n        </div>\n      </div>\n      <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n        <Button\n          gradient\n          label=\"Save\"\n          onClick={onSave}\n          disabled={saving}\n          loading={saving}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default AwardsModal\n","import { IEducation, IModalProps } from 'interfaces/UniversalInterface'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { nanoid } from 'nanoid'\nimport { getAccessToken, network } from 'helpers'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { isEmpty, map, remove, update } from 'lodash'\nimport Button from 'components/atoms/Button'\nimport { wait } from 'utils/wait'\nimport DatePicker from 'components/atoms/DatePicker'\nimport Divider from 'components/atoms/Divider'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport TextButton from 'components/atoms/TextButton'\n\nconst initialState: {\n  education: IEducation[]\n  from: string\n  to: string\n  degree: string\n  name: string\n} = {\n  education: [],\n  from: '',\n  to: '',\n  degree: '',\n  name: '',\n}\n\nconst EducationModal = ({\n  userData,\n  onCancel,\n  setUnsavedChanges,\n  setValues,\n  setShowUnsaveModal,\n}: IModalProps) => {\n  const { background } = userData || {}\n  const { education = [] } = background || {}\n\n  const [localFields, setLocalFields] = useState(initialState)\n\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      setLocalFields((prev) => ({\n        ...prev,\n        education: [...education],\n      }))\n    }\n  }, [])\n\n  const addEducation = () => {\n    const newEdObj: IEducation = {\n      id: nanoid(6),\n      from: localFields.from,\n      to: localFields.to,\n      degree: localFields.degree,\n      name: localFields.name,\n    }\n    setLocalFields({\n      ...initialState,\n      education: [...localFields.education, newEdObj],\n    })\n  }\n  const showContent: boolean =\n    localFields.education && localFields.education.length > 0\n\n  const [saving, setSaving] = useState(false)\n\n  const token = getAccessToken()\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n\n      let updatedData = {\n        ...userData,\n\n        background: {\n          ...background,\n          education:\n            localFields.education && localFields.education.length > 0\n              ? [...localFields.education]\n              : education,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      onCancel()\n      setUnsavedChanges(false)\n      setShowUnsaveModal(false)\n      wait(500).then(() => {\n        setLocalFields({ ...initialState })\n      })\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onEducationRemove = (id: string) => {\n    setUnsavedChanges(true)\n    remove(localFields.education, (item) => item.id === id)\n    setLocalFields({ ...localFields })\n  }\n\n  const onEducationSelectUpdate = (\n    fieldName: string,\n    name: string,\n    idx: number\n  ) => {\n    setUnsavedChanges(true)\n    update(localFields.education[idx], `${fieldName}`, () => name)\n    setLocalFields({ ...localFields })\n  }\n  const getValue = (fieldName: string, idx: number): string => {\n    // @ts-ignore\n    return localFields.education[idx][fieldName]\n  }\n\n  const onEducationFieldUpdate = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => {\n    const { value, name } = e.target\n    setUnsavedChanges(true)\n    update(localFields.education[idx], `${name}`, () => value)\n    setLocalFields({ ...localFields })\n  }\n\n  return (\n    <div>\n      <div>\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-4\">\n          {localFields.education && localFields.education.length > 0 ? (\n            <>\n              {map(localFields.education, (_education, idx: number) => (\n                <Fragment key={idx}>\n                  <NormalFormInput\n                    placeholder=\"Institution name\"\n                    required\n                    value={getValue('name', idx)}\n                    name=\"name\"\n                    label={'Institution name'}\n                    onChange={(e) => onEducationFieldUpdate(e, idx)}\n                  />\n                  <NormalFormInput\n                    name=\"degree\"\n                    required\n                    value={getValue('degree', idx)}\n                    label={'Degree'}\n                    placeholder=\"Degree\"\n                    onChange={(e) => onEducationFieldUpdate(e, idx)}\n                  />\n\n                  <DatePicker\n                    required\n                    placeholder=\"Started from\"\n                    label={'Join date'}\n                    date={getValue('joinDate', idx)}\n                    setDate={(date: string) =>\n                      onEducationSelectUpdate('joinDate', date, idx)\n                    }\n                  />\n                  <DatePicker\n                    required\n                    placeholder=\"Left on\"\n                    label={'Leave date'}\n                    date={getValue('leaveDate', idx)}\n                    setDate={(date: string) =>\n                      onEducationSelectUpdate('leaveDate', date, idx)\n                    }\n                  />\n\n                  <div className=\"col-span-4 \">\n                    <Divider\n                      className=\"cursor-pointer hover:text-red-600 text-red-500\"\n                      withButton\n                      Icon={BiTrashAlt}\n                      onBtnClick={() => onEducationRemove(_education.id)}\n                    />\n                  </div>\n                </Fragment>\n              ))}\n            </>\n          ) : null}\n        </div>\n        <div className=\" flex items-center justify-start\">\n          <TextButton\n            text=\"Add new education\"\n            className=\"mx-auto\"\n            onClick={addEducation}\n          />\n        </div>\n      </div>\n\n      <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n        <Button\n          gradient\n          loading={saving}\n          disabled={saving}\n          onClick={onSave}\n          hidden={!showContent}\n          label=\"Save\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EducationModal\n","import NormalFormInput from 'components/atoms/NormalFormInput'\nimport { IExperience, IModalProps } from 'interfaces/UniversalInterface'\nimport { isEmpty, map, remove, update } from 'lodash'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { nanoid } from 'nanoid'\nimport Divider from 'components/atoms/Divider'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { wait } from 'utils/wait'\nimport { getAccessToken, network } from 'helpers'\nimport Button from 'components/atoms/Button'\nimport DatePicker from 'components/atoms/DatePicker'\nimport TextButton from 'components/atoms/TextButton'\n\nconst initialState: { experiences: IExperience[] } = {\n  experiences: [],\n}\n\nconst ExperienceTwoModal = ({\n  userData,\n  onCancel,\n  setValues,\n  setUnsavedChanges,\n  setShowUnsaveModal,\n}: IModalProps) => {\n  const [localFields, setLocalFields] = useState(initialState)\n\n  const { background } = userData || {}\n  const { experiences = [] } = background || {}\n\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      setLocalFields({\n        experiences: [...experiences].map((exp) => ({\n          ...exp,\n          joinDate: new Date(exp.joinDate),\n          leaveDate: new Date(exp.leaveDate),\n        })),\n      })\n    }\n  }, [])\n  const addNewExperience = () => {\n    const newExperience: any = {\n      id: nanoid(6),\n      jobTitle: '',\n      companyName: '',\n      joinDate: '',\n      leaveDate: '',\n      description: '',\n    }\n    setLocalFields({\n      ...localFields,\n      experiences: [...localFields.experiences, newExperience],\n    })\n  }\n\n  const onExperienceFieldUpdate = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => {\n    const { value, id } = e.target\n    setUnsavedChanges(true)\n    update(localFields.experiences[idx], `${id}`, () => value)\n    setLocalFields({ ...localFields })\n  }\n\n  const onExperienceSelectUpdate = (\n    fieldName: string,\n    name: string,\n    idx: number\n  ) => {\n    setUnsavedChanges(true)\n    update(localFields.experiences[idx], `${fieldName}`, () => name)\n    setLocalFields({ ...localFields })\n  }\n\n  const getValue = (fieldName: string, idx: number): string => {\n    // @ts-ignore\n    return localFields.experiences[idx][fieldName]\n  }\n  const token = getAccessToken()\n\n  const onExperienceRemove = (id: string) => {\n    setUnsavedChanges(true)\n    remove(localFields.experiences, (item) => item.id === id)\n    setLocalFields({ ...localFields })\n  }\n  const [saving, setSaving] = useState(false)\n  const onSave = async () => {\n    try {\n      setSaving(true)\n      const { experiences } = localFields\n\n      let updatedData = {\n        ...userData,\n\n        background: {\n          ...background,\n          experiences:\n            localFields.experiences && localFields.experiences.length > 0\n              ? [...localFields.experiences]\n              : experiences,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      onCancel()\n      setShowUnsaveModal(false)\n      setUnsavedChanges(false)\n      wait(500).then(() => {\n        setLocalFields({ ...initialState })\n      })\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const showContent: boolean =\n    localFields.experiences && localFields.experiences.length > 0\n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-4\">\n          {showContent ? (\n            <>\n              {map(localFields.experiences, (experience, idx: number) => (\n                <Fragment key={idx}>\n                  <NormalFormInput\n                    id={`jobTitle`}\n                    required\n                    name=\"jobTitle\"\n                    value={getValue('jobTitle', idx)}\n                    label={'Job title'}\n                    placeholder=\"What was/is your role in the company? \"\n                    onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                  />\n                  <NormalFormInput\n                    id=\"companyName\"\n                    required\n                    name=\"companyName\"\n                    value={getValue('companyName', idx)}\n                    label={'Company name'}\n                    placeholder=\"What was/is the company name? \"\n                    onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                  />\n\n                  <DatePicker\n                    required\n                    placeholder=\"Started from\"\n                    label={'Join date'}\n                    date={getValue('joinDate', idx)}\n                    setDate={(date: string) =>\n                      onExperienceSelectUpdate('joinDate', date, idx)\n                    }\n                  />\n                  <DatePicker\n                    required\n                    placeholder=\"Left on\"\n                    label={'Leave date'}\n                    date={getValue('leaveDate', idx)}\n                    setDate={(date: string) =>\n                      onExperienceSelectUpdate('leaveDate', date, idx)\n                    }\n                  />\n\n                  <div className=\"col-span-4\">\n                    <NormalFormInput\n                      id=\"description\"\n                      textarea\n                      value={getValue('description', idx)}\n                      name=\"description\"\n                      label={'Description'}\n                      placeholder=\"Add a short description\"\n                      onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                    />\n                  </div>\n                  <div className=\"col-span-4\">\n                    <Divider\n                      className=\"cursor-pointer hover:text-red-600 text-red-500\"\n                      withButton\n                      Icon={BiTrashAlt}\n                      onBtnClick={() => onExperienceRemove(experience.id)}\n                    />\n                  </div>\n                </Fragment>\n              ))}\n            </>\n          ) : null}\n        </div>\n        <div className=\" flex items-center justify-start\">\n          <TextButton\n            text=\"Add new experience\"\n            className=\"mx-auto\"\n            onClick={addNewExperience}\n          />\n        </div>\n      </div>\n      <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n        <Button\n          gradient\n          loading={saving}\n          disabled={saving}\n          onClick={onSave}\n          hidden={!showContent}\n          label=\"Save\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ExperienceTwoModal\n","import { ILanguage, IModalProps } from 'interfaces/UniversalInterface'\nimport React, { useEffect, useState } from 'react'\nimport { languageKnownLevel } from 'values/values'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { nanoid } from 'nanoid'\nimport { getAccessToken, network } from 'helpers'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { isEmpty, map, remove } from 'lodash'\nimport Button from 'components/atoms/Button'\nimport { wait } from 'utils/wait'\nimport Selector from 'components/atoms/Selector'\n\nconst initialState: {\n  languages: ILanguage[]\n  langName: string\n  langLevel: string\n} = {\n  languages: [],\n  langName: '',\n  langLevel: languageKnownLevel[1].name,\n}\n\nconst LanguagesModal = ({\n  userData,\n  onCancel,\n  setUnsavedChanges,\n  setShowUnsaveModal,\n  setValues,\n}: IModalProps) => {\n  const { background } = userData || {}\n  const { languages = [] } = background || {}\n\n  const [localFields, setLocalFields] = useState(initialState)\n\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      setLocalFields((prev) => ({\n        ...prev,\n        languages: [...languages],\n        langLevel: languageKnownLevel[1].name,\n      }))\n    }\n  }, [])\n\n  const addLanguage = () => {\n    const newLangauge: ILanguage = {\n      id: nanoid(6),\n      langName: localFields.langName,\n      langLevel: localFields.langLevel,\n    }\n    setLocalFields({\n      ...localFields,\n      languages: [...localFields.languages, newLangauge],\n      langName: '',\n      langLevel: '',\n    })\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setLocalFields({ ...localFields, [name]: value })\n  }\n\n  const [saving, setSaving] = useState(false)\n  const token = getAccessToken()\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n\n      let updatedData = {\n        ...userData,\n\n        background: {\n          ...background,\n          languages:\n            localFields.languages && localFields.languages.length > 0\n              ? [...localFields.languages]\n              : languages,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      onCancel()\n      setUnsavedChanges(false)\n      setShowUnsaveModal(false)\n      wait(500).then(() => {\n        setLocalFields({ ...initialState })\n      })\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onLanguageRemove = (id: string) => {\n    setUnsavedChanges(true)\n    remove(localFields.languages, (item) => item.id === id)\n    setLocalFields({ ...localFields })\n  }\n\n  const onLanguageLevelUpdate = (item: any) => {\n    setUnsavedChanges(true)\n\n    setLocalFields({ ...localFields, langLevel: item.name })\n  }\n  return (\n    <div>\n      <div className=\" min-w-132  custom-scroll-mini darker my-4\">\n        {localFields?.languages?.length > 0 && (\n          <ol className=\"space-y-6 list-disc p-4 \">\n            {map(localFields.languages, (lang) => (\n              <li\n                className=\"flex items-center on-hover-container relative text-gray-900 dark:text-white  cursor-pointer text-left\"\n                key={lang.id}\n              >\n                <div className=\"\">\n                  <span className=\"block text-gray-900 dark:text-white text-lg font-medium\">\n                    {lang.langName}\n                  </span>\n                  <span className=\"block text-gray-600 dark:text-gray-500 text-sm font-medium\">\n                    {lang.langLevel}\n                  </span>\n                </div>\n\n                <span\n                  onClick={() => onLanguageRemove(lang.id)}\n                  className=\"absolute on-hover-item  pr-4 right-0\"\n                >\n                  <BiTrashAlt className=\"hover:bg-gray-700 p-2 h-8 w-8  rounded-md text-red-500\" />\n                </span>\n              </li>\n            ))}\n          </ol>\n        )}\n      </div>\n\n      <div className=\"flex border border-gray-200 dark:border-gray-700 justify-start p-4 rounded-md  items-center  gap-2\">\n        <NormalFormInput\n          placeholder=\"Enter new language\"\n          value={localFields.langName}\n          onChange={onChange}\n          name=\"langName\"\n          fullWidth\n        />\n\n        <Selector\n          list={languageKnownLevel}\n          placeholder=\"Select level\"\n          onSelect={onLanguageLevelUpdate}\n          selectedItem={localFields.langLevel}\n        />\n\n        <Button\n          onClick={addLanguage}\n          disabled={localFields.langName.length <= 3 || !localFields.langLevel}\n          size=\"sm\"\n          gradient\n          label=\"Add\"\n        />\n      </div>\n\n      <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n        <Button\n          disabled={saving}\n          loading={saving}\n          onClick={onSave}\n          gradient\n          label=\"Save\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default LanguagesModal\n","import Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport Selector from 'components/atoms/Selector'\nimport { network } from 'helpers'\nimport {\n  IModalProps,\n  ISkill,\n  SkillStrength,\n} from 'interfaces/UniversalInterface'\nimport { isEmpty, map, remove } from 'lodash'\nimport { nanoid } from 'nanoid'\nimport React, { useEffect, useState } from 'react'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { wait } from 'utils/wait'\nimport { skillsStrength } from 'values/values'\n\nconst initialState: {\n  skills: ISkill[]\n  skillText: string\n  skillStrength: SkillStrength\n} = {\n  skills: [],\n  skillText: '',\n  skillStrength: 'Average',\n}\n\nconst SkillsModal = ({\n  userData,\n  onCancel,\n  setUnsavedChanges,\n  setValues,\n  setShowUnsaveModal,\n}: IModalProps) => {\n  const { background } = userData || {}\n  const { skills = [] } = background || {}\n\n  const [localFields, setLocalFields] = useState({ ...initialState })\n\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      setLocalFields({\n        skillText: '',\n        skills: [...skills],\n        skillStrength: 'Average',\n      })\n    }\n  }, [])\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUnsavedChanges(true)\n    const { name, value } = e.target\n    setLocalFields({ ...localFields, [name]: value })\n  }\n  const onStrengthChange = (item: any) => {\n    setUnsavedChanges(true)\n\n    setLocalFields({ ...localFields, skillStrength: item.name })\n  }\n\n  const onSkillAdd = () => {\n    const skill = {\n      id: nanoid(6),\n      name: localFields.skillText,\n      strength: localFields.skillStrength,\n    }\n    setLocalFields({\n      ...localFields,\n      skills: [...localFields.skills, skill],\n      skillText: '',\n      skillStrength: 'Average',\n    })\n  }\n\n  const [saving, setSaving] = useState(false)\n  const onSave = async () => {\n    try {\n      setSaving(true)\n\n      let updatedData = {\n        ...userData,\n\n        background: {\n          ...background,\n          skills:\n            localFields.skills && localFields.skills.length > 0\n              ? [...localFields.skills]\n              : skills,\n        },\n      }\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post('/user/update', {\n        ...updatedData,\n      })\n\n      // add data to local state\n      onCancel()\n      setUnsavedChanges(false)\n      setShowUnsaveModal(false)\n      wait(500).then(() => {\n        setLocalFields({ ...initialState })\n      })\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onSkillRemove = (id: string) => {\n    setUnsavedChanges(true)\n    remove(localFields.skills, (item) => item.id === id)\n    setLocalFields({ ...localFields })\n  }\n\n  return (\n    <div className=\"min-h-156 relative min-w-160\">\n      <div className=\"my-2\">\n        <div className=\"overflow-y-auto max-h-112  custom-scroll-mini darker\">\n          {localFields.skills && localFields.skills.length > 0 && (\n            <ul className=\"gap-6 grid grid-cols-3 list-disc py-4 \">\n              {map(localFields.skills, (skill, idx: number) => {\n                return (\n                  <li\n                    className=\"border border-gray-200 rounded-lg dark:border-gray-700 text-gray-900 on-hover-container p-4  relative dark:text-white flex items-center  cursor-pointer text-left\"\n                    key={skill.name + idx}\n                  >\n                    {skill.name}{' '}\n                    <span className=\"text-sm text-gray-400 dark:text-gray-500 ml-2\">\n                      ({skill?.strength || 'Average'})\n                    </span>\n                    <span\n                      onClick={() => onSkillRemove(skill.id)}\n                      className=\"absolute on-hover-item pr-4 right-0\"\n                    >\n                      <BiTrashAlt className=\"hover:bg-gray-600 p-2 h-8 w-8  rounded-md text-red-500\" />\n                    </span>\n                  </li>\n                )\n              })}\n            </ul>\n          )}\n        </div>\n      </div>\n      <div className=\"absolute bottom-0 right-0 left-0\">\n        <div className=\"divider dark:divider mx-4 \">\n          <h3 className=\"text-gray-900 dark:text-gray-500 mb-2\">New Skill:</h3>\n          <div className=\"flex items-center space-x-2\">\n            <NormalFormInput\n              name=\"skillText\"\n              placeholder=\"Enter new skill\"\n              value={localFields.skillText}\n              onChange={onChange}\n            />\n            <Selector\n              list={skillsStrength}\n              placeholder=\"Select strength\"\n              onSelect={onStrengthChange}\n              selectedItem={localFields.skillStrength}\n            />\n\n            <Button\n              onClick={onSkillAdd}\n              disabled={localFields.skillText.length <= 3}\n              gradient\n              label=\"Add\"\n            />\n          </div>\n        </div>\n        <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n          <Button\n            gradient\n            loading={saving}\n            disabled={saving}\n            onClick={onSave}\n            label=\"Save\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SkillsModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport { IBlockProps } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport { AWARDS } from 'state/Redux/constants'\n\nconst Awards = ({ userData, setShowModal, showEditOption }: IBlockProps) => {\n  const { background } = userData || {}\n  const { awards = [] } = background || {}\n  const showContent: boolean = awards && awards.length > 0\n  return (\n    <>\n      <Card\n        secondary\n        id=\"awards\"\n        withCardHeadings={\n          showContent &&\n          showEditOption && (\n            <>\n              <Button\n                secondary\n                className=\"mr-3\"\n                onClick={() => setShowModal({ type: AWARDS, show: true })}\n                invert\n                bgColor=\"gray\"\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        className=\"mt-6 sm:mt-0 ml-0\"\n        cardTitle=\"Awards\"\n        content={\n          <div className=\"min-h-64 overflow-y-auto  custom-scroll-mini\">\n            {showContent ? (\n              <ol className=\"space-y-6 list-disc px-8 py-4 \">\n                {map(awards, (award, awardIdx) => (\n                  <li\n                    className=\"text-gray-900 dark:text-white  cursor-pointer text-left\"\n                    key={awardIdx}\n                  >\n                    <span className=\"block text-gray-900 dark:text-white text-lg font-medium\">\n                      {award.awardName}\n                    </span>\n                    <span className=\"block text-gray-600 dark:text-gray-500 text-sm font-medium\">\n                      {award.awardFor}\n                    </span>\n                  </li>\n                ))}\n              </ol>\n            ) : (\n              <EmptyState\n                title=\"No awards\"\n                subtitle=\"Showcase your awards here\"\n                btnText=\"Add awards\"\n                showEditOption={showEditOption}\n                BtnIcon={PlusIcon}\n                onBtnClick={() => {\n                  setShowModal({ type: AWARDS, show: true })\n                }}\n                iconUrl={'/trophy.png'}\n              />\n            )}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Awards\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Modal from 'components/atoms/Modal'\nimport { useNotifications } from 'context/NotificationContext'\nimport { useUserContext } from 'context/UserContext'\nimport { network } from 'helpers'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { noop } from 'lodash'\nimport React, { useState } from 'react'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst Cover = ({\n  userData,\n  authUser,\n}: {\n  authUser: boolean\n  userData?: IParent\n}) => {\n  const [saving, setSaving] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowModal(true)\n  }\n  const { setValues } = useUserContext()\n\n  const { setNotification } = useNotifications()\n\n  const onSave = async () => {\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...userData,\n          profilePicture: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post('/user/update', {\n          ...updatedData,\n        })\n        setShowModal(false)\n\n        setNotification({\n          show: true,\n          title: `Profile photo changed successfully`,\n        })\n      }\n    } catch (error) {\n      console.error(error.message)\n    }\n    setSaving(false)\n  }\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const profileImageSelectorRef = React.useRef()\n\n  const isBusiness = useAccountType(userData)\n  const { location } = userData\n\n  return (\n    <div className=\"exportContent\">\n      {authUser && (\n        <Modal\n          header={`Profile Photo`}\n          disableBackdropClose\n          open={showModal}\n          setOpen={setShowModal}\n        >\n          <div className={`sm:min-w-64 sm:min-h-64`}>\n            <div\n              className={`relative min-h-48 flex items-center justify-center`}\n            >\n              {_image && (\n                <img\n                  className={`shadow-xl md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full`}\n                  // @ts-ignore\n                  src={URL.createObjectURL(_image)}\n                  alt=\"People working on laptops\"\n                />\n              )}\n            </div>\n            <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={saving}\n                disabled={saving}\n                onClick={onSave}\n                label=\"Save\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      <Card\n        content={\n          <div className=\"flex items-center justify-start\">\n            <div className=\"flex-grow\">\n              <span className=\"sr-only\">13RMS</span>\n              <img\n                onClick={() => (authUser ? showFileExplorerForProfile() : noop)}\n                className=\"border-gradient border-transparent border-4 h-36 w-36 sm:h-40 sm:w-40 cursor-pointer rounded-full shadow-xl\"\n                src={\n                  userData?.profilePicture\n                    ? userData?.profilePicture\n                    : avatarPlaceholder\n                }\n                alt=\"\"\n              />\n            </div>\n            {/* HIDDEN IMAGE INPUT */}\n            <input\n              // @ts-ignore\n              ref={profileImageSelectorRef}\n              className=\"hidden\"\n              type=\"file\"\n              onChange={(e) => (authUser ? onImageSelect(e) : noop)}\n              accept=\"image/x-png,image/jpeg\"\n            />\n            <div className=\"ml-4 max-w-256 border-l border-gray-200 dark:border-gray-600\">\n              <div className=\"overflow-hidden\">\n                <div className=\" px-4 pb-5 sm:px-6\">\n                  {isBusiness ? (\n                    <div className=\"dark:text-white text-gray-900 text-base font-medium border-b border-gray-200 dark:border-gray-600 pb-4 \">\n                      {userData?.business?.name}\n                      <span className=\"ml-2 dark:text-gray-400 text-gray-500 text-xs\">\n                        {userData?.business?.name ? '- ' : ''}\n                        {location?.address}, {location?.city}, {location?.state}{' '}\n                        {location?.country}\n                      </span>\n                    </div>\n                  ) : (\n                    <div className=\"dark:text-white text-gray-900 text-base font-medium border-b border-gray-200 dark:border-gray-600 pb-4 \">\n                      {userData?.company?.jobTitle}\n                      <span className=\"ml-2 dark:text-gray-400 text-gray-500 text-xs\">\n                        {userData?.company?.jobTitle ? '- ' : ''}\n                        {userData?.company?.companyName ||\n                          userData?.company?.currentCompany}\n                      </span>\n                    </div>\n                  )}\n\n                  <dl className=\"pt-4 grid grid-cols-1 gap-x-2 gap-y-8 sm:grid-cols-2\">\n                    <div className=\"sm:col-span-1\">\n                      <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                        Full name\n                      </dt>\n                      <dd\n                        title={userData?.fullName}\n                        className=\"mt-1 text-sm text-gray-900 dark:text-white\"\n                      >\n                        {userData?.fullName}\n                      </dd>\n                    </div>\n\n                    <div className=\"sm:col-span-1\">\n                      <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                        Email address\n                      </dt>\n                      <dd\n                        title={userData?.email}\n                        className=\"mt-1 text-sm max-w-56 break-words  text-gray-900 dark:text-white\"\n                      >\n                        {userData?.email}\n                      </dd>\n                    </div>\n                    {isBusiness\n                      ? userData?.business?.typeOfBusiness && (\n                          <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                              Business type\n                            </dt>\n                            <dd\n                              title={userData?.business?.typeOfBusiness}\n                              className=\"mt-1 text-sm text-gray-900 dark:text-white\"\n                            >\n                              {userData?.business?.typeOfBusiness}\n                            </dd>\n                          </div>\n                        )\n                      : (userData?.company?.companyName ||\n                          userData?.company?.currentCompany) && (\n                          <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                              Company\n                            </dt>\n                            <dd\n                              title={\n                                userData?.company?.companyName ||\n                                userData?.company?.currentCompany\n                              }\n                              className=\"mt-1 text-sm text-gray-900 dark:text-white\"\n                            >\n                              {userData?.company?.companyName ||\n                                userData?.company?.currentCompany}\n                            </dd>\n                          </div>\n                        )}\n                    {isBusiness\n                      ? userData?.business?.relationshipToBusiness && (\n                          <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                              Relationship to business\n                            </dt>\n                            <div\n                              title={userData?.business?.relationshipToBusiness}\n                              className=\"mt-1 text-sm text-gray-900 dark:text-white\"\n                            >\n                              {userData?.business?.relationshipToBusiness}\n                            </div>\n                          </div>\n                        )\n                      : (userData?.location?.address ||\n                          userData?.location?.livesIn) && (\n                          <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n                              Company address\n                            </dt>\n                            <dd\n                              title={\n                                userData?.location?.address ||\n                                userData?.location?.livesIn\n                              }\n                              className=\"mt-1 text-sm text-gray-900 dark:text-white\"\n                            >\n                              {userData?.location?.address ||\n                                userData?.location?.livesIn}\n                            </dd>\n                          </div>\n                        )}\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n      />\n    </div>\n  )\n}\n\nexport default Cover\n","import Card from 'components/atoms/Card'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { IBlockProps } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport Button from 'components/atoms/Button'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport { EDUCATION } from 'state/Redux/constants'\n\nconst Education = ({ userData, showEditOption, setShowModal }: IBlockProps) => {\n  const { background } = userData || {}\n  const { education = [] } = background || {}\n\n  return (\n    <>\n      <Card\n        secondary\n        id=\"education\"\n        cardTitle=\"Education\"\n        withCardHeadings={\n          education &&\n          education.length > 0 &&\n          showEditOption && (\n            <>\n              <Button\n                secondary\n                className=\"mr-3\"\n                invert\n                bgColor=\"gray\"\n                onClick={() => setShowModal({ type: EDUCATION, show: true })}\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        content={\n          <div>\n            {education && education.length > 0 ? (\n              <ul className=\"space-y-12 pt-6\">\n                {map(education, (ed, idx) => (\n                  <li key={idx} className=\"flex items-start space-x-4\">\n                    <div className=\"flex items-center mt-2 w-36\">\n                      <span className=\"block text-gray-500 text-sm mr-4 dark:text-gray-400\">\n                        2017 - 2021\n                      </span>\n                      <span className=\"block rounded-full ml-4  h-3 w-3 border-2 border-gray-300 \" />\n                    </div>\n                    <div>\n                      <h4 className=\"text-xl text-gray-900 dark:text-white font-medium\">\n                        {ed.name}\n                      </h4>\n                      <h6 className=\"text-sm text-gray-400 dark:text-gray-400\">\n                        {ed.degree}\n                      </h6>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <EmptyState\n                title=\"No education data\"\n                subtitle=\"Add your qualification\"\n                showEditOption={showEditOption}\n                btnText=\"Add education\"\n                BtnIcon={PlusIcon}\n                onBtnClick={() => {\n                  setShowModal({ type: EDUCATION, show: true })\n                }}\n                iconUrl={'/education.png'}\n              />\n            )}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Education\n","import Card from 'components/atoms/Card'\nimport { classNames } from 'utils/classNames'\nimport moment from 'moment'\nimport Button from 'components/atoms/Button'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport { IBlockProps } from 'interfaces/UniversalInterface'\nimport { PROFILE_TWO_EXPERIENCE } from 'state/Redux/constants'\nimport { sumOfMonths } from 'utils/functions'\n\nconst Experiences = ({\n  userData,\n  setShowModal,\n  showEditOption,\n}: IBlockProps) => {\n  const { background } = userData || {}\n  const { experiences = [] } = background || {}\n\n  return (\n    <div>\n      <Card\n        id=\"experience\"\n        secondary\n        withCardHeadings={\n          experiences &&\n          experiences.length > 0 &&\n          showEditOption && (\n            <>\n              <Button\n                secondary\n                className=\"mr-3\"\n                invert\n                bgColor=\"gray\"\n                onClick={() =>\n                  setShowModal({ type: PROFILE_TWO_EXPERIENCE, show: true })\n                }\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        cardTitle=\"Experiences\"\n        content={\n          <div className=\"p-4 \">\n            <nav aria-label=\"Progress\">\n              <ol className=\"overflow-hidden \">\n                {experiences?.length > 0 ? (\n                  experiences?.map((step, stepIdx: number) => (\n                    <li\n                      key={stepIdx}\n                      className={classNames(\n                        stepIdx !==\n                          // @ts-ignore\n                          userData?.background?.experiences?.length - 1\n                          ? 'pb-10'\n                          : '',\n                        'relative'\n                      )}\n                    >\n                      <>\n                        {stepIdx !==\n                        // @ts-ignore\n                        userData?.background?.experiences?.length - 1 ? (\n                          <div\n                            className=\"-ml-px absolute mt-0.5 top-4 left-4 w-0.5 h-full bg-gray-200 dark:bg-gray-600\"\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                        <div className=\"relative  flex items-center  justify-between group\">\n                          <div className=\"relative  flex items-start group\">\n                            <span className=\"h-9 flex items-center \">\n                              <span\n                                className={`relative  ${\n                                  stepIdx === 0\n                                    ? 'border-pink-600 '\n                                    : 'border-gray-200 dark:border-gray-600'\n                                }  z-10 w-6 h-6 flex bg-white dark:bg-gray-700 items-center justify-center border-4  rounded-full `}\n                              ></span>\n                            </span>\n                            <span className=\"ml-4 min-w-0 flex flex-col\">\n                              <span className=\" font-semibold dark:text-white text-base tracking-wide uppercase\">\n                                {step.jobTitle}{' '}\n                                <span className=\"dark:text-gray-400 text-gray-500 text-xs normal-case font-light\">\n                                  - {step.companyName}\n                                </span>\n                              </span>\n                              <span className=\"text-sm text-gray-500\">\n                                {step.companyAddress}\n                              </span>\n                            </span>\n                          </div>\n\n                          <div className=\"space-y-1\">\n                            <span className=\"block text-xs text-right italic font-medium  text-gray-400\">\n                              {sumOfMonths(\n                                Number(\n                                  moment(step.leaveDate).diff(\n                                    moment(step.joinDate),\n                                    'months',\n                                    true\n                                  )\n                                )\n                              )}{' '}\n                            </span>\n                            <span className=\"block text-xs italic font-medium  text-gray-500\">\n                              {moment(step.joinDate).format('MMMM YYYY')} -{' '}\n                              {moment(step.leaveDate).format('MMMM YYYY')}\n                            </span>\n                          </div>\n                        </div>\n                      </>\n                    </li>\n                  ))\n                ) : (\n                  <EmptyState\n                    title=\"No experience\"\n                    subtitle=\"Get started by adding a new experience to your profile.\"\n                    btnText=\"Add experience\"\n                    BtnIcon={PlusIcon}\n                    showEditOption={showEditOption}\n                    onBtnClick={() => {\n                      setShowModal({ type: PROFILE_TWO_EXPERIENCE, show: true })\n                    }}\n                    iconUrl={'/experience.png'}\n                  />\n                )}\n              </ol>\n            </nav>\n          </div>\n        }\n      />\n    </div>\n  )\n}\n\nexport default Experiences\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport { IBlockProps } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport { LANGUAGES } from 'state/Redux/constants'\n\nconst Languages = ({ userData, setShowModal, showEditOption }: IBlockProps) => {\n  const { background } = userData || {}\n  const { languages = [] } = background || {}\n\n  return (\n    <>\n      <Card\n        secondary\n        withCardHeadings={\n          languages &&\n          languages.length > 0 &&\n          showEditOption && (\n            <>\n              <Button\n                secondary\n                onClick={() => setShowModal({ show: true, type: LANGUAGES })}\n                className=\"mr-3\"\n                invert\n                bgColor=\"gray\"\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        id=\"language\"\n        cardTitle=\"Languages\"\n        content={\n          <div className=\" overflow-y-auto scroll-dark-md\">\n            <ol className=\"space-y-6 list-disc px-8 py-4 \">\n              {languages && languages.length > 0 ? (\n                map(languages, (lang, awardIdx) => (\n                  <li\n                    className=\"text-gray-900 dark:text-white  cursor-pointer text-left\"\n                    key={awardIdx}\n                  >\n                    <span className=\"block text-gray-900 dark:text-white text-base font-medium\">\n                      {lang.langName}\n                    </span>\n                    <span className=\"block text-gray-600 dark:text-gray-500 text-sm font-medium\">\n                      {lang.langLevel}\n                    </span>\n                  </li>\n                ))\n              ) : (\n                <EmptyState\n                  title=\"No languages\"\n                  subtitle=\"Show everyone what languages you know\"\n                  btnText=\"Add languages\"\n                  BtnIcon={PlusIcon}\n                  showEditOption={showEditOption}\n                  onBtnClick={() => {\n                    setShowModal({ show: true, type: LANGUAGES })\n                  }}\n                  iconUrl={'/translation.png'}\n                />\n              )}\n            </ol>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Languages\n","import { map } from 'lodash'\nconst shortcuts = ['Experience', 'Skills', 'Awards', 'Education', 'Language']\n\nconst Shortcuts = () => {\n  return (\n    <div id=\"shortcuts\">\n      <ul className=\"space-y-6\">\n        {map(shortcuts, (shortcut) => (\n          <li key={shortcut}>\n            <a\n              href={`#${shortcut.toLocaleLowerCase()}`}\n              className=\"text-gray-600 dark:text-white cursor-pointer link-hover text-left\"\n            >\n              {shortcut}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Shortcuts\n","import { PlusIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { IBlockProps } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { SKILLS } from 'state/Redux/constants'\n\nconst Skills = ({ setShowModal, userData, showEditOption }: IBlockProps) => {\n  const { background } = userData || {}\n  const { skills = [] } = background || {}\n\n  return (\n    <>\n      <Card\n        id=\"skills\"\n        secondary\n        cardTitle=\"Skills\"\n        withCardHeadings={\n          skills &&\n          skills.length > 0 &&\n          showEditOption && (\n            <>\n              <Button\n                secondary\n                className=\"mr-3\"\n                invert\n                onClick={() => setShowModal({ type: SKILLS, show: true })}\n                bgColor=\"gray\"\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        content={\n          <div className=\"overflow-y-auto min-h-64   custom-scroll-mini \">\n            {skills && skills.length > 0 ? (\n              <ol className=\"space-y-6 list-disc px-8 py-4 \">\n                {map(skills, (skill, idx: number) => (\n                  <li\n                    className=\"text-gray-900 dark:text-white  cursor-pointer text-left\"\n                    key={skill.name + idx}\n                  >\n                    {skill.name}\n                  </li>\n                ))}\n              </ol>\n            ) : (\n              <EmptyState\n                title=\"No skills\"\n                hideBorders\n                subtitle=\"Add new skills to enhance your profile.\"\n                btnText=\"Add skills\"\n                showEditOption={showEditOption}\n                BtnIcon={PlusIcon}\n                onBtnClick={() => {\n                  setShowModal({ type: SKILLS, show: true })\n                }}\n                iconUrl={'/tools.png'}\n              />\n            )}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Skills\n","import { fetchUsers } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Spinner from 'components/Spinner'\nimport User from 'components/User'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs'\nimport { useQuery } from 'react-query'\n\nconst Following = ({\n  list,\n  interests,\n  showSingleCard,\n}: {\n  showSingleCard?: boolean\n  list?: string[]\n  interests?: { name: string; id: string }[]\n}) => {\n  const config = { users: list, limit: 6 }\n\n  const { data, isLoading, isFetched, isSuccess } = useQuery(\n    `user-list-following-1234`,\n    () => fetchUsers(config),\n    { enabled: list && list.length > 0 }\n  )\n\n  const users: IParent[] =\n    !isLoading && isFetched && isSuccess ? data.data.data.users : []\n\n  return (\n    <Card\n      className=\"mb-12\"\n      cardTitle=\"Following\"\n      withCardHeadings={\n        users.length > 6 && (\n          <>\n            <Button\n              gradient\n              className=\"mx-2\"\n              rounded=\"rounded-full\"\n              size=\"sm\"\n              gradientHover={false}\n              Icon={BsChevronLeft}\n            />\n            <Button\n              rounded=\"rounded-full\"\n              gradient\n              size=\"sm\"\n              className=\"mx-2\"\n              invert\n              gradientHover={false}\n              Icon={BsChevronRight}\n            />\n          </>\n        )\n      }\n      content={\n        <div>\n          {isLoading ? (\n            <div className=\"h-56 flex items-center justify-center\">\n              <Spinner />\n            </div>\n          ) : users.length > 0 ? (\n            <div\n              className={`${\n                showSingleCard\n                  ? 'flex flex-col items-center gap-4'\n                  : 'grid-cols-1 grid mt-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4'\n              }  `}\n            >\n              {map(users, (user: IParent, idx) => (\n                <User user={user} key={user._id.toString()} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      }\n    />\n  )\n}\n\nexport default Following\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Modal from 'components/atoms/Modal'\nimport CustomFooter from 'components/CustomFooter'\nimport DiscoverCard from 'components/DiscoverButton'\nimport Loading from 'components/Loading'\nimport AwardsModal from 'components/modals/AwardsModal'\nimport EducationModal from 'components/modals/EducationModal'\nimport ExperienceTwoModal from 'components/modals/ExperienceTwoModal'\nimport LanguagesModal from 'components/modals/LanguagesModal'\nimport SkillsModal from 'components/modals/SkillsModal'\nimport Activity from 'components/ProfileComponents/Activity'\nimport ProfileStrength from 'components/ProfileStrength'\nimport Awards from 'components/profileTwo/Awards'\nimport Cover from 'components/profileTwo/Cover'\nimport Education from 'components/profileTwo/Education'\nimport Experiences from 'components/profileTwo/Experiences'\nimport Languages from 'components/profileTwo/Languages'\nimport Shortcuts from 'components/profileTwo/Shortcuts'\nimport Skills from 'components/profileTwo/Skills'\nimport PublicProfileCard from 'components/PublicProfileCard'\nimport Sidebar from 'components/Sidebar'\nimport EmptyState from 'components/atoms/EmptyState'\nimport { links } from 'constants/Links'\nimport { useUserContext } from 'context/UserContext'\nimport useAccountType from 'hooks/useAccountType'\nimport { useRouter } from 'hooks/useRouter'\nimport useUser from 'hooks/useUser'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport AdditionalFeatures from 'pages/profile/AdditionalFeatures'\nimport Layout from 'pages/profile/Layout'\nimport PeopleAlsoViewed from 'pages/profile/PeopleAlsoViewed'\nimport Recommendations from 'pages/profile/Recommendations'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport * as constants from 'state/Redux/constants'\nimport Following from './Following'\nimport BottomCard from 'components/BottomCard'\nimport { isEmpty } from 'lodash'\nimport AdditionalInfo from 'components/AdditionalInfo'\n\nconst ProfileTwo = ({ userData }: { userData: IParent }) => {\n  const [showModal, setShowModal] = useState({ show: false, type: '' })\n  const route: any = useRouter()\n\n  const { viewMode = 'public', userId: userIdFromParam } = route?.match?.params\n\n  const {\n    otherUserData,\n    iAmOwnerOfThisProfile,\n    isFetched,\n    isLoading,\n    refetch: refetchProfile,\n  } = useUser(userIdFromParam, userData)\n  const showAllButtons = iAmOwnerOfThisProfile && viewMode === 'private'\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [_, setShowUnsaveModal] = useState(false)\n  const { setValues } = useUserContext()\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n    }\n    setShowModal({ ...showModal, show: false })\n  }\n  const commonBlockProps = {\n    setShowModal,\n    userData: iAmOwnerOfThisProfile ? userData : otherUserData,\n\n    showEditOption: showAllButtons,\n  }\n\n  const commonProps = {\n    authUser: showAllButtons,\n    userData: iAmOwnerOfThisProfile ? userData : otherUserData,\n  }\n\n  const commonModalProps = {\n    ...commonBlockProps,\n    onCancel,\n    setUnsavedChanges,\n    setValues,\n    setShowUnsaveModal,\n  }\n\n  const renderModalContentByType = (type: string) => {\n    switch (type) {\n      case constants.PROFILE_TWO_EXPERIENCE:\n        return <ExperienceTwoModal {...commonModalProps} />\n      case constants.SKILLS:\n        return <SkillsModal {...commonModalProps} />\n      case constants.AWARDS:\n        return <AwardsModal {...commonModalProps} />\n      case constants.EDUCATION:\n        return <EducationModal {...commonModalProps} />\n      case constants.LANGUAGES:\n        return <LanguagesModal {...commonModalProps} />\n\n      default:\n        return <div>No modal found. {type}</div>\n    }\n  }\n\n  const renderModalHeader = (type: string) => {\n    switch (type) {\n      case constants.PROFILE_TWO_EXPERIENCE:\n        return `Edit Experiences`\n      case constants.SKILLS:\n        return `Edit Skills`\n      case constants.AWARDS:\n        return `Edit Awards`\n      case constants.EDUCATION:\n        return `Edit Education`\n      case constants.LANGUAGES:\n        return `Edit Languages`\n\n      default:\n        return `Edit`\n    }\n  }\n\n  const commonBlockProps2 = {\n    authUser: showAllButtons,\n    userData: iAmOwnerOfThisProfile ? userData : otherUserData,\n  }\n  const { isBusiness, getType } = useAccountType(commonBlockProps2.userData)\n\n  const history = useHistory()\n\n  const user = commonProps?.userData\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      history.push(\n        links.getProfile(\n          user,\n          iAmOwnerOfThisProfile ? viewMode === 'private' : false\n        )\n      )\n    }\n  }, [user])\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-900 smooth-scroll min-h-screen pt-12\">\n      <DashboardHeader userData={userData} />\n      {!isEmpty(user) ? (\n        <div>\n          <Meta\n            pageTitle={`${user.fullName} | 13RMS`}\n            userName={user.fullName}\n            pageUrl={links.getProfile(user)}\n            imageUrl={user?.profilePicture}\n            pageType=\"social media\"\n            title={`${user.fullName} | 13RMS`}\n            keywords={`profile,${user.fullName},13RMS,tradingpost, linkedin,instagram,facebook`}\n          />\n          <Sidebar />\n          <div className=\"\">\n            {showModal.show && (\n              <Modal\n                open={showModal.show}\n                onClose={onCancel}\n                setOpen={() => setShowModal({ show: false, type: '' })}\n                header={renderModalHeader(showModal.type)}\n              >\n                <div className=\"\">\n                  <div className=\"min-w-132  custom-scroll-mini darker my-4 px-1\">\n                    {renderModalContentByType(showModal.type)}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          </div>\n\n          {/* stylelint-disabled  */}\n          <div className=\"mx-auto min-h-screen  max-w-440\">\n            <Layout\n              hideBorders\n              userData={userData}\n              business={isBusiness}\n              firstCol={\n                <div className=\"space-y-12\">\n                  <AdditionalInfo\n                    refetch={refetchProfile}\n                    secondary\n                    {...commonProps}\n                  />\n                  <Card\n                    className={` transition-transform duration-200`}\n                    secondary\n                    cardTitle=\"Shortcuts\"\n                    content={\n                      <div>\n                        <Shortcuts />\n                      </div>\n                    }\n                  />\n\n                  {/* {iAmOwnerOfThisProfile && ( */}\n                  <AdditionalFeatures\n                    iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n                    userData={userData}\n                    otherUserData={otherUserData}\n                    refetchProfile={refetchProfile}\n                    isBusiness={getType(user).isBusiness}\n                  />\n                  {/* )} */}\n                  {iAmOwnerOfThisProfile && (\n                    <DiscoverCard\n                      extraItems={[{ link: links.myItems(), name: 'My items' }]}\n                    />\n                  )}\n                </div>\n              }\n              secondCol={\n                <div className=\"flex flex-col space-y-12\">\n                  <Cover authUser={iAmOwnerOfThisProfile} userData={user} />\n\n                  <Experiences {...commonBlockProps} />\n\n                  <div className=\"grid-cols-1 grid space-x-6 sm:grid-cols-2 px-0 \">\n                    <Skills {...commonBlockProps} />\n                    <Awards {...commonBlockProps} />\n                  </div>\n\n                  {!isBusiness && <Education {...commonBlockProps} />}\n\n                  {iAmOwnerOfThisProfile && (\n                    <Following\n                      list={userData.following}\n                      interests={userData?.background?.interests}\n                    />\n                  )}\n                  <div className=\"grid-cols-1 grid   \">\n                    <Languages {...commonBlockProps} />\n                  </div>\n                  <Recommendations\n                    secondary\n                    iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n                    {...commonProps}\n                    recommendation={commonProps?.userData?.recommendation}\n                  />\n\n                  <Activity\n                    userData={commonBlockProps.userData}\n                    iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n                  />\n                </div>\n              }\n              thirdCol={\n                <div className=\"space-y-12\">\n                  {showAllButtons && (\n                    <div className=\"\">\n                      <PublicProfileCard secondary userData={userData} />\n                    </div>\n                  )}\n                  {showAllButtons && (\n                    <ProfileStrength secondary {...commonBlockProps2} />\n                  )}\n                  <div className=\"xl:hidden space-y-12 block\">\n                    <AdditionalInfo\n                      refetch={refetchProfile}\n                      secondary\n                      {...commonProps}\n                    />\n                    <Card\n                      className={` transition-transform duration-200`}\n                      secondary\n                      cardTitle=\"Shortcuts\"\n                      content={\n                        <div>\n                          <Shortcuts />\n                        </div>\n                      }\n                    />\n\n                    {/* {iAmOwnerOfThisProfile && ( */}\n                    <AdditionalFeatures\n                      iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n                      userData={userData}\n                      otherUserData={otherUserData}\n                      refetchProfile={refetchProfile}\n                      isBusiness={getType(user).isBusiness}\n                    />\n                    {/* )} */}\n                    {iAmOwnerOfThisProfile && (\n                      <DiscoverCard\n                        extraItems={[\n                          { link: links.myItems(), name: 'My items' },\n                        ]}\n                      />\n                    )}\n                  </div>\n                  {iAmOwnerOfThisProfile && (\n                    <PeopleAlsoViewed\n                      // showSingleCard={false}\n                      {...commonBlockProps2}\n                      secondary\n                    />\n                  )}\n                </div>\n              }\n            />\n          </div>\n          {!iAmOwnerOfThisProfile && (\n            <BottomCard\n              myFollowings={userData.following}\n              userData={otherUserData}\n            />\n          )}\n          <CustomFooter />\n\n          {/* {showUnsaveModal && (\n            <Modal\n              hideCloseBtn\n              header=\"Discard changes\"\n              open={showUnsaveModal}\n              setOpen={setShowUnsaveModal}\n            >\n              <>\n                <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n                  You have unsaved changes\n                </h1>\n                <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n                <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n                  <Button\n                    secondary\n                    bgColor=\"gray\"\n                    onClick={() => {\n                      setShowUnsaveModal(false)\n                      setShowModal({ ...showModal, show: true })\n                    }}\n                    invert\n                    label=\"No thanks\"\n                  />\n                  <Button\n                    gradient\n                    label=\"Discard\"\n                    onClick={() => {\n                      setShowUnsaveModal(false)\n                    }}\n                  />\n                </div>\n              </>\n            </Modal>\n          )} */}\n        </div>\n      ) : (\n        <div className=\"flex items-center  overflow-hidden  max-h-screen min-h-96   justify-center\">\n          <EmptyState\n            hideBorders\n            title=\"Oops Can't find user.\"\n            subtitle={`Please check url`}\n            iconUrl={'/question.png'}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileTwo\n"],"sourceRoot":""}
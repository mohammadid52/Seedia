{"version":3,"sources":["components/Spinner.tsx","components/VerticalProfileCard.tsx","pages/posts/SinglePostView.tsx"],"names":["Spinner","className","VerticalProfileCard","user","content","isBusiness","useAccountType","defaultContent","business","name","company","jobTitle","href","links","getProfile","alt","src","coverPicture","profilePicture","avatarPlaceholder","fullName","SinglePostView","userData","route","useRouter","postUrl","match","params","useQuery","fetchPostById","data","isLoading","isFetched","isSuccess","post","pageTitle","firstColClass","firstCol","secondCol","userId","_id","thirdColClass","thirdCol"],"mappings":"4GAQeA,IARC,WACd,OACE,qBAAKC,UAAU,wCAAf,SACE,qBAAKA,UAAU,kF,iCCHrB,mCA2DeC,IAtDa,SAAC,GAMtB,IAAD,IALJC,EAKI,EALJA,KAKI,IAJJC,eAII,MAJM,KAIN,EACIC,EAAeC,YAAeH,GAA9BE,WAEFE,EACJ,qCACE,mBAAGN,UAAU,qDAAb,SACGI,EAAU,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAMK,gBAAT,aAAG,EAAgBC,KAAnB,OAA0BN,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMO,eAAhC,aAA0B,EAAeC,WAEtD,mBACEV,UAAU,oDACVW,KAAMC,IAAMC,WAAWX,GAFzB,SAIE,qBAAKF,UAAU,OAAf,oCAKN,OACE,sBAAKA,UAAU,aAAf,UACE,qBACEc,IAAI,GACJC,KACM,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMc,cAAN,OACId,QADJ,IACIA,OADJ,EACIA,EAAMc,aACN,qDAENhB,UAAU,6CAEZ,qBAAKA,UAAU,4BAAf,SACE,qBACEc,IAAI,GACJC,IAAKb,EAAKe,eAAiBf,EAAKe,eAAiBC,IACjDlB,UAAU,4GAGd,sBAAKA,UAAS,sBAAiBG,EAAU,GAAK,kBAA9C,UACE,mBACEQ,KAAMC,IAAMC,WAAWX,GAAM,GAC7BF,UAAU,oEAFZ,SAIGE,EAAKiB,WAEPhB,GAAWG,U,iCCrDpB,0GAuEec,UA3DQ,SAAC,GAAyC,IAAD,EAAtCC,EAAsC,EAAtCA,SAClBC,EAAaC,cACXC,GAAR,OAAoBF,QAApB,IAAoBA,GAApB,UAAoBA,EAAOG,aAA3B,aAAoB,EAAcC,QAA1BF,QAER,EAAkDG,mBAAS,QAAD,OAChDH,IACR,kBAAMI,YAAcJ,MAFdK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,UAK9BC,GAAeH,GAAaC,GAAaC,EAAYH,EAAKA,KAAKA,KAAO,GAEtE3B,EAAI,OAAG+B,QAAH,IAAGA,OAAH,EAAGA,EAAM/B,KAEnB,OACE,sBAAKF,UAAU,uDAAf,UACE,cAAC,IAAD,CAAiBqB,SAAUA,IAC3B,cAAC,IAAD,CAAMa,UAAS,wBAEf,qBACElC,UAAS,+DADX,SAGE,cAAC,IAAD,CACEmC,cAAa,0CACbC,SACE,qBAAKpC,UAAU,yBAAf,SACG+B,IAAcD,EACb,cAAC,IAAD,CAAqB5B,KAAMA,IAE3B,cAAC,IAAD,MAINmC,UACE,qBAAKrC,UAAU,8CAAf,SACG8B,IAAcC,EACb,cAAC,IAAD,IAEA,cAAC,IAAD,CAAMV,SAAUA,EAAUiB,OAAQjB,EAASkB,IAAKN,KAAMA,MAI5DO,cAAc,WACdC,SACE,sBAAKzC,UAAU,aAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD","file":"static/js/53.c5f037f9.chunk.js","sourcesContent":["const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst VerticalProfileCard = ({\n  user,\n  content = null,\n}: {\n  user: IParent\n  content?: React.ReactNode\n}) => {\n  const { isBusiness } = useAccountType(user)\n\n  const defaultContent = (\n    <>\n      <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n        {isBusiness ? user?.business?.name : user?.company?.jobTitle}\n      </p>\n      <a\n        className=\"dark:text-white text-gray-900 text-lg font-medium\"\n        href={links.getProfile(user)}\n      >\n        <div className=\"mt-2\">View full profile</div>\n      </a>\n    </>\n  )\n\n  return (\n    <div className=\"plain-card\">\n      <img\n        alt=\"\"\n        src={\n          user?.coverPicture\n            ? user?.coverPicture\n            : 'https://source.unsplash.com/1600x900/?nature,water'\n        }\n        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n      />\n      <div className=\"flex justify-center -mt-8\">\n        <img\n          alt=\"\"\n          src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n          className=\"rounded-full border-solid lg:h-16 lg:w-16 h-12 w-12 dark:border-gray-800 border-white  border-2 -mt-3\"\n        />\n      </div>\n      <div className={`text-center ${content ? '' : 'px-3 pb-6 pt-2'}`}>\n        <a\n          href={links.getProfile(user, true)}\n          className=\"dark:text-white cursor-pointer text-gray-900 text-base font-bold \"\n        >\n          {user.fullName}\n        </a>\n        {content || defaultContent}\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalProfileCard\n","import { fetchPostById } from 'apis/queries'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport SideCard from 'components/SideCard'\nimport Spinner from 'components/Spinner'\nimport VerticalProfileCard from 'components/VerticalProfileCard'\nimport { useRouter } from 'hooks/useRouter'\nimport { IParent, IPost } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport { useQuery } from 'react-query'\n\nconst SinglePostView = ({ userData }: { userData: IParent }) => {\n  const route: any = useRouter()\n  const { postUrl } = route?.match?.params\n\n  const { data, isLoading, isFetched, isSuccess } = useQuery(\n    `post-${postUrl}`,\n    () => fetchPostById(postUrl)\n  )\n\n  const post: IPost = !isLoading && isFetched && isSuccess ? data.data.data : {}\n\n  const user = post?.user\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n      <Meta pageTitle={`Post | Feed | 13RMS`} />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`   max-h-152 lg:block  xl:block w-full `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              {isFetched && !isLoading ? (\n                <VerticalProfileCard user={user} />\n              ) : (\n                <Spinner />\n              )}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              {isLoading && !isFetched ? (\n                <Spinner />\n              ) : (\n                <Post userData={userData} userId={userData._id} post={post} />\n              )}\n            </div>\n          }\n          thirdColClass=\"lg:block\"\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n              {/* <Following\n                  showSingleCard\n                  list={userData?.following}\n                  interests={userData?.background?.interests}\n                /> */}\n            </div>\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SinglePostView\n"],"sourceRoot":""}
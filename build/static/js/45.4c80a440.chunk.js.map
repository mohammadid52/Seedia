{"version":3,"sources":["components/Spinner.tsx","components/Tabs.tsx","hooks/useTabs.ts","components/VerticalProfileCard.tsx","pages/savedItems/MyItems.tsx"],"names":["Spinner","className","Tabs","tabs","currentTab","setCurrentTab","htmlFor","id","name","defaultValue","find","tab","map","tabIndex","onClick","classNames","useTabs","initCurrentTab","useState","helpers","VerticalProfileCard","user","content","isBusiness","useAccountType","defaultContent","business","company","jobTitle","href","links","getProfile","alt","src","coverPicture","profilePicture","avatarPlaceholder","fullName","User","myFollowings","isPersonal","useFollow","_id","toString","following","addFollow","removeFollow","companyName","background","education","gradient","mutate","label","MyItems","userData","onProfiles","onPosts","useQuery","fetchedSavedItems","enabled","data","isLoading","isFetched","isSuccess","refetch","_users","fetchedSavedProfiles","onReachedAtLastPost","savedItems","savedProfiles","pageTitle","firstColClass","firstCol","followers","length","secondCol","dataLength","next","hasMore","loader","undefined","idx","animation","animationData","title","post","userId","thirdColClass","thirdCol"],"mappings":"4GAQeA,IARC,WACd,OACE,qBAAKC,UAAU,wCAAf,SACE,qBAAKA,UAAU,kF,iCCHrB,mBAuDeC,IA3CF,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,cAChC,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACE,uBAAOK,QAAQ,OAAOL,UAAU,UAAhC,0BAIA,wBACEM,GAAG,OACHC,KAAK,OACLP,UAAU,gJACVQ,aAAcN,EAAKO,MAAK,SAACC,GAAD,OAASA,EAAIH,OAASJ,KAAYI,KAJ5D,SAMGL,EAAKS,KAAI,SAACD,GAAD,OACR,iCAAwBA,EAAIH,MAAfG,EAAIH,cAIvB,qBAAKP,UAAU,kBAAf,SACE,qBAAKA,UAAU,GAAf,SACE,qBAAKA,UAAU,wBAAwB,aAAW,OAAlD,SACGE,EAAKS,KAAI,SAACD,GAAD,OACR,qBACEE,SAAU,EAEVC,QAAS,kBAAMT,EAAcM,EAAIH,OACjCP,UAAWc,YACTX,IAAeO,EAAIH,KACf,iEACA,4IACJ,mEARJ,SAWGG,EAAIH,MATAG,EAAIH,oB,oDCzBVQ,IATC,SAACb,GACf,IAAMc,EAAiBd,EAAK,GAAGK,KAC/B,EAAoCU,mBAASD,GAA7C,mBAAOb,EAAP,KAAmBC,EAAnB,KAEMc,EAAUhB,EAAKS,KAAI,SAACD,GAAD,OAASA,EAAIH,OAASJ,KAE/C,MAAO,CAAEA,aAAYC,gBAAec,a,iCCTtC,mCA2DeC,IAtDa,SAAC,GAMtB,IAAD,IALJC,EAKI,EALJA,KAKI,IAJJC,eAII,MAJM,KAIN,EACIC,EAAeC,YAAeH,GAA9BE,WAEFE,EACJ,qCACE,mBAAGxB,UAAU,qDAAb,SACGsB,EAAU,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAMK,gBAAT,aAAG,EAAgBlB,KAAnB,OAA0Ba,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMM,eAAhC,aAA0B,EAAeC,WAEtD,mBACE3B,UAAU,oDACV4B,KAAMC,IAAMC,WAAWV,GAFzB,SAIE,qBAAKpB,UAAU,OAAf,oCAKN,OACE,sBAAKA,UAAU,aAAf,UACE,qBACE+B,IAAI,GACJC,KACM,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMa,cAAN,OACIb,QADJ,IACIA,OADJ,EACIA,EAAMa,aACN,qDAENjC,UAAU,6CAEZ,qBAAKA,UAAU,4BAAf,SACE,qBACE+B,IAAI,GACJC,IAAKZ,EAAKc,eAAiBd,EAAKc,eAAiBC,IACjDnC,UAAU,4GAGd,sBAAKA,UAAS,sBAAiBqB,EAAU,GAAK,kBAA9C,UACE,mBACEO,KAAMC,IAAMC,WAAWV,GAAM,GAC7BpB,UAAU,oEAFZ,SAIGoB,EAAKgB,WAEPf,GAAWG,U,y9yBC/Bda,EAAO,SAAC,GAMP,IAAD,QALJjB,EAKI,EALJA,KACAkB,EAII,EAJJA,aAKA,EAAmCf,YAAeH,GAA1CE,EAAR,EAAQA,WAAYiB,EAApB,EAAoBA,WACpB,EAA+CC,YAC7CF,GAAgB,GAChBlB,EAAKqB,IAAIC,YAFHC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,aAI9B,OACE,mBACEjB,KAAMC,IAAMC,WAAWV,GAEvBpB,UAAS,0IAHX,SAKE,sBAAKA,UAAU,qCAAf,UACE,qBACEgC,IAAKZ,EAAKc,gBAAkBC,IAC5BJ,IAAI,GACJ/B,UAAU,gCAEZ,gCACE,oBAAIA,UAAU,gCAAd,SAA+CoB,EAAKgB,WACpD,mBAAGpC,UAAU,2CAAb,SACGsB,EAAU,OACPF,QADO,IACPA,GADO,UACPA,EAAMK,gBADC,aACP,EAAgBlB,KAChBgC,EAAU,OACVnB,QADU,IACVA,GADU,UACVA,EAAMM,eADI,aACV,EAAeoB,aACX,OAAJ1B,QAAI,IAAJA,GAAA,UAAAA,EAAM2B,kBAAN,eAAkBC,aAAlB,OACA5B,QADA,IACAA,GADA,UACAA,EAAM2B,kBADN,aACA,EAAkBC,UAAU,GAAGzC,WAGvC,qBAAKP,UAAU,oBAAf,SACE,cAAC,IAAD,CACEiD,UAAQ,EACRpC,QAAS,WACP8B,EACIE,EAAaK,OAAb,OAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAMqB,KAC1BG,EAAUM,OAAV,OAAiB9B,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMqB,MAE7BU,MAAOR,EAAY,WAAa,iBA5BjCvB,EAAKqB,MA4LDW,UAxJC,SAAC,GAAyC,IAAD,EAAtCC,EAAsC,EAAtCA,SACXnD,EAAO,CAAC,CAAEK,KAAM,YAAc,CAAEA,KAAM,UAE5C,EAA+CQ,YAAQb,GAA/CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAec,EAAnC,EAAmCA,QACnC,cAA8BA,EAA9B,GAAOoC,EAAP,KAAmBC,EAAnB,KAEA,EAA2DC,mBAAS,cAElEC,IACA,CAAEC,QAASH,IAHLI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,UAAWC,EAA/C,EAA+CA,QAMzCC,EAASR,mBAAS,iBAAkBS,IAAsB,CAC9DP,QAASJ,IAGLY,EAAsB,WAC1BH,KAGII,GACHP,GAAaC,GAAaC,EAAYH,EAAKA,KAAKA,KAAO,GACpDS,GACHJ,EAAOJ,WAAaI,EAAOH,WAAaG,EAAOF,UAC5CE,EAAOL,KAAKA,KAAKA,KACjB,GAEErC,EAAeC,YAAe8B,GAA9B/B,WAER,OACE,sBAAKtB,UAAU,uDAAf,UACE,cAAC,IAAD,CAAiBqD,SAAUA,IAC3B,cAAC,IAAD,CAAMgB,UAAS,4BAAuBhB,EAASjB,SAAhC,cAEf,qBACEpC,UAAS,+DADX,SAGE,cAAC,IAAD,CACEsE,cAAa,0CACbC,SACE,qBAAKvE,UAAU,yBAAf,SACE,cAAC,IAAD,CACEqB,QACE,gCACE,mBAAGrB,UAAU,qDAAb,SACGsB,EACG+B,EAAS5B,SAASlB,KAClB8C,EAAS3B,QAAQC,WAEvB,qBAAK3B,UAAU,sIAAf,SACE,sBAAKA,UAAU,oFAAf,UACE,oBAAIA,UAAU,eAAd,uBACA,mBACE4B,KAAMC,IAAM2C,YACZxE,UAAU,yDAFZ,UAIW,OAARqD,QAAQ,IAARA,GAAA,UAAAA,EAAUmB,iBAAV,eAAqBC,SAAU,YAM1CrD,KAAMiC,MAIZqB,UACE,qBAAK1E,UAAU,8CAAf,SACG4D,IAAcC,EACb,cAAC,IAAD,IAEA,sBAAK7D,UAAU,cAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,IAAD,CACEE,KAAMA,EACNC,WAAYA,EACZC,cAAeA,MAGlBkD,IACEc,GAAiBA,EAAcK,OAAS,EACvC,cAAC,IAAD,CACEE,WAAYP,EAAcK,OAC1BG,KAAM,kBAAMV,KACZW,SAAS,EACTC,YAAQC,EAJV,SAME,qBAAK/E,UAAU,wBAAf,SACGoE,EAAczD,KAAI,SAACS,EAAM4D,GACxB,OACE,cAAC3C,EAAD,CACEC,aAAce,EAASV,UAEvBvB,KAAMA,GADDA,EAAKqB,YAQpB,cAAC,IAAD,CACEwC,UAAWC,EACXC,MAAM,0BAGX5B,IACEY,GAAcA,EAAWM,OAAS,EACjC,cAAC,IAAD,CACEE,WAAYR,EAAWM,OACvBG,KAAM,kBAAMV,KACZW,SAAS,EACTC,YAAQC,EAJV,SAME,qBAAK/E,UAAU,4BAAf,SACGmE,EAAWxD,KAAI,SAACyE,EAAMJ,GAAP,OACd,cAAC,IAAD,CAEE3B,SAAUA,EACVgC,OAAQhC,EAASZ,IAAIC,WACrB0C,KAAMA,GAHDA,EAAK3C,YASlB,cAAC,IAAD,CACEwC,UAAWC,EACXC,MAAM,+BAOpBG,cAAc,WACdC,SACE,sBAAKvF,UAAU,aAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD","file":"static/js/45.4c80a440.chunk.js","sourcesContent":["const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","import { classNames } from 'utils/classNames'\n\nexport interface ITab {\n  name: string\n}\n\nexport interface TabsProps {\n  tabs: ITab[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Tabs = ({ tabs, currentTab, setCurrentTab }: TabsProps) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n          defaultValue={tabs.find((tab) => tab.name === currentTab).name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab.name}>{tab.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                tabIndex={0}\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  currentTab === tab.name\n                    ? ' gradient-text border-b-2 dark:border-pink-700 border-pink-200'\n                    : 'dark:hover:text-pink-600 border-transparent border-b-2 text-gray-500 hover:text-gray-700 dark:hover:border-gray-600 hover:border-gray-300',\n                  'whitespace-nowrap py-4 cursor-pointer px-1  font-medium text-sm'\n                )}\n              >\n                {tab.name}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import { ITab } from 'components/Tabs'\nimport { useState } from 'react'\n\nconst useTabs = (tabs: ITab[]) => {\n  const initCurrentTab = tabs[0].name\n  const [currentTab, setCurrentTab] = useState(initCurrentTab)\n\n  const helpers = tabs.map((tab) => tab.name === currentTab)\n\n  return { currentTab, setCurrentTab, helpers }\n}\n\nexport default useTabs\n","import { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst VerticalProfileCard = ({\n  user,\n  content = null,\n}: {\n  user: IParent\n  content?: React.ReactNode\n}) => {\n  const { isBusiness } = useAccountType(user)\n\n  const defaultContent = (\n    <>\n      <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n        {isBusiness ? user?.business?.name : user?.company?.jobTitle}\n      </p>\n      <a\n        className=\"dark:text-white text-gray-900 text-lg font-medium\"\n        href={links.getProfile(user)}\n      >\n        <div className=\"mt-2\">View full profile</div>\n      </a>\n    </>\n  )\n\n  return (\n    <div className=\"plain-card\">\n      <img\n        alt=\"\"\n        src={\n          user?.coverPicture\n            ? user?.coverPicture\n            : 'https://source.unsplash.com/1600x900/?nature,water'\n        }\n        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n      />\n      <div className=\"flex justify-center -mt-8\">\n        <img\n          alt=\"\"\n          src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n          className=\"rounded-full border-solid lg:h-16 lg:w-16 h-12 w-12 dark:border-gray-800 border-white  border-2 -mt-3\"\n        />\n      </div>\n      <div className={`text-center ${content ? '' : 'px-3 pb-6 pt-2'}`}>\n        <a\n          href={links.getProfile(user, true)}\n          className=\"dark:text-white cursor-pointer text-gray-900 text-base font-bold \"\n        >\n          {user.fullName}\n        </a>\n        {content || defaultContent}\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalProfileCard\n","import { fetchedSavedItems, fetchedSavedProfiles } from 'apis/queries'\nimport animationData from 'assets/animation/caught-up.json'\nimport Button from 'components/atoms/Button'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport SideCard from 'components/SideCard'\nimport Spinner from 'components/Spinner'\nimport Tabs from 'components/Tabs'\n\nimport VerticalProfileCard from 'components/VerticalProfileCard'\nimport { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport useFollow from 'hooks/useFollow'\nimport useTabs from 'hooks/useTabs'\nimport { IParent, IPost } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst User = ({\n  user,\n  myFollowings,\n}: {\n  user?: IParent\n  myFollowings: string[]\n}) => {\n  const { isBusiness, isPersonal } = useAccountType(user)\n  const { following, addFollow, removeFollow } = useFollow(\n    myFollowings || [],\n    user._id.toString()\n  )\n  return (\n    <a\n      href={links.getProfile(user)}\n      key={user._id}\n      className={`p-2 py-4 relative cursor-pointer border-b border-gray-200 dark:border-gray-700 dark:hover:bg-gray-800 hover:bg-gray-100  transition-all`}\n    >\n      <div className=\"flex  cursor-pointer items-center \">\n        <img\n          src={user.profilePicture || avatarPlaceholder}\n          alt=\"\"\n          className=\"rounded-full mr-2 h-12 w-12\"\n        />\n        <div>\n          <h4 className=\"dark:text-white text-gray-900\">{user.fullName}</h4>\n          <p className=\"dark:text-gray-500 text-gray-600 text-sm\">\n            {isBusiness\n              ? user?.business?.name\n              : isPersonal\n              ? user?.company?.companyName\n              : user?.background?.education &&\n                user?.background?.education[0].name}\n          </p>\n        </div>\n        <div className=\"absolute  right-2\">\n          <Button\n            gradient\n            onClick={() => {\n              following\n                ? removeFollow.mutate(user?._id)\n                : addFollow.mutate(user?._id)\n            }}\n            label={following ? 'Unfollow' : 'Follow'}\n          />\n        </div>\n      </div>\n    </a>\n  )\n}\n\nconst MyItems = ({ userData }: { userData: IParent }) => {\n  const tabs = [{ name: 'Profiles' }, { name: 'Posts' }]\n\n  const { currentTab, setCurrentTab, helpers } = useTabs(tabs)\n  const [onProfiles, onPosts] = helpers\n\n  const { data, isLoading, isFetched, isSuccess, refetch } = useQuery(\n    `saved-items`,\n    fetchedSavedItems,\n    { enabled: onPosts }\n  )\n\n  const _users = useQuery(`saved-profiles`, fetchedSavedProfiles, {\n    enabled: onProfiles,\n  })\n\n  const onReachedAtLastPost = () => {\n    refetch()\n  }\n\n  const savedItems: IPost[] =\n    !isLoading && isFetched && isSuccess ? data.data.data : []\n  const savedProfiles: IParent[] =\n    !_users.isLoading && _users.isFetched && _users.isSuccess\n      ? _users.data.data.data\n      : []\n\n  const { isBusiness } = useAccountType(userData)\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n      <Meta pageTitle={`Recent Activity | ${userData.fullName} | 13RMS`} />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`   max-h-152 lg:block  xl:block w-full `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              <VerticalProfileCard\n                content={\n                  <div>\n                    <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n                      {isBusiness\n                        ? userData.business.name\n                        : userData.company.jobTitle}\n                    </p>\n                    <div className=\"flex mt-4 gap-y-2  flex-col border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex transition-all item-center px-4 py-1  dark:hover:bg-gray-700 justify-between\">\n                        <h6 className=\"font-medium \">Followers</h6>\n                        <a\n                          href={links.followers()}\n                          className=\"hover:underline cursor-pointer text-link font-semibold\"\n                        >\n                          {userData?.followers?.length || 0}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                }\n                user={userData}\n              />\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              {isLoading && !isFetched ? (\n                <Spinner />\n              ) : (\n                <div className=\"space-y-12 \">\n                  <div className=\"plain-card w-full  px-4\">\n                    <Tabs\n                      tabs={tabs}\n                      currentTab={currentTab}\n                      setCurrentTab={setCurrentTab}\n                    />\n                  </div>\n                  {onProfiles &&\n                    (savedProfiles && savedProfiles.length > 0 ? (\n                      <InfiniteScroll\n                        dataLength={savedProfiles.length} //This is important field to render the next data\n                        next={() => onReachedAtLastPost()}\n                        hasMore={true}\n                        loader={undefined}\n                      >\n                        <div className=\"flex flex-col gap-y-6\">\n                          {savedProfiles.map((user, idx) => {\n                            return (\n                              <User\n                                myFollowings={userData.following}\n                                key={user._id}\n                                user={user}\n                              />\n                            )\n                          })}\n                        </div>\n                      </InfiniteScroll>\n                    ) : (\n                      <EmptyState\n                        animation={animationData}\n                        title=\"You're all caught up\"\n                      />\n                    ))}\n                  {onPosts &&\n                    (savedItems && savedItems.length > 0 ? (\n                      <InfiniteScroll\n                        dataLength={savedItems.length} //This is important field to render the next data\n                        next={() => onReachedAtLastPost()}\n                        hasMore={true}\n                        loader={undefined}\n                      >\n                        <div className=\"grid  grid-cols-1 gap-y-6\">\n                          {savedItems.map((post, idx) => (\n                            <Post\n                              key={post._id}\n                              userData={userData}\n                              userId={userData._id.toString()}\n                              post={post}\n                            />\n                          ))}\n                        </div>\n                      </InfiniteScroll>\n                    ) : (\n                      <EmptyState\n                        animation={animationData}\n                        title=\"You're all caught up\"\n                      />\n                    ))}\n                </div>\n              )}\n            </div>\n          }\n          thirdColClass=\"lg:block\"\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n              {/* <Following\n                  showSingleCard\n                  list={userData?.following}\n                  interests={userData?.background?.interests}\n                /> */}\n            </div>\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default MyItems\n"],"sourceRoot":""}
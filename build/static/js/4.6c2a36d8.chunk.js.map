{"version":3,"sources":["pages/Login.jsx"],"names":["Login","useState","isLoaded","setIsLoaded","history","useHistory","validationSchema","Yup","email","required","password","min","max","setValues","useUserContext","token","getAccessToken","loading","setLoading","apiCall","values","a","network","post","headers","Authorization","data","_id","push","links","DASHBAORD","localStorage","setItem","access_token","onSubmit","_values","setTimeout","title","subtitle","className","initialValues","LOGIN","label","id","name","showPasswordButton","type","fullWidth","rounded","gradient","href"],"mappings":"yPAqHeA,UAvGD,WACZ,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cACVC,EAAmBC,IAAW,CAClCC,MAAOD,MACJC,MAAM,yBACNC,SAAS,4BACZC,SAAUH,MAAaE,SAAS,uBAAuBE,IAAI,GAAGC,IAAI,MAG5DC,EAAcC,cAAdD,UACFE,EAAQC,cAEd,EAA8Bf,oBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KAEMC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACSC,IAAQC,KAC7B,cACA,CACEf,MAAOY,EAAOZ,MACdE,SAAUU,EAAOV,UAEnB,CACEc,QAAS,CAAEC,cAAeV,KARhB,uBACNW,EADM,EACNA,MAYIC,IACZd,EAAU,2BAAKa,EAAKA,MAASA,IAO7BtB,EAAQwB,KAAKC,IAAMC,WACnBC,aAAaC,QAAQ,eAAgBN,EAAKA,KAAKO,cAtBjC,2CAAH,sDAyBPC,EAAQ,uCAAG,WAAOC,GAAP,SAAAd,EAAA,sDACfH,GAAW,GAEXC,EAAQgB,GAHO,2CAAH,sDAUd,OAJAC,YAAW,WACTjC,GAAY,KACX,KAEKD,EAGN,cAAC,IAAD,CACEmC,MAAM,0BACNC,SACE,mBAAGC,UAAU,4DAAb,qDAHJ,SAQE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,qHAAf,SACE,cAAC,IAAD,CACEC,cAAeC,IACfnC,iBAAkBA,EAClB4B,SAAUA,EAHZ,SAKE,eAAC,IAAD,CAAMK,UAAU,YAAhB,UACE,cAAC,IAAD,CAAWG,MAAM,QAAQC,GAAG,QAAQC,KAAK,QAAQnC,UAAQ,IAEzD,cAAC,IAAD,CACEiC,MAAM,WACNC,GAAG,WACHC,KAAK,WACLnC,UAAQ,EACRoC,oBAAkB,IAGpB,8BACE,cAAC,IAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRhC,QAASA,EACTyB,MAAM,mBAMhB,sBAAKH,UAAU,mCAAf,8BAEE,oBAAGW,KAAK,UAAUX,UAAU,aAA5B,UACG,IADH,sBA3CN,cAAC,IAAD","file":"static/js/4.6c2a36d8.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport Loading from 'components/Loading'\nimport Button from 'components/atoms/Button'\nimport Layout from 'containers/Layout'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { LOGIN } from 'initials'\nimport FormInput from 'components/atoms/FormInput'\nimport { links } from 'constants/Links'\nimport { useHistory } from 'react-router-dom'\nimport { getAccessToken, network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\n\nconst Login = () => {\n  const [isLoaded, setIsLoaded] = useState(true)\n  const history = useHistory()\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Please add email address'),\n    password: Yup.string().required('Please add password').min(6).max(20),\n  })\n\n  const { setValues } = useUserContext()\n  const token = getAccessToken()\n\n  const [loading, setLoading] = useState(false)\n\n  const apiCall = async (values) => {\n    const { data } = await network.post(\n      '/auth/login',\n      {\n        email: values.email,\n        password: values.password,\n      },\n      {\n        headers: { Authorization: token },\n      }\n    )\n\n    //@ts-ignore\n    delete data._id\n    setValues({ ...data.data, ...data })\n\n    // if (res.status === 409) {\n    //   setErrors([...errors, 'User already exists'])\n    // }\n\n    // set token in localStorage\n    history.push(links.DASHBAORD)\n    localStorage.setItem('access_token', data.data.access_token)\n  }\n\n  const onSubmit = async (_values) => {\n    setLoading(true)\n\n    apiCall(_values)\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title=\"Sign in to your account\"\n      subtitle={\n        <p className=\"mt-1 text-center dark:text-gray-400 text-sm text-gray-600\">\n          Stay updated on your professional world\n        </p>\n      }\n    >\n      <div className=\"mt-8 mb-36 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-800 border border-transparent dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={LOGIN}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput label=\"Email\" id=\"email\" name=\"email\" required />\n\n              <FormInput\n                label=\"password\"\n                id=\"password\"\n                name=\"password\"\n                required\n                showPasswordButton\n              />\n\n              <div>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  loading={loading}\n                  label=\"Login\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <div className=\"mt-4 text-center dark:text-white\">\n          Not yet on 13RMS?\n          <a href=\"/signup\" className=\"link-hover\">\n            {' '}\n            Join now\n          </a>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default Login\n"],"sourceRoot":""}
{"version":3,"sources":["components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","components/atoms/FormSelector.tsx","pages/account/personal/LocationStep.tsx"],"names":["FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","onClick","length","AnimatedDiv","children","delay","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","color","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","open","Label","Button","onBlur","as","Fragment","Options","static","idx","Option","hasOwnProperty","active","classNames","selected","yourhandle","require","LastStep","user","isLoaded","history","useHistory","saving","setSaving","useEffect","other","accountFilled","console","log","push","links","FEED","accountFinishedStep","CHOOSE_TEMPLATE","LOCATION_P","renderPathByType","accountType","CHOOSE_ACCOUNT","redirection","setValues","useUserContext","onSubmit","values","a","token","getAccessToken","updatedData","location","livesIn","network","post","headers","Authorization","validationSchema","Yup","matches","min","max","shortName","longName","selectedLocation","setSelectedLocation","countries","getCountries","disabledItem","msg","stateList","setStateList","cityList","setCityList","initialValues","orderBy","states","getStatesByShort","updated","updateStates","cities","getCities","updateCities","fullWidth","rounded","gradient","loading","COMPANY","EDUCATION"],"mappings":"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","file":"static/js/48.43ff5fba.chunk.js","sourcesContent":["import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field?.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field?.value?.length > 0\n                  ? field?.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","import { useEffect, useState } from 'react'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport TextButton from 'components/atoms/TextButton'\nimport Loading from 'components/Loading'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { PersonalStepTwo } from 'initials'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { map, orderBy } from 'lodash'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport FormSelector from 'components/atoms/FormSelector'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport { useUserContext } from 'context/UserContext'\nimport { IParent } from 'interfaces/UniversalInterface'\n\nconst yourhandle = require('countrycitystatejson')\n\nconst LastStep = ({ user }: { user?: IParent }) => {\n  const [isLoaded] = useState(true)\n  const history = useHistory()\n\n  const [saving, setSaving] = useState(false)\n\n  const goBack = () => {\n    history.push(\n      user && user.other && user?.other.accountType === 'personal'\n        ? links.COMPANY\n        : links.EDUCATION\n    )\n  }\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountFinishedStep === 'location') {\n          // redirect to choose template page\n          console.log('redirect to choose template page')\n          return history.push(links.CHOOSE_TEMPLATE)\n        } else if (user.other?.accountFinishedStep === 'company') {\n          // redirect to location page\n          console.log('redirect to location page')\n          return history.push(links.LOCATION_P)\n        } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n          console.log('get the accountType and redirect as per account type')\n          // get the accountType and redirect as per account type\n          return history.push(renderPathByType(user.other?.accountType))\n        } else if (user.other?.accountFinishedStep === 'signup') {\n          // redirect to choose Account page\n          console.log('redirect to choose Account page')\n          return history.push(links.CHOOSE_ACCOUNT)\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [])\n\n  const { setValues } = useUserContext()\n\n  const onSubmit = async (values: {\n    country: any\n    pincode: any\n    state: any\n    city: any\n  }) => {\n    try {\n      const token = getAccessToken()\n      setSaving(true)\n\n      let updatedData = {\n        ...user,\n        location: {\n          ...user?.location,\n          country: values.country,\n          pincode: values.pincode,\n          state: values.state,\n          city: values.city,\n          livesIn: `${values.city} ${values.country}`,\n        },\n        other: {\n          ...user?.other,\n          accountFilled: false,\n          accountFinishedStep: 'location',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.CHOOSE_TEMPLATE)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const validationSchema = Yup.object({\n    state: Yup.string().required(),\n    country: Yup.string().required(),\n    city: Yup.string().required(),\n    pincode: Yup.string()\n      .required()\n      .matches(/^[0-9]+$/, 'Must be only digits')\n      .min(6, 'Must be exactly 6 digits')\n      .max(6, 'Must be exactly 6 digits'),\n  })\n\n  const [selectedLocation, setSelectedLocation] = useState({\n    country: { shortName: '', longName: '' },\n    state: '',\n    city: '',\n  })\n\n  const countries = yourhandle.getCountries()\n\n  const disabledItem = (msg: string) => [\n    {\n      name: msg,\n      disabled: true,\n    },\n  ]\n\n  const updateStates = (shortName: string) => {\n    const states = yourhandle.getStatesByShort(shortName)\n    const updated = map(states, (state) => ({ name: state }))\n    if (updated && updated.length > 0) {\n      setStateList(updated)\n    } else {\n      setStateList(disabledItem('No state found for selected country.'))\n    }\n  }\n\n  const updateCities = (shortName: string, state: any) => {\n    const cities = yourhandle.getCities(shortName, state)\n    const updated = map(cities, (city) => ({ name: city }))\n\n    if (updated && updated.length > 0) {\n      setCityList(updated)\n    } else {\n      setCityList(disabledItem('No city found for selected state.'))\n    }\n  }\n\n  const [stateList, setStateList] = useState<any[]>([])\n\n  const [cityList, setCityList] = useState<any>([])\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title={`Welcome, ${user?.firstName || 'Human'}!`}\n      subtitle={\n        <p>\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white  border border-transparent dark:border-gray-700  dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={PersonalStepTwo}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <div>\n                <FormSelector\n                  label={'Country / region'}\n                  list={orderBy(countries, ['name', 'asc'])}\n                  name=\"country\"\n                  required\n                  placeholder={'Select country'}\n                  onSelect={(item) => {\n                    updateStates(item.shortName)\n\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      country: {\n                        shortName: item.shortName,\n                        longName: item.name,\n                      },\n                    })\n                  }}\n                />\n              </div>\n              <div>\n                <FormSelector\n                  label=\"State\"\n                  list={stateList}\n                  name=\"state\"\n                  required\n                  placeholder={'Select state'}\n                  onSelect={(item) => {\n                    updateCities(selectedLocation.country.shortName, item.name)\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      state: item.name,\n                    })\n                  }}\n                />\n              </div>\n\n              <div>\n                <FormSelector\n                  label={'Ctiy'}\n                  name=\"city\"\n                  list={cityList}\n                  required\n                  placeholder={'Select city'}\n                  onSelect={(item) => {\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      city: item.name,\n                    })\n                  }}\n                />\n              </div>\n              <FormInput\n                label=\"Postal Code\"\n                id=\"pincode\"\n                name=\"pincode\"\n                placeholder=\"Postal Code\"\n                required\n              />\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  type=\"submit\"\n                  gradient\n                  loading={saving}\n                  label=\"Finish Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          text=\"Edit company details\"\n          onClick={goBack}\n          className=\"inline-block mt-4\"\n        />\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default LastStep\n"],"sourceRoot":""}
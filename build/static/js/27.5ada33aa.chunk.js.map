{"version":3,"sources":["components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","../../../src/hooks/use-computed.ts","../../../../src/components/listbox/listbox.tsx","components/atoms/FormSelector.tsx","../node_modules/countrycitystatejson/index.js","pages/account/personal/LocationStep.tsx"],"names":["FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","onClick","length","AnimatedDiv","children","delay","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","color","useComputed","cb","dependencies","cbRef","useRef","useIsoMorphicEffect","ListboxStates","ActionTypes","reducers","activeOptionIndex","listboxState","Closed","Open","action","orientation","calculateActiveIndex","resolveItems","resolveActiveIndex","resolveId","resolveDisabled","searchQuery","match","option","options","dataRef","nextOptions","currentActiveOption","idx","a","ListboxContext","createContext","useListboxContext","component","context","useContext","err","Error","Listbox","stateReducer","DEFAULT_LISTBOX_TAG","props","horizontal","passThroughProps","reducerBag","useReducer","propsRef","current","labelRef","createRef","buttonRef","optionsRef","dispatch","useWindowEvent","event","CloseListbox","isFocusableElement","FocusableMode","slot","useMemo","open","State","render","defaultTag","Button","forwardRefWithAs","useSyncRefs","useId","d","useDisposables","handleKeyDown","useCallback","Keys","OpenListbox","focus","Focus","First","Last","handleKeyUp","handleClick","isDisabledReactIssue7711","preventScroll","labelledby","passthroughProps","propsWeControl","ref","onKeyDown","onKeyUp","OptionsRenderFeatures","Features","Options","searchDisposables","usesOpenClosedState","useOpenClosed","container","document","key","disposables","vertical","ArrowRight","Next","ArrowLeft","Previous","ClearSearch","role","tabIndex","features","Label","Option","active","selected","bag","select","block","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","onBlur","as","Fragment","static","hasOwnProperty","classNames","db","require","compCities","getAll","getCountriesShort","res","push","getCountryByShort","shortName","getCountryInfoByShort","getStatesByShort","states","Object","keys","getCities","getCountries","obj","module","exports","yourhandle","LastStep","user","isLoaded","history","useHistory","saving","setSaving","useEffect","other","accountFilled","console","log","links","FEED","accountFinishedStep","CHOOSE_TEMPLATE","LOCATION_P","renderPathByType","accountType","CHOOSE_ACCOUNT","redirection","setValues","useUserContext","onSubmit","values","token","getAccessToken","updatedData","location","livesIn","network","post","headers","Authorization","validationSchema","Yup","matches","min","max","longName","selectedLocation","setSelectedLocation","countries","disabledItem","msg","stateList","setStateList","cityList","setCityList","initialValues","orderBy","updated","updateStates","cities","updateCities","fullWidth","rounded","gradient","loading","COMPANY","EDUCATION"],"mappings":"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","file":"static/js/27.5ada33aa.chunk.js","sourcesContent":["import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n","import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n\n  orientation: 'horizontal' | 'vertical'\n\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n  SetOrientation,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n    horizontal?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props\n  const orientation = horizontal ? 'horizontal' : 'vertical'\n\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetOrientation, orientation }), [\n    orientation,\n  ])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(listboxState, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passThroughProps,\n          slot,\n          defaultTag: DEFAULT_LISTBOX_TAG,\n          name: 'Listbox',\n        })}\n      </OpenClosedProvider>\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'aria-orientation'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.listboxState === ListboxStates.Open\n  })()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case match(state.orientation, { vertical: Keys.ArrowDown, horizontal: Keys.ArrowRight }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case match(state.orientation, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field.value.length > 0\n                  ? field.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","const db = require('./lib/compiledCities.json')\n\nvar compCities = {\n\n  getAll: () => { return db },\n  getCountriesShort: () => {\n    let res = []\n    for (var key in db) {\n      res.push(key)\n    }\n    return res\n  },\n  getCountryByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      return db[shortName]\n    } else {\n      return null\n    }\n  },\n  getCountryInfoByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          res[key] = db[shortName][key]\n        }\n      }\n      return res\n    } else {\n      return null\n    }\n  },\n  getStatesByShort: (shortName) => {\n    if (typeof db[shortName] !== 'undefined') {\n      let res = []\n      if (typeof db[shortName].states !== 'undefined') {\n        res = Object.keys(db[shortName].states)\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCities: (shortName, state) => {\n    if (typeof db[shortName] !== 'undefined') {\n      if (typeof db[shortName].states != 'undefined') {\n        let res=[]\n        for (let idx in  db[shortName].states[state]) {\n          res.push(db[shortName].states[state][idx].name)\n        }\n        return res\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  },\n  getCountries: () => {\n    let res = []\n    for (var shortName in db) {\n      let obj = {}\n      for (var key in db[shortName]) {\n        if (key !== 'states') {\n          obj.shortName = shortName\n          obj[key] = db[shortName][key]\n        }\n      }\n      res.push(obj)\n    }\n    return res\n  }\n}\n\nmodule.exports = compCities\n","import { useEffect, useState } from 'react'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport TextButton from 'components/atoms/TextButton'\nimport Loading from 'components/Loading'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { PersonalStepTwo } from 'initials'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { map, orderBy } from 'lodash'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport FormSelector from 'components/atoms/FormSelector'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport { useUserContext } from 'context/UserContext'\nimport { IParent } from 'interfaces/UniversalInterface'\n\nconst yourhandle = require('countrycitystatejson')\n\nconst LastStep = ({ user }: { user?: IParent }) => {\n  const [isLoaded] = useState(true)\n  const history = useHistory()\n\n  const [saving, setSaving] = useState(false)\n\n  const goBack = () => {\n    history.push(\n      user && user.other && user?.other.accountType === 'personal'\n        ? links.COMPANY\n        : links.EDUCATION\n    )\n  }\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountFinishedStep === 'location') {\n          // redirect to choose template page\n          console.log('redirect to choose template page')\n          return history.push(links.CHOOSE_TEMPLATE)\n        } else if (user.other?.accountFinishedStep === 'company') {\n          // redirect to location page\n          console.log('redirect to location page')\n          return history.push(links.LOCATION_P)\n        } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n          console.log('get the accountType and redirect as per account type')\n          // get the accountType and redirect as per account type\n          return history.push(renderPathByType(user.other?.accountType))\n        } else if (user.other?.accountFinishedStep === 'signup') {\n          // redirect to choose Account page\n          console.log('redirect to choose Account page')\n          return history.push(links.CHOOSE_ACCOUNT)\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [])\n\n  const { setValues } = useUserContext()\n\n  const onSubmit = async (values: {\n    country: any\n    pincode: any\n    state: any\n    city: any\n  }) => {\n    try {\n      const token = getAccessToken()\n      setSaving(true)\n\n      let updatedData = {\n        ...user,\n        location: {\n          ...user?.location,\n          country: values.country,\n          pincode: values.pincode,\n          state: values.state,\n          city: values.city,\n          livesIn: `${values.city} ${values.country}`,\n        },\n        other: {\n          ...user?.other,\n          accountFilled: false,\n          accountFinishedStep: 'location',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.CHOOSE_TEMPLATE)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const validationSchema = Yup.object({\n    state: Yup.string().required(),\n    country: Yup.string().required(),\n    city: Yup.string().required(),\n    pincode: Yup.string()\n      .required()\n      .matches(/^[0-9]+$/, 'Must be only digits')\n      .min(6, 'Must be exactly 6 digits')\n      .max(6, 'Must be exactly 6 digits'),\n  })\n\n  const [selectedLocation, setSelectedLocation] = useState({\n    country: { shortName: '', longName: '' },\n    state: '',\n    city: '',\n  })\n\n  const countries = yourhandle.getCountries()\n\n  const disabledItem = (msg: string) => [\n    {\n      name: msg,\n      disabled: true,\n    },\n  ]\n\n  const updateStates = (shortName: string) => {\n    const states = yourhandle.getStatesByShort(shortName)\n    const updated = map(states, (state) => ({ name: state }))\n    if (updated && updated.length > 0) {\n      setStateList(updated)\n    } else {\n      setStateList(disabledItem('No state found for selected country.'))\n    }\n  }\n\n  const updateCities = (shortName: string, state: any) => {\n    const cities = yourhandle.getCities(shortName, state)\n    const updated = map(cities, (city) => ({ name: city }))\n\n    if (updated && updated.length > 0) {\n      setCityList(updated)\n    } else {\n      setCityList(disabledItem('No city found for selected state.'))\n    }\n  }\n\n  const [stateList, setStateList] = useState<any[]>([])\n\n  const [cityList, setCityList] = useState<any>([])\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title={`Welcome, ${user?.firstName || 'Human'}!`}\n      subtitle={\n        <p>\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white  border border-transparent dark:border-gray-700  dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={PersonalStepTwo}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <div>\n                <FormSelector\n                  label={'Country / region'}\n                  list={orderBy(countries, ['name', 'asc'])}\n                  name=\"country\"\n                  required\n                  placeholder={'Select country'}\n                  onSelect={(item) => {\n                    updateStates(item.shortName)\n\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      country: {\n                        shortName: item.shortName,\n                        longName: item.name,\n                      },\n                    })\n                  }}\n                />\n              </div>\n              <div>\n                <FormSelector\n                  label=\"State\"\n                  list={stateList}\n                  name=\"state\"\n                  required\n                  placeholder={'Select state'}\n                  onSelect={(item) => {\n                    updateCities(selectedLocation.country.shortName, item.name)\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      state: item.name,\n                    })\n                  }}\n                />\n              </div>\n\n              <div>\n                <FormSelector\n                  label={'Ctiy'}\n                  name=\"city\"\n                  list={cityList}\n                  required\n                  placeholder={'Select city'}\n                  onSelect={(item) => {\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      city: item.name,\n                    })\n                  }}\n                />\n              </div>\n              <FormInput\n                label=\"Postal Code\"\n                id=\"pincode\"\n                name=\"pincode\"\n                placeholder=\"Postal Code\"\n                required\n              />\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  type=\"submit\"\n                  gradient\n                  loading={saving}\n                  label=\"Finish Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          text=\"Edit company details\"\n          onClick={goBack}\n          className=\"inline-block mt-4\"\n        />\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default LastStep\n"],"sourceRoot":""}
{"version":3,"sources":["components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","../../../src/hooks/use-tree-walker.ts","../../../../src/components/radio-group/radio-group.tsx","../../../src/hooks/use-flags.ts","pages/account/other/ChooseAccount.tsx"],"names":["AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","name","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","useTreeWalker","container","accept","walk","enabled","acceptRef","useRef","walkRef","useEffect","useIsoMorphicEffect","acceptNode","Object","walker","document","NodeFilter","ActionTypes","reducers","options","state","id","action","element","propsRef","idx","radio","RadioGroupContext","createContext","useRadioGroupContext","component","context","useContext","err","Error","RadioGroup","stateReducer","match","props","value","onChange","disabled","passThroughProps","useReducer","dispatch","useLabels","labelledby","LabelProvider","useDescriptions","describedby","DescriptionProvider","useId","radioGroupRef","firstOption","useMemo","option","containsCheckedOption","triggerChange","useCallback","nextValue","nextOption","node","handleKeyDown","all","event","Keys","focusIn","Focus","FocusResult","activeOption","registerOption","type","RegisterOption","api","change","propsWeControl","ref","role","onKeyDown","render","defaultTag","OptionState","Option","optionRef","initialFlags","useState","flags","setFlags","addFlag","hasFlag","Boolean","removeFlag","toggleFlag","useFlags","radioGroupDisabled","radioGroupValue","handleClick","handleFocus","handleBlur","isFirstOption","isDisabled","checked","tabIndex","onClick","undefined","onFocus","onBlur","slot","active","settings","description","ChooseAccount","user","selected","setSelected","history","useHistory","loading","setLoading","errors","setErrors","setValues","useUserContext","onNext","a","path","links","COMPANY","EDUCATION","BUSINESS_STEP_1","token","getAccessToken","profileUrl","firstName","lastName","myId","_id","toLowerCase","updatedData","other","accountFinishedStep","accountType","toLocaleLowerCase","network","post","headers","Authorization","push","console","error","Label","setting","settingIdx","classNames","as","Description","fullWidth","label","gradient","length"],"mappings":"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","file":"static/js/41.9bba4074.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","import { useRef, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled = true,\n}: {\n  container: HTMLElement | null\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: boolean\n}) {\n  let acceptRef = useRef(accept)\n  let walkRef = useRef(walk)\n\n  useEffect(() => {\n    acceptRef.current = accept\n    walkRef.current = walk\n  }, [accept, walk])\n\n  useIsoMorphicEffect(() => {\n    if (!container) return\n    if (!enabled) return\n\n    let accept = acceptRef.current\n    let walk = walkRef.current\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  }, [container, enabled, acceptRef, walkRef])\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","import { RadioGroup } from '@headlessui/react'\nimport Error from 'components/alerts/Error'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport Button from 'components/atoms/Button'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { classNames } from 'utils/classNames'\n\nconst settings = [\n  {\n    name: 'Personal',\n    description: 'If you are creating account for personal use, select this',\n  },\n  {\n    name: 'Student',\n    description: 'If you are student then select this',\n  },\n  {\n    name: 'Business',\n    description:\n      'If you are creating account for the business then select this',\n  },\n]\n\nconst ChooseAccount = ({ user }: { user?: IParent }) => {\n  const [selected, setSelected] = useState(settings[0])\n  const history = useHistory()\n\n  const [loading, setLoading] = useState(false)\n\n  const [errors, setErrors] = useState<string[]>([])\n\n  const { setValues } = useUserContext()\n\n  const onNext = async () => {\n    let path\n    if (selected.name === 'Personal') {\n      path = links.COMPANY\n    } else if (selected.name === 'Student') {\n      path = links.EDUCATION\n    } else {\n      path = links.BUSINESS_STEP_1\n    }\n\n    try {\n      setLoading(true)\n\n      const token = getAccessToken()\n\n      const profileUrl = `${user?.firstName}_${user?.lastName}_${\n        user?.myId || user?._id\n      }`.toLowerCase()\n\n      const updatedData = {\n        ...user,\n        profileUrl,\n        other: {\n          ...user?.other,\n          accountFinishedStep: 'chooseAccount',\n          accountType: selected.name.toLocaleLowerCase(),\n        },\n      }\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n      setValues({ ...updatedData })\n\n      setErrors([])\n      history.push(path)\n    } catch (error) {\n      setErrors(['Oops! Something went wrong'])\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div>\n      <Layout title=\"Choose account type\" subtitle=\"\">\n        <AnimatedDiv className=\"mt-4 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white dark:border-gray-700 border border-white dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n            <RadioGroup value={selected} onChange={setSelected}>\n              <RadioGroup.Label className=\"sr-only\">\n                Privacy setting\n              </RadioGroup.Label>\n              <div className=\"bg-white dark:bg-gray-900 rounded-md space-y-4\">\n                {settings.map((setting, settingIdx) => (\n                  <RadioGroup.Option\n                    key={setting.name}\n                    value={setting}\n                    className={({ checked }) =>\n                      classNames(\n                        checked\n                          ? 'bg-pink-50 dark:bg-gray-900 rounded-md dark:border-pink-700 border-pink-200 z-10'\n                          : 'border-gray-200 dark:border-gray-700 rounded-md',\n                        'relative border p-4 transition-all duration-200 flex overflow-hidden cursor-pointer focus:outline-none'\n                      )\n                    }\n                  >\n                    {({ active, checked }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            checked\n                              ? 'bg-pink-600 border-transparent'\n                              : 'bg-white border-gray-300',\n                            active ? 'ring-2 ring-offset-2 ring-pink-500' : '',\n                            'h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center'\n                          )}\n                          aria-hidden=\"true\"\n                        >\n                          <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\n                        </span>\n                        <div className=\"ml-3 flex flex-col items-start\">\n                          <RadioGroup.Label\n                            as=\"span\"\n                            className={classNames(\n                              checked\n                                ? 'gradient-text'\n                                : 'dark:text-white text-gray-900',\n                              'block text-sm font-medium mb-2'\n                            )}\n                          >\n                            {setting.name}\n                          </RadioGroup.Label>\n                          <RadioGroup.Description\n                            as=\"span\"\n                            className={classNames(\n                              checked ? 'gradient-text' : 'text-gray-500',\n                              'block text-sm'\n                            )}\n                          >\n                            {setting.description}\n                          </RadioGroup.Description>\n                        </div>\n                      </>\n                    )}\n                  </RadioGroup.Option>\n                ))}\n              </div>\n            </RadioGroup>\n            <Button\n              loading={loading}\n              fullWidth\n              label=\"Next\"\n              className=\"mt-4\"\n              gradient\n              onClick={onNext}\n            />\n            {errors.length > 0 && <Error errors={errors} />}\n          </div>\n        </AnimatedDiv>\n      </Layout>\n    </div>\n  )\n}\n\nexport default ChooseAccount\n"],"sourceRoot":""}
{"version":3,"sources":["components/atoms/Modal.tsx","hooks/useUser.ts","components/Spinner.tsx","components/atoms/SectionTitle.tsx","components/Dropdown/Dropdown.tsx","assets/svg/placeholder.png","pages/products/QuickOverview.tsx","pages/products/Product.tsx","components/atoms/products/Section.tsx","components/atoms/Label.tsx","pages/store/BannerImage.tsx","hooks/useScrollPosition.ts","pages/store/NewSection.tsx","pages/store/ViewStore.tsx"],"names":["Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Spinner","SectionTitle","title","gradient","Dropdown","list","Button","Items","map","item","Item","active","e","stopPropagation","classNames","Icon","name","QuickOverview","setShow","product","useState","availableColors","class","selectedClass","selectedColor","setSelectedColor","availableSizes","inStock","selectedSize","setSelectedSize","fontSize","images","length","src","url","alt","productName","id","price","rating","href","reviews","value","onChange","Label","color","Option","background","code","checked","size","fullWidth","label","Product","showWhoPurchased","purchasedBy","loadingFriends","userId","quickOverviewModal","setQuickOverviewModal","itsMyProduct","postedBy","toString","_delete","useMutation","deleteProduct","onSuccess","dropdownList","mutate","filter","Boolean","friend","links","getProfileById","other","template","fullName","coverPicture","getProductUrl","eclipse","Section","showChildren","noDataText","_ref","ref","content","subtitle","hideBorders","iconUrl","text","required","BannerImage","onImageSelect","media","setMedia","bannerRef","useRef","backgroundImage","URL","createObjectURL","placeholder","accept","current","click","React","memo","useScrollPosition","scrollPosition","setScrollPosition","useEffect","updatePosition","window","pageYOffset","addEventListener","removeEventListener","NewSectionModal","formRef","addNewSection","addingSection","isSuccess","upload","uploadMediaToServer","a","b","values","finalInput","image","location","section","validationSchema","Yup","min","max","initialValues","innerRef","onSubmit","fd","FormData","append","setFieldValue","target","files","FormInput","rounded","loading","ListProducts","onLoad","fetchAllProducts","products","sectionData","ViewStore","route","useRouter","match","params","publishStore","setIsPublished","isPublished","scroll","newSectionModal","setNewSectionModal","user","store","titleOpacity","setNotification","useNotifications","storeCreated","Loading","NewSection","Meta","pageTitle","pageUrl","getProfile","imageUrl","bannerImage","keywords","DashboardHeader","height","profilePicture","business","NarrowLayout","customMaxWidth","sec","VscEdit","MdPublish","firstName","buttonText","undefined","buttonUrl","openStore","to","FEED"],"mappings":"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","file":"static/js/20.cca1149b.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block overflow-visible align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-4\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","const SectionTitle = ({\n  title,\n  gradient = true,\n  className,\n}: {\n  title: string\n  gradient?: boolean\n  className?: string\n}) => {\n  return (\n    <h2\n      className={`${className} text-2xl mb-6 font-extrabold ${\n        gradient ? 'gradient-border' : ''\n      } border-b pb-2 tracking-tight\n         dark:text-white text-gray-900`}\n    >\n      {title}\n    </h2>\n  )\n}\n\nexport default SectionTitle\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items\n          style={{ zIndex: 999 }}\n          className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\"\n        >\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import { Dialog, RadioGroup, Transition } from '@headlessui/react'\nimport { StarIcon, XIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport React, { Fragment, useState } from 'react'\nimport { classNames } from 'utils/classNames'\n\nconst QuickOverview = ({ show, setShow, product }: any) => {\n  const [selectedColor, setSelectedColor] = useState(\n    product\n      ? product.availableColors[0]\n      : { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' }\n  )\n  const [selectedSize, setSelectedSize] = useState(\n    product ? product.availableSizes[1] : { name: 'XXS', inStock: false }\n  )\n\n  return (\n    <Transition.Root show={show} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        onClose={setShow}\n      >\n        <div\n          className=\"pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0\"\n          style={{ fontSize: 0 }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden md:inline-block md:align-middle md:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 md:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 md:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 md:translate-y-0 md:scale-95\"\n          >\n            <div className=\"flex text-base  text-left transform transition w-full md:inline-block md:max-w-2xl md:px-4 md:my-8 md:align-middle lg:max-w-4xl\">\n              <div className=\"w-full relative flex items-center bg-white dark:bg-gray-900 px-4 pt-14 pb-8 overflow-hidden shadow-2xl sm:px-6 sm:pt-8 md:p-6 lg:p-8\">\n                <button\n                  type=\"button\"\n                  className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-500 sm:top-8 sm:right-6 md:top-6 md:right-6 lg:top-8 lg:right-8\"\n                  onClick={() => setShow(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <div className=\"w-full grid grid-cols-1 gap-y-8 gap-x-6 items-start sm:grid-cols-12 lg:gap-x-8\">\n                  <div className=\"aspect-w-2 aspect-h-3 rounded-lg bg-gray-100 dark:bg-gray-700 overflow-hidden sm:col-span-4 lg:col-span-5\">\n                    {product?.images?.length > 0 ? (\n                      <img\n                        src={product.images[0].url}\n                        alt={product.images[0].alt}\n                        className=\"object-center object-cover\"\n                      />\n                    ) : (\n                      <div />\n                    )}\n                  </div>\n                  <div className=\"sm:col-span-8 lg:col-span-7\">\n                    <h2 className=\"text-2xl font-extrabold dark:text-white text-gray-900 sm:pr-12\">\n                      {product.productName}\n                    </h2>\n\n                    <section\n                      aria-labelledby=\"information-heading\"\n                      className=\"mt-2\"\n                    >\n                      <h3 id=\"information-heading\" className=\"sr-only\">\n                        Product information\n                      </h3>\n\n                      <p className=\"text-2xl text-gray-900 dark:text-white\">\n                        ${product.price}\n                      </p>\n\n                      {/* Reviews */}\n                      <div className=\"mt-6\">\n                        <h4 className=\"sr-only\">Reviews</h4>\n                        <div className=\"flex items-center\">\n                          <div className=\"flex items-center\">\n                            {[0, 1, 2, 3, 4].map((rating) => (\n                              <StarIcon\n                                key={rating}\n                                className={classNames(\n                                  4 > rating\n                                    ? 'text-yellow-500'\n                                    : 'text-gray-200',\n                                  'h-5 w-5 flex-shrink-0'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ))}\n                          </div>\n                          <p className=\"sr-only\">\n                            {product.rating} out of 5 stars\n                          </p>\n                          <a\n                            href=\"#/\"\n                            className=\"ml-3 text-sm font-medium gradient-text\"\n                          >\n                            {product?.reviews?.length} reviews\n                          </a>\n                        </div>\n                      </div>\n                    </section>\n\n                    <section\n                      aria-labelledby=\"options-heading\"\n                      className=\"mt-10\"\n                    >\n                      <h3 id=\"options-heading\" className=\"sr-only\">\n                        Product options\n                      </h3>\n\n                      <form>\n                        {/* Colors */}\n                        {product?.availableColors &&\n                          product?.availableColors?.length > 0 && (\n                            <div>\n                              <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                Color\n                              </h4>\n\n                              <RadioGroup\n                                value={selectedColor}\n                                onChange={setSelectedColor}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a color\n                                </RadioGroup.Label>\n                                <div className=\"flex items-center space-x-3\">\n                                  {product.availableColors.map((color: any) => (\n                                    <RadioGroup.Option\n                                      key={color.name}\n                                      value={color}\n                                      style={{ background: color.code }}\n                                      className={({ active, checked }) =>\n                                        classNames(\n                                          active && checked\n                                            ? 'ring ring-offset-1'\n                                            : '',\n                                          !active && checked ? 'ring-2' : '',\n                                          '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                                        )\n                                      }\n                                    >\n                                      <RadioGroup.Label\n                                        as=\"p\"\n                                        className=\"sr-only\"\n                                      >\n                                        {color.name}\n                                      </RadioGroup.Label>\n                                      <span\n                                        aria-hidden=\"true\"\n                                        className={classNames(\n                                          color.class,\n                                          'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                                        )}\n                                      />\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        {/* Sizes */}\n                        {product?.availableSizes &&\n                          product?.availableSizes?.length > 0 && (\n                            <div className=\"mt-10\">\n                              <div className=\"flex items-center justify-between\">\n                                <h4 className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                                  Size\n                                </h4>\n                                <a\n                                  href=\"#/\"\n                                  className=\"text-sm font-medium gradient-text \"\n                                >\n                                  Size guide\n                                </a>\n                              </div>\n\n                              <RadioGroup\n                                value={selectedSize}\n                                onChange={setSelectedSize}\n                                className=\"mt-4\"\n                              >\n                                <RadioGroup.Label className=\"sr-only\">\n                                  Choose a size\n                                </RadioGroup.Label>\n                                <div className=\"grid grid-cols-4 gap-4\">\n                                  {product.availableSizes.map((size: any) => (\n                                    <RadioGroup.Option\n                                      key={size.name}\n                                      value={size}\n                                      // disabled={!size.inStock}\n                                      className={({ active }) =>\n                                        classNames(\n                                          'bg-gray-50 text-gray-200 cursor-not-allowed',\n                                          active\n                                            ? 'ring-2 ring-indigo-500'\n                                            : '',\n                                          'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1'\n                                        )\n                                      }\n                                    >\n                                      {({ active, checked }) => (\n                                        <>\n                                          <RadioGroup.Label as=\"p\">\n                                            {size.name}\n                                          </RadioGroup.Label>\n                                          <div\n                                            className={classNames(\n                                              active ? 'border' : 'border-2',\n                                              checked\n                                                ? 'border-indigo-500'\n                                                : 'border-transparent',\n                                              'absolute -inset-px rounded-md pointer-events-none'\n                                            )}\n                                            aria-hidden=\"true\"\n                                          />\n                                        </>\n                                      )}\n                                    </RadioGroup.Option>\n                                  ))}\n                                </div>\n                              </RadioGroup>\n                            </div>\n                          )}\n\n                        <Button\n                          size=\"xl\"\n                          className=\"mt-10\"\n                          fullWidth\n                          gradient\n                          label=\"Add to bag\"\n                        />\n                      </form>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default QuickOverview\n","import Dropdown from 'components/Dropdown/Dropdown'\nimport { links } from 'constants/Links'\nimport { IProduct, IShortProfile } from 'interfaces/UniversalInterface'\nimport QuickOverview from 'pages/products/QuickOverview'\nimport { useState } from 'react'\nimport { eclipse } from 'utils/functions'\nimport { useMutation } from 'react-query'\nimport { deleteProduct } from 'apis/mutations'\n\nconst Product = ({\n  product,\n  showWhoPurchased = false,\n  purchasedBy,\n  loadingFriends,\n  userId,\n}: {\n  loadingFriends?: boolean\n  product: IProduct\n  showWhoPurchased?: boolean\n  purchasedBy?: IShortProfile[]\n  userId: string\n}) => {\n  const [quickOverviewModal, setQuickOverviewModal] = useState(false)\n  const itsMyProduct = product.postedBy.toString() === userId\n\n  const _delete = useMutation(deleteProduct, { onSuccess: () => {} })\n\n  const dropdownList = [\n    {\n      id: '1',\n      name: 'Add to bag',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '2',\n      name: 'Add to favorites',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    {\n      id: '3',\n      name: 'Quick Overview',\n      onClick: () => {\n        setQuickOverviewModal(true)\n      },\n    },\n    itsMyProduct && {\n      id: 'ddfd413',\n      name: 'Delete',\n      onClick: () => {\n        _delete.mutate(product._id)\n      },\n    },\n  ].filter(Boolean)\n\n  return (\n    <>\n      <QuickOverview\n        product={product}\n        show={quickOverviewModal}\n        setShow={setQuickOverviewModal}\n      />\n      <div className=\"group\">\n        {showWhoPurchased && !loadingFriends && (\n          <div className=\"mb-2 cursor-pointer \">\n            <div className=\"flex overflow-hidden -space-x-1\">\n              {purchasedBy.map((friend) => (\n                <a\n                  href={links.getProfileById(\n                    friend.profileUrl,\n                    friend?.other?.template,\n                    'private'\n                  )}\n                >\n                  <img\n                    title={friend.fullName}\n                    key={friend._id}\n                    className=\"inline-block h-8 w-8 rounded-full ring-2 ring-white dark:ring-gray-800\"\n                    src={friend.coverPicture}\n                    alt={''}\n                  />\n                </a>\n              ))}\n            </div>\n          </div>\n        )}\n        <a\n          key={product._id}\n          href={`${links.getProductUrl(product._id)}`}\n          className=\"group\"\n        >\n          <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n            {product?.images?.length > 0 ? (\n              <img\n                src={product.images[0].url}\n                alt={product.images[0].alt}\n                className=\"w-full h-full object-center object-cover group-hover:opacity-75 transition-all\"\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        </a>\n        <div className=\"flex mt-4 items-start justify-between\">\n          <div>\n            <h3 className=\" text-sm  text-gray-700 dark:text-gray-400\">\n              {eclipse(product.productName, 60)}\n            </h3>\n            <p className=\"mt-1 text-lg font-medium dark:text-white text-gray-900\">\n              ${product.price}\n            </p>\n          </div>\n          <div>\n            <Dropdown list={dropdownList} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Product\n","import Card from 'components/atoms/Card'\nimport EmptyState from 'components/atoms/EmptyState'\nimport SectionTitle from 'components/atoms/SectionTitle'\nimport { LegacyRef } from 'react'\n\nconst Section = ({\n  children,\n  title = '',\n  showChildren,\n  // @ts-ignore\n  noDataText = 'No products found',\n  _ref,\n}: {\n  _ref?: LegacyRef<HTMLDivElement> | undefined\n  showChildren?: boolean\n  children: React.ReactNode\n  title?: string\n  noDataText?: string\n}) => {\n  return (\n    <div ref={_ref} className=\"\">\n      {title && <h2 className=\"sr-only\">{title}</h2>}\n      {title && <SectionTitle title={title} />}\n\n      {showChildren ? (\n        <div className=\" grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n          {children}\n        </div>\n      ) : (\n        <Card\n          content={\n            <div>\n              <EmptyState\n                title={noDataText}\n                subtitle=\"Cannot find products\"\n                hideBorders\n                iconUrl=\"/empty-cart.png\"\n              />\n            </div>\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","const Label = ({\n  text,\n  className,\n  required = false,\n}: {\n  text: string\n  className?: string\n  required?: boolean\n}) => {\n  return (\n    <label\n      className={`block dark:text-white text-sm font-medium text-gray-700 ${className}`}\n    >\n      {text}{' '}\n      {required ? (\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n          *\n        </span>\n      ) : (\n        // to remove white space\n        <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n      )}\n    </label>\n  )\n}\n\nexport default Label\n","import placeholder from 'assets/svg/placeholder.png'\nimport React, { useRef } from 'react'\n\nconst BannerImage = ({ onImageSelect, media, setMedia }: any) => {\n  const bannerRef = useRef()\n\n  const openFileExplorer = () =>\n    //@ts-ignore\n    bannerRef?.current?.click()\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${\n          media ? URL.createObjectURL(media) : placeholder\n        })`,\n      }}\n      className=\"h-96 bg-center flex items-center justify-center bg-no-repeat bg-cover shadow-xl rounded-xl w-full border border-gray-200 dark:border-gray-700\"\n    >\n      <input\n        ref={bannerRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, setMedia)}\n        accept={'image/x-png,image/jpeg'}\n      />\n      <h1\n        onClick={openFileExplorer}\n        className=\"text-3xl font-bold  transition-all cursor-pointer bg-transparent hover:bg-white px-2 py-2 hover:text-gray-700 text-white\"\n      >\n        {media ? 'Change' : '+ Choose'} Banner Image\n      </h1>\n    </div>\n  )\n}\n\nexport default React.memo(BannerImage)\n","import { useEffect, useState } from 'react'\n\nconst useScrollPosition = () => {\n  const [scrollPosition, setScrollPosition] = useState(0)\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset)\n    }\n    window.addEventListener('scroll', updatePosition)\n    updatePosition()\n    return () => window.removeEventListener('scroll', updatePosition)\n  }, [])\n\n  return scrollPosition\n}\n\nexport default useScrollPosition\n","import { addNewSection, uploadMediaToServer } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Label from 'components/atoms/Label'\nimport Modal from 'components/atoms/Modal'\nimport { Form, Formik } from 'formik'\nimport BannerImage from 'pages/store/BannerImage'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\n\nconst NewSectionModal = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const formRef = useRef()\n\n  const initialValues = {\n    title: '',\n    content: '',\n  }\n\n  const {\n    isLoading: addingSection,\n    mutate,\n    isSuccess,\n  } = useMutation(addNewSection)\n\n  useEffect(() => {\n    if (isSuccess) {\n      setOpen(false)\n    }\n  }, [isSuccess])\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a, b) => {\n      // @ts-ignore\n      const values = formRef?.current?.values\n      if (formRef?.current && values) {\n        const finalInput = {\n          image: a.data.data.location,\n          ...values,\n        }\n\n        mutate({ section: finalInput })\n      }\n    },\n  })\n\n  const onSubmit = (e: any) => {\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const [media, setMedia] = useState(null)\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Section title is required').min(3).max(150),\n    content: Yup.string()\n      // .test(regex)\n      .required('Section content is required')\n      .min(5)\n      .max(150),\n  })\n\n  const onImageSelect = (e: any, setFieldValue: any) => {\n    const img = e.target.files[0]\n\n    setFieldValue(img)\n  }\n\n  return (\n    <Modal header=\"Add Section\" open={open} setOpen={setOpen}>\n      <div>\n        <Formik\n          initialValues={initialValues}\n          innerRef={formRef}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          <Form className=\"my-4 flex flex-col gap-y-12\">\n            <div className=\"grid grid-cols-1 gap-y-12\">\n              <div>\n                <Label text=\"Image\" />\n                <BannerImage\n                  media={media}\n                  setMedia={setMedia}\n                  onImageSelect={onImageSelect}\n                />\n              </div>\n              <div>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-12\">\n                  <div>\n                    <Label text=\"Title\" />\n                    <FormInput\n                      name=\"title\"\n                      placeholder=\"The main header of section\"\n                    />\n                  </div>\n                  <div>\n                    <Label text=\"Content\" />\n                    <FormInput\n                      name=\"content\"\n                      placeholder=\"Give a little description about the section\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center justify-end\">\n                <Button\n                  type=\"submit\"\n                  rounded=\"rounded-lg\"\n                  loading={addingSection || upload.isLoading}\n                  gradient\n                  size=\"lg\"\n                  label=\"Add section\"\n                />\n              </div>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default NewSectionModal\n","import { fetchAllProducts } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Loading from 'components/Loading'\nimport ProductSection from 'components/atoms/products/Section'\nimport Spinner from 'components/Spinner'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useRouter } from 'hooks/useRouter'\nimport useScrollPosition from 'hooks/useScrollPosition'\nimport useUser from 'hooks/useUser'\nimport { IParent, IProduct, IStoreSection } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport Product from 'pages/products/Product'\nimport NewSectionModal from 'pages/store/NewSection'\nimport { useState } from 'react'\nimport { MdPublish } from 'react-icons/md'\nimport { VscEdit } from 'react-icons/vsc'\nimport 'styles/store.scss'\nimport { useMutation, useQuery } from 'react-query'\nimport { publishStore } from 'apis/mutations'\nimport { Redirect } from 'react-router'\nimport { useNotifications } from 'context/NotificationContext'\n\nconst ListProducts = ({ userId, onLoad }: { userId: string; onLoad?: any }) => {\n  const { isLoading, data, isFetched, isSuccess } = useQuery(\n    'list-all-my-products',\n    () => fetchAllProducts(userId)\n  )\n  const products: IProduct[] = isFetched && !isLoading && data.data.data\n\n  if (isSuccess && products && products?.length > 0) {\n    if (onLoad) {\n      onLoad(products)\n    }\n  }\n\n  return (\n    <ProductSection showChildren>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        products &&\n        products?.length > 0 &&\n        products?.map((product) => (\n          <Product userId={userId} key={product._id} product={product} />\n        ))\n      )}\n    </ProductSection>\n  )\n}\n\nconst Section = ({ sectionData }: { sectionData: IStoreSection }) => {\n  return (\n    <div className=\"w-full min-w-full max-h-84 min-h-84 border dark:border-gray-700   border-gray-200  lg:max-w-xs bg-white grid grid-cols-1 lg:grid-cols-2 dark:bg-gray-800 px-12\">\n      <img\n        src={sectionData.image}\n        alt=\"\"\n        className=\"-mt-12 object-contain shadow-xl\"\n      />\n      <div className=\"text-left text-xl dark:text-white flex flex-col justify-center ml-12 lg:ml-24\">\n        <h1 className=\"text-left \">{sectionData.title}</h1>\n        <p className=\"mt-4 text-base border-l-2 pl-2 max-w-96 border-yellow-500 dark:text-gray-400\">\n          {sectionData.content}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nconst ViewStore = ({ userData }: { userData: IParent }) => {\n  const route: any = useRouter()\n  const { profileUrl } = route?.match?.params\n\n  const { otherUserData, iAmOwnerOfThisProfile, isFetched, isLoading } =\n    useUser(profileUrl, userData)\n\n  const { mutate } = useMutation(publishStore, {\n    onSuccess: () => setIsPublished(!isPublished),\n  })\n\n  const scroll = useScrollPosition()\n\n  const [newSectionModal, setNewSectionModal] = useState(false)\n\n  const user = iAmOwnerOfThisProfile ? userData : otherUserData\n\n  const store = user?.store\n\n  const [isPublished, setIsPublished] = useState(store?.isPublished)\n\n  const titleOpacity =\n    scroll < 70 ? 'opacity-100' : scroll >= 70 ? 'opacity-70' : 'opacity-10'\n\n  const { setNotification } = useNotifications()\n\n  const storeCreated = store && (iAmOwnerOfThisProfile || isPublished)\n  if (!isFetched && isLoading) {\n    return <Loading />\n  }\n  if (!storeCreated) {\n    setNotification({\n      show: true,\n      // eslint-disable-next-line quotes\n      title: `${\n        iAmOwnerOfThisProfile ? 'You have' : `${userData.firstName} has`\n      } not opened store yet.`,\n      buttonText: iAmOwnerOfThisProfile ? 'Open now' : undefined,\n      buttonUrl: iAmOwnerOfThisProfile ? links.openStore() : undefined,\n    })\n    return <Redirect to={links.FEED} />\n  } else {\n    return (\n      <div className=\"smooth-scroll\">\n        <NewSectionModal open={newSectionModal} setOpen={setNewSectionModal} />\n        <Meta\n          pageTitle={`Store | ${user.fullName} | 13RMS`}\n          title={`Store | ${user.fullName}`}\n          pageUrl={links.getProfile(user)}\n          imageUrl={store.bannerImage}\n          keywords={`store,${user.fullName} store,13rms`}\n        />\n        <DashboardHeader userData={userData} />\n\n        <div style={{ height: 2000 }} className=\"pt-20 \">\n          <div\n            style={{ backgroundImage: `url(${store.bannerImage})` }}\n            className=\"parallax flex items-center justify-center flex-col\"\n          >\n            <img\n              src={user?.profilePicture}\n              alt=\"\"\n              className=\"border-gradient border-transparent border-4 h-20 w-20 sm:h-28 sm:w-28 mb-2 cursor-pointer rounded-full shadow-xl\"\n            />\n            <h1\n              className={`text-4xl xl:text-6xl transition-all duration-300 font-bold text-white filter drop-shadow-2xl tracking-wide leading-1 ${titleOpacity}`}\n            >\n              {user?.business?.name || 'Store'}\n            </h1>\n          </div>\n          {store.section.length > 0 && (\n            <NarrowLayout className=\"mt-12\" customMaxWidth=\"max-w-7xl\">\n              <div className=\"grid grid-cols-1 gap-y-24\">\n                {store?.section.map((sec: any) => (\n                  <div>\n                    <Section sectionData={sec} />\n                    <ListProducts userId={user._id} />\n                  </div>\n                ))}\n              </div>\n            </NarrowLayout>\n          )}\n        </div>\n        {iAmOwnerOfThisProfile && (\n          <div className=\"fixed bottom-10 right-10 grid grid-cols-1 lg:grid-cols-3 gap-6 dark:text-white\">\n            <Button\n              onClick={() => setNewSectionModal(true)}\n              label=\"+ Add Section\"\n              gradient\n              size=\"lg\"\n            />\n            <Button\n              // link={links.exploreJobs()}\n              label=\"Edit Store\"\n              gradient\n              Icon={VscEdit}\n              size=\"lg\"\n            />\n            <Button\n              onClick={() => {\n                mutate(!isPublished)\n              }}\n              label={isPublished ? 'Unpublish' : 'Publish'}\n              gradient\n              Icon={MdPublish}\n              size=\"lg\"\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ViewStore\n"],"sourceRoot":""}
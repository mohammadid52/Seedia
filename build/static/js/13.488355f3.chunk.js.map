{"version":3,"sources":["pages/account/personal/LocationStep.jsx"],"names":["LastStep","useState","isLoaded","setIsLoaded","history","useHistory","useUserContext","values","setValues","console","log","saving","setSaving","setTimeout","validationSchema","Yup","country","required","pincode","selectedLocation","setSelectedLocation","className","src","alt","initialValues","PersonalStepTwo","onSubmit","_values","wait","then","personal","location","window","localStorage","setItem","JSON","stringify","accountType","push","links","DASHBAORD","label","id","name","list","selectedItem","placeholder","onSelect","item","fullWidth","rounded","type","gradient","loading","text","onClick"],"mappings":"gPAoJeA,UApIE,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACdC,EADc,KACJC,EADI,KAEfC,EAAUC,cAFK,EAGSC,cAAtBC,EAHa,EAGbA,OAAQC,EAHK,EAGLA,UAChBC,QAAQC,IACN,8EACAH,GAIF,IAVqB,EAYON,oBAAS,GAZhB,mBAYdU,EAZc,KAYNC,EAZM,KAcrBC,YAAW,WACTV,GAAY,KACX,KAEH,IAiCMW,EAAmBC,IAAW,CAClCC,QAASD,MAAaE,SAAS,yBAC/BC,QAASH,MAAaE,SAAS,2BArDZ,EAwD2BhB,mBAAS,IAxDpC,mBAwDdkB,EAxDc,KAwDIC,EAxDJ,KA0DrB,OAAQlB,EAGN,sBAAKmB,UAAU,4EAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,sBACVC,IAA8B,YAC9BC,IAAI,aAEN,oBAAIF,UAAU,yDAAd,gCAGA,mBAAGA,UAAU,yCAAb,mGAMF,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,sDAAf,SACE,cAAC,IAAD,CACEG,cAAeC,IACfX,iBAAkBA,EAClBY,SApDO,SAACC,GAChBf,GAAU,GACVgB,YAAK,KAAMC,MAAK,WACdjB,GAAU,GACVJ,EAAU,2BACLD,GADI,IAEPuB,SAAS,2BACJvB,EAAOuB,UADJ,IAENC,SAAS,2BACJxB,EAAOwB,UADJ,IAENf,QAASW,EAAQX,QACjBE,QAASS,EAAQT,QACjBa,SAAUZ,SAjBlBa,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAU7B,EAAOuB,WAC9DE,OAAOC,aAAaC,QAAQ,cAAe3B,EAAO8B,aAClD5B,QAAQC,IAAI,wDAoBVN,EAAQkC,KAAKC,IAAMC,eAgCf,SAKE,eAAC,IAAD,CAAMnB,UAAU,YAAhB,UACE,cAAC,IAAD,CACEoB,MAAM,mBACNC,GAAG,UACHC,KAAK,UACL1B,UAAQ,IAGV,cAAC,IAAD,CACEwB,MAAM,cACNC,GAAG,UACHC,KAAK,UACL1B,UAAQ,IAEV,qBAAKI,UAAU,OAAf,SACE,cAAC,IAAD,CACEoB,MAAO,4BACPG,KA3FK,CAAC,CAAEF,GAAI,EAAGC,KAAM,UA4FrBE,aAAc1B,EACd2B,YAAa,kBACbC,SAAU,SAACC,GAAD,OAAU5B,EAAoB4B,EAAKL,WAIjD,8BACE,cAAC,IAAD,CACEM,WAAS,EACTC,QAAQ,aACRC,KAAK,SACLC,UAAQ,EACRC,QAAS1C,EACT8B,MAAM,2BAMhB,cAAC,IAAD,CACEa,KAAK,UACLC,QAzGO,WACbnD,EAAQkC,KAAK,2CAyGPjB,UAAU,yBAGd,cAAC,IAAD,OApEF,cAAC,IAAD","file":"static/js/13.488355f3.chunk.js","sourcesContent":["import Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Copyright from 'components/Copyright'\nimport Loading from 'components/Loading'\n\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { PersonalStepTwo } from 'initials'\nimport { useUserContext } from 'context/UserContext'\nimport { links } from 'constants/Links'\n\nconst LastStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n  const { values, setValues } = useUserContext()\n  console.log(\n    'ðŸš€ ~ file: CompanyStep.jsx ~ line 20 ~ StudentSecondStep ~ values',\n    values\n  )\n  //capture inputs\n\n  const locationList = [{ id: 1, name: 'India' }]\n\n  const [saving, setSaving] = useState(false)\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const goBack = () => {\n    history.push('/account/personal/edit-profile/company')\n  }\n\n  // for test purpose\n\n  const addDataToLS = () => {\n    window.localStorage.setItem('personal', JSON.stringify(values.personal))\n    window.localStorage.setItem('accountType', values.accountType)\n    console.log('Successfully added personal account to local storage')\n  }\n\n  const onSubmit = (_values) => {\n    setSaving(true)\n    wait(3000).then(() => {\n      setSaving(false)\n      setValues({\n        ...values,\n        personal: {\n          ...values.personal,\n          location: {\n            ...values.location,\n            country: _values.country,\n            pincode: _values.pincode,\n            location: selectedLocation,\n          },\n        },\n      })\n      addDataToLS()\n      history.push(links.DASHBAORD)\n    })\n  }\n\n  const validationSchema = Yup.object({\n    country: Yup.string().required('Please add this field'),\n    pincode: Yup.string().required('Please add this field'),\n  })\n\n  const [selectedLocation, setSelectedLocation] = useState('')\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Welcome, Mohammad!\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\n          <Formik\n            initialValues={PersonalStepTwo}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Country / region\"\n                id=\"country\"\n                name=\"country\"\n                required\n              />\n\n              <FormInput\n                label=\"Postal Code\"\n                id=\"pincode\"\n                name=\"pincode\"\n                required\n              />\n              <div className=\"mt-6\">\n                <Selector\n                  label={'Location within this area'}\n                  list={locationList}\n                  selectedItem={selectedLocation}\n                  placeholder={'Select location'}\n                  onSelect={(item) => setSelectedLocation(item.name)}\n                />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  type=\"submit\"\n                  gradient\n                  loading={saving}\n                  label=\"Finish Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          text=\"Go back\"\n          onClick={goBack}\n          className=\"inline-block mt-4\"\n        />\n      </div>\n      <Copyright />\n    </div>\n  )\n}\n\nexport default LastStep\n"],"sourceRoot":""}
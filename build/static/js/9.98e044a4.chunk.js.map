{"version":3,"sources":["pages/profile/About.tsx","pages/profile/Background.tsx","components/atoms/Badge.tsx","pages/profile/Cover.tsx","components/atoms/Tabs.tsx","pages/profile/Recommendations.tsx","pages/profile/RandomUsers.tsx","pages/profile/ProfileOne.tsx"],"names":["About","userData","authUser","useUserContext","setValues","values","useState","showModal","setShowModal","isEmpty","company","location","business","isBusiness","other","accountType","useEffect","setLocalFields","businessName","name","address","email","additionalInfo","currentCompany","latestCompany","previousCompany","livesIn","maritalStatus","saving","setSaving","initialState","localFields","updateState","e","target","value","setUnsavedChanges","onSave","a","updatedData","password","network","post","console","error","unsavedChanges","showUnsaveModal","setShowUnsaveModal","KeyValue","label","text","id","className","title","Modal","onClose","open","disableBackdropClose","setOpen","header","NormalFormInput","onChange","Selector","onSelect","status","selectedItem","list","Button","gradient","onClick","Card","cardTitle","withCardHeadings","secondary","invert","bgColor","Icon","AiOutlineEdit","size","content","hideCloseBtn","loading","ModalContentByType","type","onExperienceSelectUpdate","onExperienceFieldUpdate","getValue","onInterestAdd","onExperienceRemove","addNewExperience","Section","sectionTitle","CgDetailsMore","summary","textarea","gridClass","placeholder","interests","length","map","interest","idx","experiences","experience","required","yearList","item","Divider","withButton","BiTrashAlt","onBtnClick","Background","show","background","token","getAccessToken","addOnTrigger","newExperience","nanoid","jobTitle","companyName","joinDate","leaveDate","description","headers","Authorization","fieldName","update","remove","disabled","withSectionHeadings","isAvailable","EmptyState","subtitle","btnText","showEditOption","BtnIcon","PlusIcon","iconUrl","exp","Badge","style","color","textSize","rounded","Cover","showImageModal","setShowImageModal","_image","setImage","onImageSelect","img","files","preventDefault","fd","FormData","append","config","data","isCover","message","coverImageSelectorRef","React","useRef","profileImageSelectorRef","src","URL","createObjectURL","alt","ref","accept","coverPicture","profilePicture","avatarPlaceholder","fullName","pwvpCount","projects","followers","current","click","Tabs","tabs","currentTab","setCurrentTab","htmlFor","defaultValue","find","tab","classNames","undefined","count","Recommendations","recommendation","fetchReceived","setFetchReceived","fetching","setFetching","fetchGiven","setFetchGiven","fetchReceivedList","users","received","g","userId","_r","r","user","fetchGivenList","given","_g","onCancel","validationSchema","Yup","min","max","route","useRouter","userIdFromParam","match","params","onSubmit","initialValues","FormInput","xmlns","fill","viewBox","cx","cy","stroke","strokeWidth","d","recom","RandomUsers","showSingleCard","allUsers","setAllUsers","fetchAllUsers","limit","onFollowUser","log","onUnFollowUser","gradientHover","BsChevronLeft","BsChevronRight","isPersonal","following","includes","_id","href","links","getProfileById","profileUrl","template","education","Profile","viewMode","iAmOwnerOfThisProfile","str","arr","split","getUniqId","showAllButtons","otherUserData","setOtherUserData","fetchOtherUser","commonProps","DashboardHeader","Sidebar","maxWidth","Layout","firstCol","secondCol","Following","thirdCol","PublicProfileCard","ProfileStrength","PeopleAlsoViewed","CustomFooter"],"mappings":"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","file":"static/js/9.98e044a4.chunk.js","sourcesContent":["//@ts-nocheck\nimport Card from 'components/atoms/Card'\n\nimport Button from 'components/atoms/Button'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport Modal from 'components/atoms/Modal'\nimport { useEffect, useState } from 'react'\n\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport Selector from 'components/atoms/Selector'\nimport { network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport { isEmpty } from 'lodash'\nimport { IParent } from 'interfaces/UniversalInterface'\n\nconst About = ({\n  userData,\n  authUser,\n}: {\n  userData?: IParent\n  authUser: boolean\n}) => {\n  const { setValues, values } = useUserContext()\n  const [showModal, setShowModal] = useState(false)\n\n  const {\n    company = {},\n    location = {},\n    business = {},\n  } = isEmpty(values) ? {} : values\n\n  const businessInitState = {\n    businessName: '',\n    address: '',\n    email: '',\n    additionalInfo: '',\n  }\n\n  const companyInitState = {\n    currentCompany: '',\n    previousCompany: '',\n    livesIn: '',\n    maritalStatus: '',\n  }\n\n  const accountType = userData?.other?.accountType\n  const isBusiness = accountType === 'business'\n  useEffect(() => {\n    if (!isEmpty(userData)) {\n      if (!isBusiness) {\n        setLocalFields({\n          currentCompany:\n            company?.currentCompany || company.latestCompany || '',\n          previousCompany: company?.previousCompany || '',\n          livesIn: location?.livesIn || '',\n          maritalStatus: userData?.maritalStatus || 'Unmarried',\n        })\n      } else {\n        setLocalFields({\n          businessName: business?.name,\n          address: location?.address,\n          email: business?.email,\n          additionalInfo: business?.additionalInfo,\n        })\n      }\n    }\n  }, [])\n\n  const [saving, setSaving] = useState(false)\n\n  const initialState = !isBusiness ? companyInitState : businessInitState\n\n  const [localFields, setLocalFields] = useState(initialState)\n\n  const updateState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setUnsavedChanges(true)\n    setLocalFields({\n      ...localFields,\n      [name]: value,\n    })\n  }\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n      // @ts-ignore\n      const {\n        currentCompany,\n        address,\n        previousCompany,\n        maritalStatus,\n        businessName,\n        livesIn,\n        email,\n        additionalInfo,\n      } = localFields\n\n      let updatedData = { ...userData }\n\n      if (!isBusiness) {\n        updatedData = {\n          ...userData,\n          maritalStatus,\n          company: {\n            ...company,\n            currentCompany,\n            previousCompany,\n          },\n          location: {\n            ...location,\n            livesIn,\n          },\n        }\n      } else {\n        updatedData = {\n          ...userData,\n\n          business: {\n            ...business,\n            businessName,\n            email,\n            additionalInfo,\n          },\n          location: {\n            ...location,\n            address,\n          },\n        }\n      }\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      await network.post('/user/update', {\n        ...updatedData,\n      })\n\n      // add data to local state\n      setShowModal(false)\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n      if (!showModal) {\n        setLocalFields(initialState)\n      }\n    }\n    setShowModal(false)\n  }\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [showUnsaveModal, setShowUnsaveModal] = useState(false)\n\n  const KeyValue = ({ label, text }: { label: string; text: string }) => {\n    return (\n      <div id={label}>\n        <span className=\"title block text-gray-400 text-sm\">{label}</span>\n        <span\n          title={text}\n          className=\"truncate data block text-sm  text-gray-900 dark:text-white\"\n        >\n          {text}\n        </span>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {showModal && (\n        <Modal\n          onClose={onCancel}\n          open={showModal}\n          disableBackdropClose={false}\n          setOpen={() => setShowModal(false)}\n          header=\"Edit About\"\n        >\n          <div>\n            <div className=\"min-w-256  overflow-y-auto p-2 custom-scroll-mini darker my-4\">\n              {!isBusiness ? (\n                <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                  <NormalFormInput\n                    name=\"currentCompany\"\n                    label=\"Current company name\"\n                    value={localFields.currentCompany}\n                    onChange={updateState}\n                  />\n                  <NormalFormInput\n                    name=\"previousCompany\"\n                    label=\"Previous company name\"\n                    value={localFields.previousCompany}\n                    onChange={updateState}\n                  />\n                  <NormalFormInput\n                    name=\"livesIn\"\n                    label=\"Lives in\"\n                    value={localFields.livesIn}\n                    onChange={updateState}\n                  />\n                  <Selector\n                    label=\"Marital Status\"\n                    onSelect={(status) =>\n                      setLocalFields({\n                        ...localFields,\n                        maritalStatus: status.name,\n                      })\n                    }\n                    selectedItem={localFields.maritalStatus}\n                    list={[\n                      { id: '0', name: 'Married' },\n                      { id: '1', name: 'Single' },\n                    ]}\n                  />\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                  <NormalFormInput\n                    name=\"businessName\"\n                    label=\"Business name\"\n                    value={localFields.businessName}\n                    onChange={updateState}\n                  />\n                  <NormalFormInput\n                    name=\"address\"\n                    label=\"Business address\"\n                    value={localFields.address}\n                    onChange={updateState}\n                  />\n                  <NormalFormInput\n                    name=\"email\"\n                    label=\"Business email\"\n                    value={localFields.email}\n                    onChange={updateState}\n                  />\n                  <NormalFormInput\n                    name=\"email\"\n                    label=\"Additional info\"\n                    value={localFields.additionalInfo}\n                    onChange={updateState}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n              <Button gradient onClick={onSave} label=\"Save\" />\n            </div>\n          </div>\n        </Modal>\n      )}\n      <Card\n        cardTitle=\"About\"\n        withCardHeadings={\n          authUser && (\n            <>\n              <Button\n                secondary\n                invert\n                bgColor=\"gray\"\n                onClick={() => setShowModal(true)}\n                Icon={AiOutlineEdit}\n                size=\"sm\"\n                label={'Edit'}\n              />\n            </>\n          )\n        }\n        content={\n          !isBusiness ? (\n            <div className=\"space-y-4\">\n              <KeyValue\n                label=\"Current company\"\n                text={company?.currentCompany}\n              />\n              <KeyValue\n                label=\"Previous company\"\n                text={company.previousCompany}\n              />\n              <KeyValue label=\"Lives In\" text={location?.livesIn} />\n              <KeyValue label=\"Marital Status\" text={userData?.maritalStatus} />\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <KeyValue label=\"Business name\" text={business?.name} />\n              <KeyValue label=\"Address\" text={location?.address} />\n              <KeyValue label=\"Business email\" text={business?.email} />\n              <KeyValue\n                label=\"Additional info\"\n                text={business?.additionalInfo}\n              />\n            </div>\n          )\n        }\n      />\n      <Modal\n        hideCloseBtn\n        header=\"Discard changes\"\n        open={showUnsaveModal}\n        setOpen={setShowUnsaveModal}\n      >\n        <>\n          <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n            You have unsaved changes\n          </h1>\n          <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              gradient\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setShowModal(true)\n              }}\n              invert\n              label=\"No thanks\"\n            />\n            <Button\n              gradient\n              label=\"Discard\"\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setLocalFields(initialState)\n              }}\n              loading={saving}\n            />\n          </div>\n        </>\n      </Modal>\n    </>\n  )\n}\n\nexport default About\n","import Card from 'components/atoms/Card'\nimport { Fragment, useState } from 'react'\nimport Section from 'components/atoms/Section'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport Button from 'components/atoms/Button'\nimport { isEmpty, map, remove, update } from 'lodash'\nimport Modal from 'components/atoms/Modal'\nimport {\n  IBackground,\n  IExperience,\n  IParent,\n} from 'interfaces/UniversalInterface'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { isAvailable } from 'utils/wait'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport Selector from 'components/atoms/Selector'\nimport { yearList } from 'values/values'\nimport { nanoid } from 'nanoid'\nimport Divider from 'components/atoms/Divider'\nimport { BiTrashAlt } from 'react-icons/bi'\nimport { PlusIcon } from '@heroicons/react/solid'\nimport EmptyState from 'components/atoms/EmptyState'\n\nconst ModalContentByType = ({\n  type,\n  localFields,\n  onChange,\n  onExperienceSelectUpdate,\n  onExperienceFieldUpdate,\n  getValue,\n  onInterestAdd,\n  onExperienceRemove,\n  addNewExperience,\n}: {\n  type: string\n  localFields: ILocalFields\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onInterestAdd: () => void\n  getValue: (fieldName: string, idx: number) => string\n  onExperienceFieldUpdate: (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => void\n  onExperienceSelectUpdate: (\n    fieldName: string,\n    itemName: string,\n    idx: number\n  ) => void\n  onExperienceRemove: (id: string) => void\n  addNewExperience: () => void\n}) => {\n  switch (type) {\n    case 'summary':\n      return (\n        <Section\n          sectionTitle=\"Summary\"\n          Icon={CgDetailsMore}\n          content={\n            <>\n              <NormalFormInput\n                value={localFields.summary}\n                id={'summary'}\n                textarea\n                gridClass=\"col-span-2\"\n                onChange={onChange}\n                placeholder=\"Tell everyone about yourself\"\n              />\n            </>\n          }\n        />\n      )\n    case 'interests':\n      return (\n        <Section\n          sectionTitle=\"Interests\"\n          Icon={CgDetailsMore}\n          content={\n            <>\n              <div className=\"flex flex-col items-start gap-y-4\">\n                <div className=\"gap-x-4 gap-y-4 flex items-center flex-wrap\">\n                  {localFields.interests && localFields.interests.length > 0 ? (\n                    map(localFields.interests, (interest: any, idx: number) => (\n                      <Button\n                        key={interest + '-' + idx}\n                        gradient\n                        invert\n                        bgColor=\"pink\"\n                        label={interest.name}\n                      />\n                    ))\n                  ) : (\n                    <p className=\"text-gray-600 dark:text-gray-400\">\n                      Please add interest\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex items-center gap-x-4 \">\n                  <NormalFormInput\n                    value={localFields.interest}\n                    id=\"interest\"\n                    placeholder=\"Enter interest name\"\n                    gridClass=\"col-span-2\"\n                    onChange={onChange}\n                  />\n                  <Button\n                    gradient\n                    size=\"sm\"\n                    className=\"\"\n                    onClick={onInterestAdd}\n                    bgColor=\"pink\"\n                    label={'+ Add'}\n                  />\n                </div>\n              </div>\n            </>\n          }\n        />\n      )\n    case 'experiences':\n      return (\n        <Section\n          sectionTitle=\"Experiences\"\n          key=\"experience-edit-tab-52\"\n          Icon={CgDetailsMore}\n          content={\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n              {localFields.experiences && localFields.experiences.length > 0 ? (\n                <>\n                  {map(localFields.experiences, (experience, idx: number) => (\n                    <Fragment key={idx}>\n                      <NormalFormInput\n                        id={`jobTitle-${idx}`}\n                        required\n                        name=\"jobTitle\"\n                        value={getValue('jobTitle', idx)}\n                        label={'Job title'}\n                        placeholder=\"What was/is your role in the company? \"\n                        onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                      />\n                      <NormalFormInput\n                        id=\"companyName\"\n                        required\n                        name=\"companyName\"\n                        value={getValue('companyName', idx)}\n                        label={'Company name'}\n                        placeholder=\"What was/is the company name? \"\n                        onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                      />\n                      <Selector\n                        key=\"joinDate\"\n                        required\n                        selectedItem={getValue('joinDate', idx)}\n                        list={yearList}\n                        label={'Join date'}\n                        placeholder=\"Started from\"\n                        onSelect={(item) => {\n                          onExperienceSelectUpdate('joinDate', item.name, idx)\n                        }}\n                      />\n                      <Selector\n                        key=\"leaveDate\"\n                        required\n                        selectedItem={getValue('leaveDate', idx)}\n                        list={yearList}\n                        label={'Leave date'}\n                        placeholder=\"Left on\"\n                        onSelect={(item) => {\n                          onExperienceSelectUpdate('leaveDate', item.name, idx)\n                        }}\n                      />\n                      <div className=\"col-span-2\">\n                        <NormalFormInput\n                          id=\"description\"\n                          textarea\n                          value={getValue('description', idx)}\n                          name=\"description\"\n                          label={'Description'}\n                          placeholder=\"Add a short description\"\n                          onChange={(e) => onExperienceFieldUpdate(e, idx)}\n                        />\n                      </div>\n                      <div className=\"col-span-2 \">\n                        <Divider\n                          withButton\n                          Icon={BiTrashAlt}\n                          onBtnClick={() => onExperienceRemove(experience.id)}\n                        />\n                      </div>\n                    </Fragment>\n                  ))}\n                </>\n              ) : null}\n              <div className=\"col-span-2\">\n                <Button\n                  className=\"mx-auto\"\n                  onClick={addNewExperience}\n                  label=\"Add new experience\"\n                  bgColor=\"yellow\"\n                  size=\"sm\"\n                />\n              </div>\n            </div>\n          }\n        />\n      )\n    default:\n      return <div>Error</div>\n  }\n}\n\ninterface ILocalFields extends IBackground {\n  interest: string\n}\n\nconst Background = ({\n  userData,\n  authUser,\n}: {\n  userData?: IParent\n  authUser: boolean\n}) => {\n  const [showModal, setShowModal] = useState({ show: false, type: '' })\n\n  const { setValues, values } = useUserContext()\n\n  const [saving, setSaving] = useState(false)\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    const { value, id } = e.target\n    setLocalFields({ ...localFields, [id]: value })\n  }\n\n  const { background = {} } = isEmpty(values) ? {} : values\n  const {\n    summary = '',\n    interests = [],\n    experiences = [],\n  }: IBackground = background\n\n  const initialState = {\n    interest: '',\n    interests: [],\n    summary: '',\n    experiences: [],\n  }\n  const [localFields, setLocalFields] = useState<ILocalFields>(initialState)\n  const token = getAccessToken()\n\n  const onInterestAdd = () => {\n    if (localFields.interest) {\n      setUnsavedChanges(true)\n      setLocalFields({\n        ...localFields,\n        interests: [\n          ...localFields.interests,\n          { name: localFields.interest, id: nanoid(12) },\n        ],\n        interest: '',\n      })\n    }\n  }\n\n  const addOnTrigger = (type: string) => {\n    if (type === 'summary') {\n      setLocalFields({ ...localFields, summary: summary || '' })\n    } else if (type === 'interests') {\n      setLocalFields({ ...localFields, interests: [...interests] || [] })\n    } else if (type === 'experiences') {\n      setLocalFields({\n        ...localFields,\n        experiences: [...experiences] || [],\n      })\n    }\n  }\n\n  const addNewExperience = () => {\n    const newExperience: IExperience = {\n      id: nanoid(6),\n      jobTitle: '',\n      companyName: '',\n      joinDate: '',\n      leaveDate: '',\n      description: '',\n    }\n    setLocalFields({\n      ...localFields,\n      // @ts-ignore\n      experiences: [...localFields.experiences, newExperience],\n    })\n  }\n\n  const onSave = async () => {\n    try {\n      setSaving(true)\n      const { summary, interests } = localFields\n\n      let updatedData = { ...userData }\n      if (showModal.type === 'summary') {\n        updatedData = {\n          ...userData,\n          background: {\n            ...background,\n            summary,\n          },\n        }\n      } else if (showModal.type === 'interests') {\n        updatedData = {\n          ...userData,\n          background: {\n            ...background,\n            interests,\n          },\n        }\n      } else if (showModal.type === 'experiences') {\n        updatedData = {\n          ...userData,\n\n          background: {\n            ...background,\n            experiences:\n              localFields.experiences && localFields.experiences.length > 0\n                ? [...localFields.experiences]\n                : experiences,\n          },\n        }\n      }\n\n      //@ts-ignore\n      delete updatedData.password\n\n      setValues({ ...updatedData })\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      // add data to local state\n      setShowModal({ ...showModal, show: false })\n      setUnsavedChanges(false)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const onCancel = () => {\n    if (unsavedChanges) {\n      setShowUnsaveModal(true)\n    } else {\n      setShowUnsaveModal(false)\n\n      setUnsavedChanges(false)\n      if (!showModal.show) {\n        setLocalFields(initialState)\n      }\n    }\n    setShowModal({ ...showModal, show: false })\n  }\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false)\n\n  const [showUnsaveModal, setShowUnsaveModal] = useState(false)\n\n  const onExperienceFieldUpdate = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    idx: number\n  ) => {\n    const { value, id } = e.target\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      update(localFields?.experiences[idx], `${id}`, () => value)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  const onExperienceSelectUpdate = (\n    fieldName: string,\n    name: string,\n    idx: number\n  ) => {\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      update(localFields?.experiences[idx], `${fieldName}`, () => name)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  const getValue = (fieldName: string, idx: number): string => {\n    // @ts-ignore\n    return localFields.experiences[idx][fieldName]\n  }\n\n  const onExperienceRemove = (id: string) => {\n    setUnsavedChanges(true)\n    if (localFields?.experiences && localFields?.experiences.length > 0) {\n      remove(localFields.experiences, (item) => item.id === id)\n    }\n    setLocalFields({ ...localFields })\n  }\n\n  return (\n    <>\n      {showModal.show && (\n        <Modal\n          disableBackdropClose={false}\n          open={showModal.show}\n          onClose={onCancel}\n          setOpen={() => setShowModal({ show: false, type: '' })}\n          header=\"Edit Background\"\n        >\n          <div>\n            <div className=\"overflow-y-hidden min-h-64 min-w-256 p-2 custom-scroll-mini darker my-4 max-h-full\">\n              <div className=\"space-y-12 \">\n                <ModalContentByType\n                  addNewExperience={addNewExperience}\n                  onChange={onChange}\n                  onExperienceSelectUpdate={onExperienceSelectUpdate}\n                  onExperienceFieldUpdate={onExperienceFieldUpdate}\n                  onExperienceRemove={onExperienceRemove}\n                  localFields={localFields}\n                  onInterestAdd={onInterestAdd}\n                  getValue={getValue}\n                  type={showModal.type}\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n              <Button\n                gradient\n                disabled={saving}\n                label=\"Save\"\n                onClick={onSave}\n                loading={saving}\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      <Card\n        cardTitle=\"Background\"\n        content={\n          <div className=\"space-y-10\">\n            <Section\n              sectionTitle=\"Summary\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                authUser &&\n                summary && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('summary')\n                        setShowModal({ show: true, type: 'summary' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div>\n                  {isAvailable('summary', background) ? (\n                    <p>{summary}</p>\n                  ) : (\n                    <EmptyState\n                      title=\"No summary found\"\n                      subtitle=\"Add something about yourself.\"\n                      btnText=\"Add summary\"\n                      onBtnClick={() =>\n                        setShowModal({ show: true, type: 'summary' })\n                      }\n                      showEditOption={authUser}\n                      BtnIcon={PlusIcon}\n                      iconUrl={'/summary.png'}\n                    />\n                  )}\n                </div>\n              }\n            />\n            <Section\n              sectionTitle=\"Interests\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                interests &&\n                interests.length > 0 &&\n                authUser && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('interests')\n                        setShowModal({ show: true, type: 'interests' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div>\n                  {interests && interests.length > 0 ? (\n                    <div className=\"flex items-center flex-wrap justify-start gap-x-4\">\n                      {map(interests, (interest: any, idx: number) => (\n                        <Button\n                          key={interest.id}\n                          className=\"pointer-events-none\"\n                          gradient\n                          invert\n                          bgColor=\"pink\"\n                          label={interest.name}\n                        />\n                      ))}\n                    </div>\n                  ) : (\n                    <EmptyState\n                      title=\"No interests added\"\n                      subtitle=\"Get started by adding your interests to your profile.\"\n                      btnText=\"Add interests\"\n                      BtnIcon={PlusIcon}\n                      showEditOption={authUser}\n                      iconUrl={'/interest.png'}\n                      onBtnClick={() =>\n                        setShowModal({ show: true, type: 'interests' })\n                      }\n                    />\n                  )}\n                </div>\n              }\n            />\n            <Section\n              sectionTitle=\"Experiences\"\n              Icon={CgDetailsMore}\n              withSectionHeadings={\n                authUser &&\n                experiences &&\n                experiences.length > 0 && (\n                  <div>\n                    <Button\n                      secondary\n                      invert\n                      bgColor=\"gray\"\n                      onClick={() => {\n                        addOnTrigger('experiences')\n                        setShowModal({ show: true, type: 'experiences' })\n                      }}\n                      Icon={AiOutlineEdit}\n                      size=\"sm\"\n                      label={'Edit'}\n                    />\n                  </div>\n                )\n              }\n              content={\n                <div className=\"space-y-8\">\n                  {experiences && experiences.length > 0 ? (\n                    map(experiences, (exp, idx: number) => {\n                      return (\n                        <div\n                          key={idx}\n                          className={` ${\n                            idx !== 1\n                              ? 'border-b border-gray-200 dark:border-gray-600 pb-4'\n                              : ''\n                          }`}\n                        >\n                          <h4 className=\"job_title font-medium dark:text-white text-gray-900\">\n                            {exp.jobTitle}\n                          </h4>\n                          <h5 className=\"company_name link-hover block text-left cursor-pointer \">\n                            {exp.companyName}\n                          </h5>\n                          <span className=\"job_duration text-gray-300 font-semibold text-sm\">\n                            {exp.joinDate} - {exp.leaveDate}\n                          </span>\n                          <p className=\"company_description text-gray-400 mt-3\">\n                            {exp.description}\n                          </p>\n                        </div>\n                      )\n                    })\n                  ) : (\n                    <EmptyState\n                      title=\"No experience\"\n                      subtitle=\"Get started by adding a new experience to your profile.\"\n                      btnText=\"Add experience\"\n                      BtnIcon={PlusIcon}\n                      showEditOption={authUser}\n                      onBtnClick={() => {\n                        if (experiences && experiences.length === 0) {\n                          addNewExperience()\n                        }\n                        setShowModal({ show: true, type: 'experiences' })\n                      }}\n                      iconUrl={'/experience.png'}\n                    />\n                  )}\n                </div>\n              }\n            />\n          </div>\n        }\n      />\n\n      <Modal\n        hideCloseBtn\n        header=\"Discard changes\"\n        open={showUnsaveModal}\n        setOpen={setShowUnsaveModal}\n      >\n        <>\n          <h1 className=\"text-lg dark:text-white text-gray-900 min-w-96\">\n            You have unsaved changes\n          </h1>\n          <p className=\"text-gray-500 \">Do you want to save it?</p>\n\n          <div className=\"mt-5 sm:mt-4 flex justify-end space-x-4 items-center\">\n            <Button\n              gradient\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setShowModal({ ...showModal, show: true })\n              }}\n              invert\n              label=\"No thanks\"\n            />\n            <Button\n              gradient\n              label=\"Discard\"\n              onClick={() => {\n                setShowUnsaveModal(false)\n                setLocalFields(initialState)\n              }}\n            />\n          </div>\n        </>\n      </Modal>\n    </>\n  )\n}\n\nexport default Background\n","const Badge = ({\n  style,\n  className,\n  color = 'yellow',\n  label,\n  textSize = 'sm',\n  rounded = 'md',\n}: {\n  style?: any\n  className?: string\n  color?: string\n  label?: string\n  textSize?: string\n  rounded?: string\n}) => {\n  return (\n    <span\n      style={{ ...style }}\n      className={` ${className} absolute capitalize bg-opacity-90 inline-flex items-center px-2.5 py-0.5  rounded${\n        rounded ? `-${rounded}` : ''\n      } text-${textSize} font-medium `}\n    >\n      {label}\n    </span>\n  )\n}\n\nexport default Badge\n","import Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport { ICompany, IParent } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport React from 'react'\nimport { getAccessToken, network } from 'helpers'\nimport { useUserContext } from 'context/UserContext'\nimport Badge from 'components/atoms/Badge'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst Cover = ({\n  company,\n  userData,\n  authUser,\n}: {\n  company?: ICompany\n  userData?: IParent\n  authUser: boolean\n}) => {\n  const [showImageModal, setShowImageModal] = useState({\n    type: '',\n    show: false,\n  })\n  const token = getAccessToken()\n\n  const accountType = userData?.other?.accountType || 'personal'\n\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any, type: string) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowImageModal({ type, show: true })\n  }\n\n  const { setValues } = useUserContext()\n\n  const onSave = async (e: any) => {\n    e.preventDefault()\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: token,\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...userData,\n          [isCover ? 'coverPicture' : 'profilePicture']: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post(\n          '/user/update',\n          {\n            ...updatedData,\n          },\n          {\n            headers: { Authorization: token },\n          }\n        )\n        setShowImageModal({ show: false, type: '' })\n      }\n    } catch (error) {\n      // @ts-ignore\n      console.error(error.message)\n    }\n    setSaving(false)\n  }\n\n  const coverImageSelectorRef = React.useRef()\n  const profileImageSelectorRef = React.useRef()\n\n  //@ts-ignore\n  const showFileExplorerForCover = () => coverImageSelectorRef?.current?.click()\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageStyles =\n    'max-h-72 rounded-md sm:overflow-hidden w-full  object-cover'\n  const profileImageStyles = 'md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full'\n  const isCover = showImageModal.type === 'cover'\n\n  return (\n    <>\n      <Modal\n        header={`${isCover ? 'Cover' : 'Profile'} Photo`}\n        disableBackdropClose\n        open={showImageModal.show}\n        setOpen={() => setShowImageModal({ show: false, type: '' })}\n      >\n        <div\n          className={`${\n            isCover\n              ? ' lg:min-w-256 sm:min-w-172 min-w-32'\n              : 'sm:min-w-64 sm:min-h-64'\n          }`}\n        >\n          <div\n            className={`relative ${\n              isCover\n                ? 'sm:min-h-72 min-h-48'\n                : 'min-h-48 flex items-center justify-center'\n            } `}\n          >\n            {_image && (\n              <img\n                className={`shadow-xl ${\n                  isCover ? coverImageStyles : profileImageStyles\n                }`}\n                src={URL.createObjectURL(_image)}\n                alt=\"People working on laptops\"\n              />\n            )}\n          </div>\n          <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n            <Button\n              gradient\n              loading={saving}\n              disabled={saving}\n              onClick={onSave}\n              type=\"submit\"\n              label=\"Save\"\n            />\n          </div>\n        </div>\n      </Modal>\n\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, 'cover')}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={(e: any) => onImageSelect(e, 'profile')}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      <main className=\"\">\n        <div className=\"relative\">\n          <div className=\"absolute inset-x-0 bottom-0 h-1/2 \" />\n          <div className=\"sm:px-0 px-8\">\n            <div className=\"relative shadow-xl rounded-md sm:overflow-hidden\">\n              <div className=\"absolute inset-0\">\n                <img\n                  className=\"h-full w-full object-cover\"\n                  src={\n                    userData?.coverPicture\n                      ? userData?.coverPicture\n                      : 'https://source.unsplash.com/1600x900/?nature,water'\n                  }\n                  alt=\"People working on laptops\"\n                />\n                <div className=\"absolute inset-0 bg-gray-400 mix-blend-multiply\" />\n              </div>\n              <div className=\"relative px-4  py-16 sm:px-6 sm:py-24 lg:py-32 lg:px-8 flex items-center flex-col justify-center\">\n                <div className=\"relative\">\n                  <img\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : avatarPlaceholder\n                    }\n                    className=\"md:h-32 md:w-32 sm:h-12 border-gradient border-transparent border-4 shadow-xl sm:w-12 rounded-full\"\n                    alt=\"user\"\n                  />\n                </div>\n                <h1 className=\"my-6 relative text-center text-2xl font-extrabold tracking-tight sm:text-2xl lg:text-4xl\">\n                  <span className=\"block text-white\">\n                    {userData?.fullName}{' '}\n                    <Badge\n                      className={`${\n                        accountType === 'business'\n                          ? 'bg-pink-100 text-pink-800'\n                          : accountType === 'personal'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-blue-100 text-blue-800'\n                      } absolute -right-20 top-0 `}\n                      label={accountType}\n                      textSize=\"xs\"\n                      rounded=\"\"\n                    />\n                  </span>\n                  <span className=\"block text-white text-base tracking-wide font-medium\">\n                    {accountType === 'personal'\n                      ? company?.jobTitle\n                      : userData?.business?.name}\n                  </span>\n                </h1>\n\n                <div className=\"flex items-center w-auto text-xl sm:border-t  border-white flex-col sm:flex-row border-t-none\">\n                  <div className=\"sm:border-r border-r-none border-white px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center  text-white tracking-wide font-bold\">\n                      {userData?.pwvpCount || 0}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      profile views\n                    </div>\n                  </div>\n                  <div className=\"sm:border-r  border-r-none border-white px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center text-white tracking-wide font-bold\">\n                      {userData?.projects ? userData?.projects.length : 0}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      projects\n                    </div>\n                  </div>\n                  <div className=\"px-8 py-4 sm:border-b-none border-b\">\n                    <div className=\"text-center text-white tracking-wide font-bold \">\n                      {userData?.followers?.length || 0}\n                    </div>\n                    <div className=\"text-gray-300 font-medium uppercase text-base mt-1 tracking-tight \">\n                      connections\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <----------- Edit Button -------------> */}\n              {authUser && (\n                <div className=\"absolute flex items-center gap-x-4 bottom-0 right-0 p-4\">\n                  <Button\n                    secondary\n                    invert\n                    onClick={showFileExplorerForProfile}\n                    bgColor=\"gray\"\n                    Icon={AiOutlineEdit}\n                    size=\"sm\"\n                    label={'Change profile photo'}\n                  />\n                  <Button\n                    secondary\n                    invert\n                    onClick={showFileExplorerForCover}\n                    bgColor=\"gray\"\n                    Icon={AiOutlineEdit}\n                    size=\"sm\"\n                    label={'Change cover photo'}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default Cover\n","import { classNames } from 'utils/classNames'\n\nconst Tabs = ({\n  tabs,\n  currentTab,\n  setCurrentTab,\n}: {\n  tabs: { name: string; count: number }[]\n  currentTab: string\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  return (\n    <div>\n      <div className=\"sm:hidden\">\n        <label htmlFor=\"tabs\" className=\"sr-only\">\n          Select a tab\n        </label>\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-pink-500 sm:text-sm rounded-md\"\n          //@ts-ignore\n          defaultValue={tabs.find((tab) => tab?.current)?.name}\n        >\n          {tabs.map((tab) => (\n            <option key={tab?.name}>{tab?.name}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"border-b border-gray-200 dark:border-gray-600\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <div\n                key={tab.name}\n                onClick={() => setCurrentTab(tab.name)}\n                className={classNames(\n                  tab.name === currentTab\n                    ? 'border-pink-500 text-pink-600'\n                    : 'border-transparent text-gray-400  ',\n                  'whitespace-nowrap cursor-pointer flex py-4 px-1 border-b-2 font-medium text-sm'\n                )}\n                aria-current={tab.name === currentTab ? 'page' : undefined}\n              >\n                {tab.name}\n                {tab.count ? (\n                  <span\n                    className={classNames(\n                      tab.name === currentTab\n                        ? 'bg-pink-100 text-pink-600'\n                        : 'bg-gray-100 text-gray-900',\n                      'hidden ml-3 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block'\n                    )}\n                  >\n                    {tab.count}\n                  </span>\n                ) : null}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Tabs\n","import Card from 'components/atoms/Card'\nimport { useEffect, useState } from 'react'\nimport { map } from 'lodash'\nimport { IParent, IRecommendation } from 'interfaces/UniversalInterface'\nimport { getAccessToken, network } from 'helpers'\nimport Tabs from 'components/atoms/Tabs'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport { Form, Formik } from 'formik'\nimport FormInput from 'components/atoms/FormInput'\nimport * as Yup from 'yup'\nimport { useRouter } from 'hooks/useRouter'\nimport { useUserContext } from 'context/UserContext'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst Recommendations = ({\n  recommendation,\n  authUser,\n  userData,\n  secondary = false,\n}: {\n  authUser: boolean\n  secondary?: boolean\n  userData?: IParent\n  recommendation?: { received: IRecommendation[]; given: IRecommendation[] }\n}) => {\n  const [fetchReceived, setFetchReceived] = useState<any[]>([])\n\n  const [fetching, setFetching] = useState(false)\n\n  const [fetchGiven, setFetchGiven] = useState<any[]>([])\n  const fetchReceivedList = async () => {\n    setFetching(true)\n    try {\n      const config = {\n        users: map(recommendation?.received, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config, {\n        headers: { Authorization: token },\n      })\n\n      const _r = map(data.data, (r, idx: number) => ({\n        text: recommendation?.received[idx]?.text || 'Not found',\n        user: r,\n      }))\n\n      setFetchReceived(_r)\n      // setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n      setFetching(false)\n    }\n  }\n\n  const fetchGivenList = async () => {\n    setFetching(true)\n\n    try {\n      const config = {\n        users: map(recommendation?.given, (g) => g.userId),\n      }\n      const { data } = await network.post('/user/getUsers', config, {\n        headers: { Authorization: token },\n      })\n\n      const _g = map(data.data, (g, idx: number) => ({\n        text: recommendation?.given[idx].text,\n        user: g,\n      }))\n\n      setFetchGiven(_g)\n    } catch (error) {\n      console.error(error)\n      setFetching(false)\n    }\n  }\n  const [currentTab, setCurrentTab] = useState('Received')\n\n  useEffect(() => {\n    // @ts-ignore\n    if (\n      recommendation &&\n      recommendation?.received.length > 0 &&\n      fetchReceived.length === 0 &&\n      currentTab === 'Received'\n    ) {\n      fetchReceivedList()\n    }\n  }, [recommendation?.received, fetchReceived, currentTab])\n\n  useEffect(() => {\n    // @ts-ignore\n    if (\n      recommendation &&\n      recommendation?.given.length > 0 &&\n      fetchGiven.length === 0 &&\n      currentTab === 'Given'\n    ) {\n      fetchGivenList()\n    }\n  }, [recommendation?.given, fetchReceived, currentTab])\n\n  const tabs = [\n    {\n      name: 'Received',\n      count: recommendation?.received ? recommendation.received.length : 0,\n    },\n    {\n      name: 'Given',\n      count: recommendation?.given ? recommendation.given.length : 0,\n    },\n  ]\n\n  const [showModal, setShowModal] = useState(false)\n  const onCancel = () => setShowModal(false)\n\n  const initialState = { recommendation: '' }\n  const validationSchema = Yup.object({\n    recommendation: Yup.string().min(50).max(250),\n  })\n  const route: any = useRouter()\n  const userIdFromParam = route?.match?.params?.userId\n\n  const { setValues } = useUserContext()\n  const token = getAccessToken()\n\n  const onSave = async (values: any) => {\n    setSaving(true)\n    try {\n      if (values.recommendation) {\n        const config = { text: values.recommendation }\n        await network.post(\n          `/user/giveRecommendation/${userIdFromParam}`,\n          config,\n          {\n            headers: { Authorization: token },\n          }\n        )\n        onCancel()\n\n        if (!authUser) {\n          setValues({\n            ...userData,\n            recommendation: {\n              received: [\n                // @ts-ignore\n                ...userData?.recommendation?.received,\n                { text: values.recommendation, userId: null },\n              ],\n              // @ts-ignore\n              given: [...userData?.recommendation?.given],\n            },\n          })\n          fetchReceivedList()\n        }\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const [saving, setSaving] = useState(false)\n\n  return (\n    <>\n      <Modal\n        open={showModal}\n        onClose={onCancel}\n        setOpen={setShowModal}\n        header={'Add recommendation'}\n      >\n        <div className=\"\">\n          <div className=\"overflow-y-auto min-w-132 min-h-32  custom-scroll-mini darker mt-4 px-1\">\n            <Formik\n              onSubmit={onSave}\n              initialValues={initialState}\n              validationSchema={validationSchema}\n            >\n              <Form className=\"py-2\">\n                <FormInput\n                  textarea\n                  placeholder=\"Add your recommendation\"\n                  name=\"recommendation\"\n                  id=\"recommendation\"\n                />\n                <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    loading={saving}\n                    disabled={saving}\n                    onClick={onSave}\n                    type=\"submit\"\n                    label=\"Save\"\n                  />\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n      <Card\n        secondary={secondary}\n        cardTitle=\"Recommendations\"\n        withCardHeadings={\n          <>\n            <Tabs\n              tabs={tabs}\n              currentTab={currentTab}\n              setCurrentTab={setCurrentTab}\n            />\n          </>\n        }\n        content={\n          <div className=\"grid mt-6  sm:grid-cols-1 md:grid-cols-1 space-y-12\">\n            {currentTab === 'Received' &&\n              (fetching ? (\n                <div className=\"text-center flex items-center justify-center text-gray-400\">\n                  <svg\n                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  Fetching\n                </div>\n              ) : fetchReceived && fetchReceived.length > 0 ? (\n                map(fetchReceived, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 dark:text-gray-400 flex items-center text-right italic\">\n                        By,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          {recom?.user?.fullName}\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : avatarPlaceholder\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  {authUser ? (\n                    <p className=\"text-center text-gray-400\">\n                      No recommendation given yet.\n                    </p>\n                  ) : (\n                    <Button\n                      label=\"Add recommendation\"\n                      className=\"flex\"\n                      gradient\n                      onClick={() => setShowModal(true)}\n                    />\n                  )}\n                </div>\n              ))}\n            {currentTab === 'Given' &&\n              (fetching ? (\n                <div className=\"text-center flex items-center justify-center text-gray-400\">\n                  <svg\n                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  Fetching\n                </div>\n              ) : fetchGiven && fetchGiven.length > 0 ? (\n                map(fetchGiven, (recom, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      className=\" rounded-md pb-2 border-gray-200 dark:border-gray-600 border relative w-full p-4\"\n                    >\n                      <p className=\"my-2 mt-4 italic text-gray-500 dark:text-gray-400 text-center font-medium text-lg\">\n                        “ {recom.text} ”\n                      </p>\n                      <div className=\"py-1 mt-1 flex items-center dark:text-gray-400 text-right italic\">\n                        By,\n                        <span className=\"mx-2 cursor-pointer flex items-center hover:underline\">\n                          {recom?.user?.fullName}\n                          <img\n                            src={\n                              recom?.user?.profilePicture\n                                ? recom?.user?.profilePicture\n                                : avatarPlaceholder\n                            }\n                            alt=\"by-name\"\n                            className=\"h-6 w-6 rounded-full ml-2\"\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  )\n                })\n              ) : (\n                <div>\n                  <p className=\"text-center text-gray-400\">\n                    No recommendation given yet.\n                  </p>\n                </div>\n              ))}\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default Recommendations\n","import Badge from 'components/atoms/Badge'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport { links } from 'constants/Links'\nimport { network } from 'helpers'\nimport { useRouter } from 'hooks/useRouter'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport { useEffect, useState } from 'react'\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst RandomUsers = ({\n  list,\n  showSingleCard,\n}: {\n  showSingleCard?: boolean\n  list?: string[]\n}) => {\n  const route: any = useRouter()\n  const userIdFromParam = route?.match?.params?.userId\n  const [allUsers, setAllUsers] = useState([])\n\n  const fetchAllUsers = async () => {\n    try {\n      const config = { limit: 12 }\n      const { data } = await network.post(\n        `/user/getAll/${userIdFromParam}`,\n        config\n      )\n      setAllUsers(data.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    if (allUsers && allUsers.length === 0) {\n      fetchAllUsers()\n    }\n  }, [])\n\n  const onFollowUser = async (id?: string) => {\n    try {\n      const { data } = await network.post('/user/follow/' + id)\n      console.log(\n        '🚀 ~ file: RandomUsers.tsx ~ line 46 ~ onFollowUser ~ data',\n        data.data\n      )\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const onUnFollowUser = async (id?: string) => {\n    try {\n      const { data } = await network.post('/user/unfollow/' + id)\n      console.log(\n        '🚀 ~ file: RandomUsers.tsx ~ line 46 ~ onFollowUser ~ data',\n        data.data\n      )\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Card\n      className=\"mb-12\"\n      cardTitle=\"Random Users\"\n      withCardHeadings={\n        allUsers.length > 6 && (\n          <>\n            <Button\n              gradient\n              className=\"mx-2\"\n              rounded=\"rounded-full\"\n              size=\"sm\"\n              gradientHover={false}\n              Icon={BsChevronLeft}\n            />\n            <Button\n              rounded=\"rounded-full\"\n              gradient\n              size=\"sm\"\n              className=\"mx-2\"\n              invert\n              gradientHover={false}\n              Icon={BsChevronRight}\n            />\n          </>\n        )\n      }\n      content={\n        <div>\n          {allUsers.length > 0 ? (\n            <div\n              className={`${\n                showSingleCard\n                  ? 'grid-cols-1 gap-y-6'\n                  : 'gap-6 grid-cols-1 sm:grid-cols-3'\n              } grid  `}\n            >\n              {map(allUsers, (user: IParent) => {\n                const isBusiness = user.other?.accountType === 'business'\n                const isPersonal = user.other?.accountType === 'personal'\n                // @ts-ignore\n                const following = list && list.includes(user?._id)\n                return (\n                  <div\n                    key={user?._id}\n                    className=\"flex border border-gray-300 dark:border-gray-600 h-72 w-60 rounded-xl relative flex-col items-center \"\n                  >\n                    <Badge\n                      className={`${\n                        user?.other?.accountType === 'business'\n                          ? 'bg-pink-100 text-pink-800'\n                          : user?.other?.accountType === 'personal'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-blue-100 text-blue-800'\n                      } mt-1 mr-1 absolute top-0 right-0`}\n                      textSize=\"xs\"\n                      rounded=\"full\"\n                      label={user?.other?.accountType}\n                    />\n                    <div className=\"h-1/2 flex flex-col items-center justify-center\">\n                      <img\n                        src={\n                          user?.profilePicture\n                            ? user?.profilePicture\n                            : avatarPlaceholder\n                        }\n                        alt=\"\"\n                        className=\"h-24 border-gradient border-4 border-transparent w-24 rounded-full shadow-xl\"\n                      />\n                    </div>\n                    <div>\n                      <h4 className=\"dark:text-white text-center hover:underline cursor-pointer text-gray-900 font-semibold tracking-wide text-lg\">\n                        <a\n                          href={links.getProfileById(\n                            user.profileUrl,\n                            user?.other?.template || 1\n                          )}\n                        >\n                          {user.fullName}\n                        </a>\n                      </h4>\n\n                      <div className=\" flex items-center justify-center \">\n                        <h3 className=\" text-gray-400 font-medium\">\n                          {isBusiness\n                            ? user.business?.name\n                            : isPersonal\n                            ? user.company?.companyName\n                            : user.background?.education &&\n                              user.background?.education[0].name}\n                        </h3>\n                      </div>\n                    </div>\n                    <div className=\"absolute bottom-3 items-center flex justify-center\">\n                      <Button\n                        gradient\n                        gradientHover={false}\n                        className=\"mt-6\"\n                        invert\n                        onClick={() =>\n                          following\n                            ? onUnFollowUser(user?._id)\n                            : onFollowUser(user?._id)\n                        }\n                        rounded=\"rounded-full\"\n                        size=\"lg\"\n                        label={following ? 'Following' : 'Follow'}\n                      />\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          ) : null}\n        </div>\n      }\n    />\n  )\n}\n\nexport default RandomUsers\n","import CustomFooter from 'components/CustomFooter'\nimport ProfileStrength from 'components/ProfileStrength'\nimport PublicProfileCard from 'components/PublicProfileCard'\nimport Sidebar from 'components/Sidebar'\nimport { network } from 'helpers'\nimport { useRouter } from 'hooks/useRouter'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport About from 'pages/profile/About'\nimport Background from 'pages/profile/Background'\nimport Cover from 'pages/profile/Cover'\nimport Following from 'pages/profile/Following'\nimport Layout from 'pages/profile/Layout'\nimport PeopleAlsoViewed from 'pages/profile/PeopleAlsoViewed'\nimport Recommendations from 'pages/profile/Recommendations'\nimport { useEffect, useState } from 'react'\nimport RandomUsers from './RandomUsers'\n\nconst getUniqId = (str?: string) => {\n  if (str) {\n    const arr = str.split('_')\n    return arr[arr.length - 1]\n  }\n}\n\nconst Profile = ({ userData }: { userData: IParent }) => {\n  const route: any = useRouter()\n  const { viewMode, userId: userIdFromParam } = route?.match?.params\n\n  const iAmOwnerOfThisProfile = getUniqId(userIdFromParam) === userData._id\n  const showAllButtons = iAmOwnerOfThisProfile && viewMode === 'private'\n\n  const [otherUserData, setOtherUserData] = useState<IParent>()\n\n  useEffect(() => {\n    if (!iAmOwnerOfThisProfile) {\n      // I am not owner of this profile so fetch other user data\n      fetchOtherUser()\n    }\n    return () => {\n      // @ts-ignore\n      setOtherUserData({})\n    }\n  }, [iAmOwnerOfThisProfile])\n\n  const fetchOtherUser = async () => {\n    try {\n      const { data } = await network.post('/user/getById/' + userIdFromParam)\n      setOtherUserData({ ...data.data })\n    } catch (error) {\n      // @ts-ignore\n      console.error(error.message)\n    }\n  }\n\n  const commonProps = {\n    authUser: iAmOwnerOfThisProfile,\n    userData: iAmOwnerOfThisProfile ? userData : otherUserData,\n  }\n\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-800\">\n      <DashboardHeader userData={userData} />\n      <Sidebar />\n      <div className=\"flex\">\n        <div\n          className=\"mx-auto min-h-screen pt-8 w-full\"\n          style={{ maxWidth: '90rem' }}\n        >\n          <Cover {...commonProps} />\n\n          <div className=\"my-6\">\n            <Layout\n              firstCol={\n                <div className=\"space-y-8\">{<About {...commonProps} />}</div>\n              }\n              secondCol={\n                <div className=\"space-y-8 py-0\">\n                  <Background {...commonProps} />\n                  <Recommendations\n                    {...commonProps}\n                    recommendation={commonProps?.userData?.recommendation}\n                  />\n                  <Following\n                    list={commonProps?.userData?.following}\n                    interests={commonProps?.userData?.background?.interests}\n                  />\n                  <RandomUsers list={userData.following} />\n                </div>\n              }\n              thirdCol={\n                <div className=\"space-y-8\">\n                  {showAllButtons && <PublicProfileCard userData={userData} />}\n                  {showAllButtons && <ProfileStrength {...commonProps} />}\n                  <PeopleAlsoViewed {...commonProps} />\n                </div>\n              }\n            />\n          </div>\n        </div>\n      </div>\n      <CustomFooter />\n    </div>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}
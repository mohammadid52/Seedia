{"version":3,"sources":["components/alerts/Info.tsx","pages/project/AddProject.tsx"],"names":["Info","text","color","className","AddProject","userData","isBusiness","useAccountType","useEffect","history","push","links","FEED","validationSchema","Yup","title","required","min","max","salary","matches","briefDescription","website","url","closure","setNotification","useNotifications","useHistory","postMutation","useMutation","addPost","onSuccess","addProject","data","name","id","show","buttonText","buttonUrl","viewProject","mutate","postData","fullName","postType","customInId","isLoading","isError","error","functionTypeList","initSections","content","nanoid","useState","sections","setSections","sectionError","setSectionError","onChangeField","fieldName","value","idx","update","prev","onSubmit","values","a","length","updatedValues","duration","pageTitle","fontWeight","initialValues","functionType","size","label","placeholder","textarea","rows","cols","defaultItem","list","type","map","section","sectionIdx","onChange","e","target","onClick","remove","sec","errors","rounded","fullWidth","gradient","loading","toString"],"mappings":"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","file":"static/js/52.0c3df10d.chunk.js","sourcesContent":["import { InformationCircleIcon } from '@heroicons/react/solid'\n\nconst Info = ({\n  text,\n  color = 'blue',\n  className = '',\n}: {\n  className?: string\n  text: string\n  color?: string\n}) => {\n  return (\n    <div\n      className={`rounded-md dark:bg-transparent dark:border-gray-700 border border-gray-50 bg-${color}-50 p-4 ${className}`}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <InformationCircleIcon\n            className={`h-5 w-5 dark:text-${color}-300 text-${color}-400`}\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n          <p\n            className={`text-sm pb-0 mb-0 dark:text-${color}-300 text-${color}-700`}\n          >\n            {text}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Info\n","import { addPost, addProject } from 'apis/mutations'\nimport Error from 'components/alerts/Error'\nimport Info from 'components/alerts/Info'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormMultipleSelector from 'components/atoms/FormMultipleSelector'\nimport Meta from 'components/atoms/Meta/Meta'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport Title from 'components/atoms/Title'\nimport { links } from 'constants/Links'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent, IProject, ISection } from 'interfaces/UniversalInterface'\nimport { map, remove, update } from 'lodash'\nimport { nanoid } from 'nanoid'\nimport { useEffect, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst AddProject = ({ userData }: { userData: IParent }) => {\n  const { isBusiness } = useAccountType(userData)\n\n  useEffect(() => {\n    if (!isBusiness) {\n      return history.push(links.FEED)\n    }\n  }, [isBusiness])\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Title is required').min(10).max(150),\n    salary: Yup.object({\n      min: Yup.string()\n        .required('Minimum Salary is required')\n        .matches(/^[0-9]+$/, 'Must be only digits'),\n\n      max: Yup.string()\n        .required('Maximum Salary is required')\n        .matches(/^[0-9]+$/, 'Must be only digits'),\n    }),\n    briefDescription: Yup.string().required('Brief Description is required'),\n    website: Yup.string()\n      .required('Website Url is required')\n      .url('Invalid Url format'),\n\n    closure: Yup.string().required('Closure is required'),\n  })\n\n  // @ts-ignore\n  const initialValues: IProject = {\n    title: '',\n    functionType: [{ name: 'Part-time', id: '1' }],\n    salary: { min: '', max: '', duration: '' },\n    briefDescription: '',\n    website: '',\n    closure: '',\n  }\n\n  const { setNotification } = useNotifications()\n\n  const history = useHistory()\n\n  const postMutation = useMutation(addPost, {\n    onSuccess: () => {\n      history.push(links.FEED)\n    },\n  })\n\n  const { mutate, isLoading, isError, error } = useMutation(addProject, {\n    onSuccess: (data) => {\n      if (data) {\n        const { name, id } = data.data.data\n        setNotification({\n          show: true,\n          title: `You have successfully posted the project: ${name}`,\n          buttonText: 'View',\n          buttonUrl: links.viewProject(id),\n        })\n\n        postMutation.mutate({\n          postData: {\n            text: `${userData.fullName} added new project.`,\n            postType: 'project',\n            customInId: id,\n          },\n        })\n      }\n    },\n  })\n\n  const functionTypeList = [\n    { name: 'Full-time', id: '1' },\n    { name: 'Part-time', id: '2' },\n  ]\n  const salaryDurationList = [\n    { name: 'Per hour', id: '1' },\n    { name: 'Per day', id: '2' },\n    { name: 'Per week', id: '3' },\n    { name: 'Per month', id: '4' },\n  ]\n\n  const initSections: ISection[] = [\n    {\n      title: 'Responsibilities',\n      content: '• Developing new user-facing features using React.js',\n      id: nanoid(9),\n    },\n    {\n      title: 'Skills',\n      content:\n        '• Strong proficiency in JavaScript, including DOM manipulation and the JavaScript object model',\n      id: nanoid(9),\n    },\n  ]\n  const [sections, setSections] = useState<ISection[]>(initSections)\n\n  const [sectionError, setSectionError] = useState('')\n\n  const addNewSection = () => {\n    if (sections.length <= 10) {\n      sections.push({ title: '', content: '', id: nanoid(9) })\n      setSections((prev) => [...prev])\n      setSectionError('')\n    } else {\n      setSectionError('You cannot add more than 10 sections')\n    }\n  }\n\n  const removeSection = (id: string) => {\n    remove(sections, (sec) => sec.id === id)\n    setSections((prev) => [...prev])\n  }\n\n  const onChangeField = (fieldName: string, value: string, idx: number) => {\n    update(sections[idx], fieldName, () => value)\n    setSections((prev) => [...prev])\n  }\n\n  const onSubmit = async (values: any) => {\n    if (sections.length < 2) {\n      setSectionError('Atleast sections are required')\n    } else {\n      setSectionError('')\n      const updatedValues = {\n        ...values,\n        salary: {\n          ...values.salary,\n          duration: values.salary.duration[0].name,\n        },\n        sections,\n      }\n\n      mutate(updatedValues)\n    }\n  }\n\n  return (\n    <NarrowLayout userData={userData}>\n      <Meta pageTitle=\"Add Project\" />\n\n      <Title fontWeight=\"font-bold mb-8\">Add Project</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className=\"space-y-8\">\n          {/* // ~~~~~~~~~~~~~~~~~~~BASIC INFO~~~~~~~~~~~~~~~~~~ // */}\n          <Title size=\"gradient-border border-b pb-2 text-lg\">\n            Basic information\n          </Title>\n          <Info text=\"Project Title and Brief Description is very important for more views and recruitments. Try to add more keywords related to the project in it. Like Javascript Developer, etc.\" />\n\n          <FormInput\n            label=\"Project Title\"\n            id=\"title\"\n            name=\"title\"\n            required\n            placeholder=\"Add project title\"\n          />\n\n          <FormInput\n            label=\"Brief Description\"\n            id=\"briefDescription\"\n            name=\"briefDescription\"\n            placeholder=\"Give a little information about the job\"\n            required\n            textarea\n            rows={5}\n            cols={255}\n          />\n\n          <FormMultipleSelector\n            label=\"Function Type\"\n            required\n            name=\"functionType\"\n            defaultItem={functionTypeList[0].name}\n            placeholder=\"Select type\"\n            list={functionTypeList}\n          />\n\n          <div className=\"w-full grid gap-x-4 grid-cols-1 sm:grid-cols-2\">\n            <FormInput\n              // gridClass=\"w-1/2\"\n              label=\"Minimum Salary\"\n              id=\"salary[min]\"\n              name=\"salary[min]\"\n              required\n              type=\"number\"\n              placeholder=\"Add min salary\"\n            />\n            <FormInput\n              // gridClass=\"w-1/2\"\n              label=\"Maximum Salary\"\n              id=\"salary[max]\"\n              type=\"number\"\n              name=\"salary[max]\"\n              required\n              placeholder=\"Add max salary\"\n            />\n          </div>\n          <FormMultipleSelector\n            label=\"Salary Duration\"\n            required\n            name=\"salary[duration]\"\n            placeholder=\"Select duration\"\n            list={salaryDurationList}\n          />\n\n          {/* // ~~~~~~~~~~~~~~~~~~~Detail INFO~~~~~~~~~~~~~~~~~~ // */}\n\n          <Title size=\"gradient-border border-b pb-2 text-lg\">\n            Detail information about the job\n          </Title>\n          <div className=\"flex flex-col gap-y-16\">\n            {map(sections, (section, sectionIdx) => (\n              <div key={section.id} className=\"flex relative flex-col gap-y-4\">\n                <NormalFormInput\n                  onChange={(e) =>\n                    onChangeField('title', e.target.value, sectionIdx)\n                  }\n                  value={section.title}\n                  label=\"Title\"\n                  id={section.id + '-title'}\n                  name=\"title\"\n                  required\n                  placeholder=\"Perks\"\n                />\n\n                <NormalFormInput\n                  label=\"Content\"\n                  onChange={(e) =>\n                    onChangeField('content', e.target.value, sectionIdx)\n                  }\n                  value={section.content}\n                  id={section.id + '-briefDescription'}\n                  name=\"briefDescription\"\n                  placeholder=\"• 5 Days Working\"\n                  required\n                  textarea\n                  rows={5}\n                  cols={255}\n                />\n                {sectionIdx !== 0 && sectionIdx !== 1 && (\n                  <span\n                    onClick={() => removeSection(section.id)}\n                    className=\"xl:absolute xl:bottom-0 static on-hover-item  xl:-right-10  hover:bg-gray-800 transition-all cursor-pointer p-2 rounded-md text-red-500 xl:translate-x-full transform \"\n                  >\n                    Delete section\n                  </span>\n                )}\n              </div>\n            ))}\n          </div>\n          {sectionError && <Error errors={[sectionError]} />}\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              rounded=\"rounded-lg\"\n              fullWidth\n              gradient\n              size=\"lg\"\n              onClick={addNewSection}\n              label=\"Add new section\"\n            />\n          </div>\n\n          <FormInput\n            label=\"Apply URL\"\n            id=\"website\"\n            name=\"website\"\n            required\n            placeholder=\"Your company website url\"\n          />\n\n          {/* // ~~~~~~~~~~~~~~~~~~~CLOSURE~~~~~~~~~~~~~~~~~~ // */}\n          <Title size=\"gradient-border border-b pb-2 text-lg\">Closure</Title>\n          <FormInput\n            label=\"Closure\"\n            id=\"closure\"\n            name=\"closure\"\n            required\n            placeholder=\"Add closure\"\n          />\n\n          <div className=\"flex items-center justify-end\">\n            <Button\n              type=\"submit\"\n              rounded=\"rounded-lg\"\n              loading={isLoading}\n              gradient\n              size=\"lg\"\n              label=\"Submit\"\n            />\n          </div>\n\n          {isError && <Error errors={[error.toString()]} />}\n        </Form>\n      </Formik>\n    </NarrowLayout>\n  )\n}\n\nexport default AddProject\n"],"sourceRoot":""}
{"version":3,"sources":["../../../../src/components/description/description.tsx","components/animation/AnimatedDiv.tsx","components/alerts/Error.tsx","components/Copyright.jsx","containers/Layout.tsx","../../../../src/components/label/label.tsx","../../../../src/components/radio-group/radio-group.tsx","../../../src/hooks/use-flags.ts","pages/account/other/ChooseAccount.tsx"],"names":["DescriptionContext","createContext","useDescriptionContext","context","useContext","err","Error","useDescriptions","useState","descriptionIds","setDescriptionIds","useMemo","props","register","useCallback","existing","clone","idx","contextBag","slot","name","value","Description","id","useId","useIsoMorphicEffect","passThroughProps","propsWeControl","render","defaultTag","AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","errors","length","map","error","navigation","href","Copyright","year","Date","getFullYear","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","LabelContext","useLabelContext","useLabels","labelIds","setLabelIds","Label","passive","allProps","ActionTypes","reducers","options","state","action","element","propsRef","radio","RadioGroupContext","useRadioGroupContext","component","RadioGroup","stateReducer","match","onChange","disabled","useReducer","dispatch","labelledby","LabelProvider","describedby","DescriptionProvider","radioGroupRef","useRef","firstOption","option","containsCheckedOption","triggerChange","nextValue","nextOption","useTreeWalker","container","accept","node","NodeFilter","walk","handleKeyDown","all","event","Keys","focusIn","Focus","FocusResult","activeOption","document","registerOption","type","RegisterOption","api","change","ref","role","onKeyDown","OptionState","Option","optionRef","initialFlags","flags","setFlags","addFlag","hasFlag","Boolean","removeFlag","toggleFlag","useFlags","radioGroupDisabled","radioGroupValue","handleClick","handleFocus","handleBlur","isFirstOption","isDisabled","checked","tabIndex","onClick","undefined","onFocus","onBlur","active","settings","description","ChooseAccount","user","selected","setSelected","history","useHistory","loading","setLoading","setErrors","setValues","useUserContext","onNext","a","path","links","COMPANY","EDUCATION","BUSINESS_STEP_1","token","getAccessToken","profileUrl","firstName","lastName","myId","_id","toLowerCase","updatedData","other","accountFinishedStep","accountType","toLocaleLowerCase","network","post","headers","Authorization","push","console","setting","settingIdx","classNames","as","fullWidth","label","gradient"],"mappings":"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","file":"static/js/39.9fd177e6.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n","import { RadioGroup } from '@headlessui/react'\nimport Error from 'components/alerts/Error'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport Button from 'components/atoms/Button'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { classNames } from 'utils/classNames'\n\nconst settings = [\n  {\n    name: 'Personal',\n    description: 'If you are creating account for personal use, select this',\n  },\n  {\n    name: 'Student',\n    description: 'If you are student then select this',\n  },\n  {\n    name: 'Business',\n    description:\n      'If you are creating account for the business then select this',\n  },\n]\n\nconst ChooseAccount = ({ user }: { user?: IParent }) => {\n  const [selected, setSelected] = useState(settings[0])\n  const history = useHistory()\n\n  const [loading, setLoading] = useState(false)\n\n  const [errors, setErrors] = useState<string[]>([])\n\n  const { setValues } = useUserContext()\n\n  const onNext = async () => {\n    let path\n    if (selected.name === 'Personal') {\n      path = links.COMPANY\n    } else if (selected.name === 'Student') {\n      path = links.EDUCATION\n    } else {\n      path = links.BUSINESS_STEP_1\n    }\n\n    try {\n      setLoading(true)\n\n      const token = getAccessToken()\n\n      const profileUrl = `${user?.firstName}_${user?.lastName}_${\n        user?.myId || user?._id\n      }`.toLowerCase()\n\n      const updatedData = {\n        ...user,\n        profileUrl,\n        other: {\n          ...user?.other,\n          accountFinishedStep: 'chooseAccount',\n          accountType: selected.name.toLocaleLowerCase(),\n        },\n      }\n\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n      setValues({ ...updatedData })\n\n      setErrors([])\n      history.push(path)\n    } catch (error) {\n      setErrors(['Oops! Something went wrong'])\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div>\n      <Layout title=\"Choose account type\" subtitle=\"\">\n        <AnimatedDiv className=\"mt-4 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white dark:border-gray-700 border border-white dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n            <RadioGroup value={selected} onChange={setSelected}>\n              <RadioGroup.Label className=\"sr-only\">\n                Privacy setting\n              </RadioGroup.Label>\n              <div className=\"bg-white dark:bg-gray-900 rounded-md space-y-4\">\n                {settings.map((setting, settingIdx) => (\n                  <RadioGroup.Option\n                    key={setting.name}\n                    value={setting}\n                    className={({ checked }) =>\n                      classNames(\n                        checked\n                          ? 'bg-pink-50 dark:bg-gray-900 rounded-md dark:border-pink-700 border-pink-200 z-10'\n                          : 'border-gray-200 dark:border-gray-700 rounded-md',\n                        'relative border p-4 transition-all duration-200 flex overflow-hidden cursor-pointer focus:outline-none'\n                      )\n                    }\n                  >\n                    {({ active, checked }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            checked\n                              ? 'bg-pink-600 border-transparent'\n                              : 'bg-white border-gray-300',\n                            active ? 'ring-2 ring-offset-2 ring-pink-500' : '',\n                            'h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center'\n                          )}\n                          aria-hidden=\"true\"\n                        >\n                          <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\n                        </span>\n                        <div className=\"ml-3 flex flex-col items-start\">\n                          <RadioGroup.Label\n                            as=\"span\"\n                            className={classNames(\n                              checked\n                                ? 'gradient-text'\n                                : 'dark:text-white text-gray-900',\n                              'block text-sm font-medium mb-2'\n                            )}\n                          >\n                            {setting.name}\n                          </RadioGroup.Label>\n                          <RadioGroup.Description\n                            as=\"span\"\n                            className={classNames(\n                              checked ? 'gradient-text' : 'text-gray-500',\n                              'block text-sm'\n                            )}\n                          >\n                            {setting.description}\n                          </RadioGroup.Description>\n                        </div>\n                      </>\n                    )}\n                  </RadioGroup.Option>\n                ))}\n              </div>\n            </RadioGroup>\n            <Button\n              loading={loading}\n              fullWidth\n              label=\"Next\"\n              className=\"mt-4\"\n              gradient\n              onClick={onNext}\n            />\n            {errors.length > 0 && <Error errors={errors} />}\n          </div>\n        </AnimatedDiv>\n      </Layout>\n    </div>\n  )\n}\n\nexport default ChooseAccount\n"],"sourceRoot":""}
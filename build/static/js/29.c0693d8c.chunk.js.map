{"version":3,"sources":["components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/Modal.tsx","hooks/useUser.ts","components/Dropdown/Dropdown.tsx","pages/DashboardLayout.tsx","components/DiscoverButton.tsx","components/SideCard.tsx","components/posts/PostBottom.tsx","hooks/useOnScreen.ts","components/posts/Post.tsx","pages/dashboard/PostModal.tsx","pages/dashboard/PostInput.tsx","pages/dashboard/ListPosts.tsx","pages/dashboard/AboutMe.tsx","pages/dashboard/index.tsx"],"names":["FormError","show","error","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","className","FormInput","label","id","name","type","placeholder","gridClass","value","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","rows","textClass","cols","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","e","target","htmlFor","autoFocus","touched","Boolean","onClick","length","Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","Root","as","Fragment","static","style","zIndex","noop","Child","Overlay","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Dropdown","list","Button","Items","map","item","Item","active","stopPropagation","classNames","Icon","DashboardLayout","firstCol","secondCol","thirdCol","firstColClass","firstColStyles","thirdColClass","thirdColStyles","mainClass","minHeight","DiscoverCard","extraItems","href","links","groups","link","news","readers","SideCard","secondary","cardTitle","content","_news","idx","PostBottom","AiOutlineLike","FaRegCommentDots","AiOutlineShareAlt","FiSend","useOnScreen","ref","rootMargin","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","disconnect","Post","post","userId","user","postId","toString","mutate","useMutation","viewPost","postRef","useRef","isCardOnScreen","isViewed","viewedBy","includes","iAmOwnerOfThisPost","setNotification","useNotifications","saveMutations","saveUnsavePost","featureMutations","featurePost","deleteMutations","deletePost","setTimeout","isSaved","savedPosts","isFeatured","featuredPosts","saved","setSaved","featured","setFeatured","commonDropdownList","nanoid","action","buttonText","buttonUrl","myItems","title","FaBookmark","FaRegBookmark","AiOutlineLink","navigator","clipboard","writeText","window","origin","postById","postUrl","dropdownList","fullName","firstName","myDropdownList","AiFillStar","AiOutlineStar","AiOutlineEdit","AiOutlineDelete","src","profilePicture","avatarPlaceholder","alt","getProfileById","other","template","followers","moment","postedOn","fromNow","text","PostModal","setNewPostAdded","usePostContext","addPost","onSuccess","isError","formRef","innerRef","initialValues","onSubmit","values","modifiedData","postData","gradient","loading","size","PostInput","customButtons","showPostModal","setShowPostModal","defaultButtons","invert","HiOutlinePhotograph","BsCameraVideo","bgColor","BiCalendarEvent","RiArticleLine","Card","ListPosts","skip","setSkip","posts","setPosts","fetchFeed","limit","_posts","isSuccess","newPostAdded","then","postCount","count","Meta","pageTitle","endMessage","dataLength","scrollableTarget","next","hasMore","loader","EmptyState","animation","animationData","PersonalCard","showModal","setShowModal","saving","setSaving","_image","setImage","setValues","useUserContext","onSave","a","fd","FormData","append","config","headers","network","location","updatedData","password","console","message","profileImageSelectorRef","React","isBusiness","useAccountType","fetchAvgViews","postViews","URL","createObjectURL","img","files","accept","backgroundImage","coverPicture","getProfile","business","company","jobTitle","pwvpCount","Dashboard","Loading","DashboardHeader","Sidebar"],"mappings":"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","file":"static/js/29.c0693d8c.chunk.js","sourcesContent":["import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block align-bottom  bg-white dark:bg-gray-900 rounded-lg px-4 pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top  sm:p-6 pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider \">\n                    <h3 className=\"dark:text-white text-gray-900 text-2xl font-semibold\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","import React from 'react'\n\nconst DashboardLayout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  firstColClass,\n  firstColStyles,\n  thirdColClass,\n  thirdColStyles,\n  mainClass = '',\n}: {\n  firstColClass?: string\n  mainClass?: string\n  firstColStyles?: any\n  firstCol?: React.ReactNode\n  thirdColClass?: string\n  thirdColStyles?: any\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n}) => {\n  return (\n    <div className=\"flex-grow pt-24 w-full px-4 md:max-w-6xl lg:max-w-7xl sm:max-w-5xl mx-auto xl:px-8 lg:flex relative\">\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 px-6 sm:px-4 lg:px-0  min-w-0 bg-gray-100 dark:bg-gray-900 xl:flex\">\n        <div\n          style={{ ...firstColStyles }}\n          className={`${firstColClass}  dark:bg-gray-900 xl:flex-shrink-0 xl:w-64 bg-gray-100`}\n        >\n          <div\n            className=\"h-full py-6\n          \"\n          >\n            {/* Start left column area */}\n            <div className=\"h-full  relative\" style={{ minHeight: '12rem' }}>\n              {firstCol}\n            </div>\n            {/* End left column area */}\n          </div>\n        </div>\n\n        <div className=\"bg-gray-100 dark:bg-gray-900 lg:min-w-0 lg:pl-6 pl-0 lg:flex-1 \">\n          <div className=\"h-full py-6 px-0 lg:px-6 xl:px-8\">\n            {/* Start main area*/}\n            <div className=\"relative h-full \" style={{}}>\n              {secondCol}\n            </div>\n            {/* End main area */}\n          </div>\n        </div>\n      </div>\n\n      <div\n        style={{ ...thirdColStyles }}\n        className={`${thirdColClass} bg-gray-100 dark:bg-gray-900 px-4 lg:px-0 lg:flex-shrink-0 `}\n      >\n        <div className=\"h-full pl-0 lg:pl-6  py-6 \">\n          {/* Start right column area */}\n          <div className=\"h-full relative\" style={{ minHeight: '16rem' }}>\n            {thirdCol}\n          </div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardLayout\n","import { links } from 'constants/Links'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\" cursor-pointer flex items-center justify-between\">\n            <p className=\"hover:underline \">Events</p>\n            <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n              +\n            </div>\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news • {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { AiOutlineLike } from 'react-icons/ai'\nimport { IconType } from 'react-icons/lib'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineShareAlt } from 'react-icons/ai'\nimport { FiSend } from 'react-icons/fi'\n\nconst Button = ({ Icon, label }: { Icon: IconType; label: string }) => {\n  return (\n    <button className=\"flex m-2 hover:bg-gray-200 text-sm text-gray-700 dark:text-gray-400 items-center justify-center py-2 rounded-lg transition-all px-3 duration-300 dark:hover:bg-gray-700\">\n      <Icon className=\"mr-2\" />\n      {label}\n    </button>\n  )\n}\n\nconst PostBottom = () => {\n  return (\n    <div className=\"grid grid-cols-4 px-2 mb-2\">\n      <Button Icon={AiOutlineLike} label=\"Like\" />\n      <Button Icon={FaRegCommentDots} label=\"Comment\" />\n      <Button Icon={AiOutlineShareAlt} label=\"Share\" />\n      <Button Icon={FiSend} label=\"Send\" />\n    </div>\n  )\n}\n\nexport default PostBottom\n","import { useEffect, useState } from 'react'\n\nconst useOnScreen = (ref: any, rootMargin: string = '0px') => {\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIntersecting(entry.isIntersecting),\n      {\n        rootMargin,\n      }\n    )\n\n    if (ref.current) {\n      observer.observe(ref.current!)\n      // Remove the observer as soon as the component is unmounted\n    }\n    return () => {\n      observer.disconnect()\n    }\n  }, [ref])\n\n  return isIntersecting\n}\n\nexport default useOnScreen\n","import {\n  saveUnsavePost,\n  viewPost,\n  featurePost,\n  deletePost,\n} from 'apis/mutations'\nimport Dropdown from 'components/Dropdown/Dropdown'\nimport PostBottom from 'components/posts/PostBottom'\nimport { links } from 'constants/Links'\nimport useOnScreen from 'hooks/useOnScreen'\nimport { IPost, IParent } from 'interfaces/UniversalInterface'\nimport moment from 'moment'\nimport { useEffect, useState, useRef } from 'react'\nimport { FaRegBookmark, FaBookmark } from 'react-icons/fa'\nimport { useMutation } from 'react-query'\nimport { nanoid } from 'nanoid'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport {\n  AiOutlineStar,\n  AiFillStar,\n  AiOutlineLink,\n  AiOutlineEdit,\n  AiOutlineDelete,\n} from 'react-icons/ai'\nimport { useNotifications } from 'context/NotificationContext'\n\nconst Post = ({\n  post,\n  userId,\n  userData,\n}: {\n  post: IPost\n  userId: string\n  userData: IParent\n}) => {\n  const user = post.user\n  const postId: string = post._id.toString()\n\n  const { mutate } = useMutation(() => viewPost(postId))\n\n  const postRef = useRef(null)\n  const isCardOnScreen = useOnScreen(postRef)\n\n  const isViewed = post.viewedBy.includes(userId)\n\n  const iAmOwnerOfThisPost = user._id.toString() === userId\n  const { setNotification } = useNotifications()\n\n  const saveMutations = useMutation(saveUnsavePost)\n  const featureMutations = useMutation(featurePost)\n  const deleteMutations = useMutation(deletePost)\n\n  useEffect(() => {\n    if (isCardOnScreen && !isViewed && !iAmOwnerOfThisPost) {\n      setTimeout(() => {\n        mutate()\n      }, 300)\n    }\n  }, [isCardOnScreen, isViewed])\n\n  const isSaved = userData?.savedPosts?.includes(postId.toString())\n  const isFeatured = userData?.featuredPosts?.includes(postId.toString())\n\n  const [saved, setSaved] = useState(isSaved)\n  const [featured, setFeatured] = useState(isFeatured)\n\n  const commonDropdownList = [\n    {\n      id: nanoid(),\n      name: saved ? 'Unsave' : 'Save for later',\n      onClick: () => {\n        if (saved) {\n          // @ts-ignore\n          saveMutations.mutate({\n            action: 'unsave',\n            postId: postId.toString(),\n          })\n          setSaved(false)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post unsaved.',\n          })\n        } else {\n          // @ts-ignore\n          saveMutations.mutate({ action: 'save', postId: postId.toString() })\n          setSaved(true)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post saved.',\n          })\n        }\n      },\n      Icon: saved ? FaBookmark : FaRegBookmark,\n    },\n    {\n      Icon: AiOutlineLink,\n      id: nanoid(),\n      name: 'Copy link to post',\n      onClick: () => {\n        navigator.clipboard.writeText(\n          window.origin + links.postById(post.postUrl)\n        )\n      },\n    },\n  ]\n\n  const dropdownList = [\n    ...commonDropdownList,\n    {\n      id: '3',\n      name: `Unfollow ${user?.fullName || user.firstName}`,\n      onClick: () => {},\n    },\n  ]\n\n  // Show this if the post is mine\n  const myDropdownList = [\n    ...commonDropdownList,\n    {\n      id: '1',\n      name: 'Feature on top of profile',\n      onClick: () => {\n        if (featured) {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'unfeature',\n            postId: postId.toString(),\n          })\n          setFeatured(false)\n          setNotification({\n            show: true,\n            title: 'Post removed from featured list.',\n          })\n        } else {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'feature',\n            postId: postId.toString(),\n          })\n          setNotification({\n            show: true,\n            title: 'Post added to featured list.',\n          })\n          setFeatured(true)\n        }\n      },\n      Icon: featured ? AiFillStar : AiOutlineStar,\n    },\n    {\n      id: '4',\n      name: `Edit post`,\n      Icon: AiOutlineEdit,\n      onClick: () => {},\n    },\n    {\n      id: '5',\n      name: `Delete post`,\n      Icon: AiOutlineDelete,\n      onClick: () => {\n        deleteMutations.mutate(postId)\n      },\n    },\n  ]\n\n  return (\n    <div\n      ref={postRef}\n      className=\"rounded-lg dark:bg-gray-800 border border-gray-200 bg-white dark:border-gray-700 \"\n    >\n      <div className=\"flex w-full items-center justify-between px-6\">\n        <div className=\"flex  py-4\">\n          <div className=\"mr-4 flex-shrink-0\">\n            <img\n              src={\n                user.profilePicture ? user.profilePicture : avatarPlaceholder\n              }\n              alt=\"13RMS\"\n              className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <a\n              href={links.getProfileById(\n                user?.profileUrl,\n                user?.other?.template,\n                'public'\n              )}\n            >\n              <h4 className=\"text-base hover:underline  dark:text-white font-bold\">\n                {user?.fullName || '--'}\n              </h4>\n            </a>\n            <span className=\"text-gray-500 text-xs dark:text-gray-500\">\n              {user?.followers?.length || 0} followers{' '}\n              <span className=\"text-xs dark:text-gray-500 text-gray-500 font-medium\">\n                • {moment(post.postedOn).fromNow()}\n              </span>\n            </span>\n          </div>\n        </div>\n        <div className=\"relative\">\n          <Dropdown list={iAmOwnerOfThisPost ? myDropdownList : dropdownList} />\n        </div>\n      </div>\n      <div className=\"px-6 pb-4\">\n        <p className=\"text-gray-700 dark:text-gray-400 text-sm whitespace-pre-line\">\n          {post.text}\n        </p>\n      </div>\n      {post.links && post.links.length > 0 && (\n        <img className=\"w-full\" src={post.links[0]} alt=\"Mountain\" />\n      )}\n\n      {/* <div className=\"px-6 pt-4 pb-2\">\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #photography\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #travel\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #winter\n        </span>\n      </div> */}\n\n      <PostBottom />\n    </div>\n  )\n}\n\nexport default Post\n","import { addPost } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { Form, Formik } from 'formik'\nimport { useRef } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostModal = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const initialValues = {\n    text: '',\n  }\n  const formRef = useRef()\n\n  const onSubmit = (values: { text: string }) => {\n    const modifiedData = {\n      postData: { text: values.text },\n    }\n    mutate(modifiedData)\n  }\n\n  return (\n    <Modal setOpen={setOpen} header=\"Create a post\" open={open}>\n      <div className=\" min-w-132 min-h-56 max-h-132 overflow-y-auto\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            <FormInput\n              gridClass=\"hideBorders\"\n              hideBorders\n              textClass=\"text-sm text-gray-700 dark:text-gray-100 sm:text-lg\"\n              placeholder=\"What do you want to talk about?\"\n              rows={10}\n              name=\"text\"\n              id=\"text\"\n              textarea\n            />\n            <div className=\"mt-5 m-1 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={isLoading}\n                // @ts-ignore\n                disabled={formRef?.current?.values.text.length <= 0}\n                type=\"submit\"\n                label=\"Post\"\n                size=\"lg\"\n              />\n            </div>\n            {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport PostModal from 'pages/dashboard/PostModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal open={showPostModal} setOpen={setShowPostModal} />\n      )}\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","import { fetchFeed } from 'apis/queries'\nimport animationData from 'assets/animation/caught-up.json'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport { usePostContext } from 'context/PostContext'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useQuery } from 'react-query'\n\nconst ListPosts = ({ userData }: { userData: IParent }) => {\n  const [skip, setSkip] = useState(0)\n\n  const [posts, setPosts] = useState([])\n\n  const { data, refetch, isLoading, isFetched, isSuccess } = useQuery(\n    'list-posts',\n    () => {\n      return fetchFeed({ limit: 10, skip })\n    },\n    {\n      onSuccess: (data) => {\n        const _posts = data?.data?.data?.posts\n        if (_posts && _posts.length > 0) {\n          setPosts([...posts, ..._posts])\n        }\n      },\n    }\n  )\n\n  const fetchMoreData = () => {\n    setSkip(skip + 10)\n    refetch()\n  }\n\n  const { newPostAdded, setNewPostAdded } = usePostContext()\n\n  useEffect(() => {\n    if (newPostAdded) {\n      refetch().then(() => {\n        setNewPostAdded(false)\n      })\n    }\n  }, [newPostAdded])\n\n  const postCount =\n    !isLoading && isFetched && isSuccess ? data.data.data.count : 0\n\n  return (\n    <div className=\"\">\n      <Meta pageTitle={`(${postCount || 0}) Feed | 13RMS`} />\n      {posts && posts.length > 0 ? (\n        <InfiniteScroll\n          endMessage={<h1>Ended</h1>}\n          dataLength={postCount}\n          scrollableTarget=\"main_content\"\n          next={fetchMoreData}\n          hasMore={postCount > posts.length}\n          loader={<h4>Loading...</h4>}\n        >\n          <div className=\"grid grid-cols-1 gap-y-6\">\n            {posts.map((post) => (\n              <Post userData={userData} userId={userData._id} post={post} />\n            ))}\n          </div>\n        </InfiniteScroll>\n      ) : (\n        <EmptyState animation={animationData} title=\"You're all caught up\" />\n      )}\n    </div>\n  )\n}\n\nexport default ListPosts\n","import { fetchAvgViews } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport DiscoverCard from 'components/DiscoverButton'\nimport { links } from 'constants/Links'\nimport { useUserContext } from 'context/UserContext'\nimport { network } from 'helpers'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport React, { useState } from 'react'\nimport { BsFillBookmarkFill } from 'react-icons/bs'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PersonalCard = ({\n  className,\n\n  userData: user,\n}: {\n  className?: string\n  userData?: IParent\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowModal(true)\n  }\n\n  const { setValues } = useUserContext()\n\n  const onSave = async () => {\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...user,\n          profilePicture: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post('/user/update', {\n          ...updatedData,\n        })\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setShowModal(false)\n    }\n    setSaving(false)\n  }\n\n  const profileImageSelectorRef = React.useRef()\n\n  const { isBusiness } = useAccountType(user)\n\n  const { data } = useQuery('average-post-views', () => fetchAvgViews())\n\n  const postViews = data?.data?.data || 0\n\n  return (\n    <>\n      {showModal && (\n        <Modal\n          header={`Profile Photo`}\n          disableBackdropClose\n          open={showModal}\n          setOpen={setShowModal}\n        >\n          <div className={`sm:min-w-64 sm:min-h-64`}>\n            <div\n              className={`relative min-h-48 flex items-center justify-center`}\n            >\n              {_image && (\n                <img\n                  className={`shadow-xl md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full`}\n                  src={URL.createObjectURL(_image)}\n                  alt=\"People working on laptops\"\n                />\n              )}\n            </div>\n            <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={saving}\n                disabled={saving}\n                onClick={onSave}\n                label=\"Save\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* HIDDEN IMAGE INPUT */}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {/* ------------ Profile Card ---------*/}\n      <div\n        className={`rounded-lg   border dark:border-gray-700 transition-all  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800`}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${\n              user?.coverPicture\n                ? user?.coverPicture\n                : 'https://source.unsplash.com/1600x900/?nature,water'\n            })`,\n          }}\n          className=\"w-full lg:h-20 sm:h-24 bg-center bg-no-repeat bg-cover h-20\"\n        />\n        <div className=\"flex justify-center -mt-8\">\n          <img\n            alt=\"\"\n            src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n            className=\"rounded-full border-solid lg:h-16 lg:w-16 h-12 w-12  border-white border-2 -mt-3\"\n          />\n        </div>\n        <div className=\"text-center px-3 pb-6 pt-2\">\n          <a\n            href={links.getProfile(user, true)}\n            className=\"dark:text-white  text-gray-900 text-base font-bold \"\n          >\n            {user.fullName}\n          </a>\n          <p className=\"text-sm font-medium dark:text-gray-500 text-gray-500 \">\n            {isBusiness ? user.business.name : user.company.jobTitle}\n          </p>\n        </div>\n        <div className=\"flex gap-y-2  flex-col border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Who viewed your profile</h6>\n            <span className=\"text-link font-semibold\">{user.pwvpCount}</span>\n          </div>\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Views of your post</h6>\n            <span className=\"text-link font-semibold\">{postViews}</span>\n          </div>\n        </div>\n        <a\n          href={links.myItems()}\n          className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-start px-4 border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\"\n        >\n          <BsFillBookmarkFill className=\"mr-2\" />\n          <p>My Items</p>\n        </a>\n      </div>\n      {/* ------------ Profile Card Ends ---------*/}\n\n      {/* // ~~~~~~~~~~~~~~~~~~~Discover Cards ~~~~~~~~~~~~~~~~~~~~ // */}\n      <DiscoverCard />\n    </>\n  )\n}\nexport default PersonalCard\n","import Loading from 'components/Loading'\nimport Sidebar from 'components/Sidebar'\nimport SideCard from 'components/SideCard'\nimport useUser from 'hooks/useUser'\nimport { IParent, NavProps } from 'interfaces/UniversalInterface'\nimport ListPosts from 'pages/dashboard/ListPosts'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport PersonalCard from './AboutMe'\nimport PostInput from './PostInput'\n\ninterface DashboardProps extends NavProps {\n  userData: IParent\n}\n\nconst Dashboard = ({ userData }: DashboardProps) => {\n  const { isFetched, isLoading } = useUser(userData._id, userData)\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n\n      <Sidebar />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`max-h-152 lg:block  xl:block w-full  `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              <PersonalCard userData={userData} />\n              {/* <GroupList secondary userId={userData._id} /> */}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              <PostInput profilePicture={userData?.profilePicture} />\n              <ListPosts userData={userData} />\n            </div>\n          }\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n            </div>\n          }\n        />\n      </div>\n    </div>\n    // </Sidebar>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}
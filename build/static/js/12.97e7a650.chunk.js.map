{"version":3,"sources":["pages/Signup.jsx","components/Copyright.jsx","hooks/useForm.tsx","components/atoms/FormInput.tsx"],"names":["Signup","history","useHistory","useState","isLoaded","setIsLoaded","useForm","email","password","firstName","lastName","fields","onChange","errors","setErrors","setTimeout","handleSubmit","isValid","trimmedLen","field","trim","length","test","validateForm","push","className","src","alt","onSubmit","gridClass","label","id","name","value","required","type","error","href","onClick","fullWidth","rounded","gradient","navigation","Copyright","year","Date","getFullYear","aria-label","map","item","initialFields","errorInitialFields","setFields","e","target","FormInput","placeholder","htmlFor","aria-invalid","aria-describedby","aria-hidden"],"mappings":"yLAsLeA,UA9KA,WACb,IAAMC,EAAUC,cADG,EAEaC,oBAAS,GAFtB,mBAEZC,EAFY,KAEFC,EAFE,OAiB6BC,YAZzB,CACrBC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,IAGiB,CAC3BH,MAAO,GACPC,SAAU,KAGJG,EAjBW,EAiBXA,OAAQC,EAjBG,EAiBHA,SAAUC,EAjBP,EAiBOA,OAAQC,EAjBf,EAiBeA,UA2ClCC,YAAW,WACTV,GAAY,KACX,KAEH,IAAMW,EAAe,YA1CA,WACnB,IAAIC,GAAU,EAERC,EAAa,SAACC,GAAD,OAAWR,EAAOQ,GAAOC,OAAOC,QAgCnD,OA9BIH,EAAW,UAAY,GACzBD,GAAU,EACVJ,EAAON,MAAQ,2BAEfU,GAAU,EACVJ,EAAON,MAAQ,IAIf,uEAAuEe,KACrEX,EAAOJ,QAGTU,GAAU,EACVJ,EAAON,MAAQ,KAEfU,GAAU,EACVJ,EAAON,MAAQ,sCAGbW,EAAW,YAAc,GAC3BD,GAAU,EACVJ,EAAOL,SAAW,iDAElBS,GAAU,EACVJ,EAAOL,SAAW,IAGpBM,EAAU,eAAKD,IAERI,GAQSM,IAEdtB,EAAQuB,KAAK,2CAIjB,OAAQpB,EAGN,sBAAKqB,UAAU,4EAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,sBACVC,IAA8B,YAC9BC,IAAI,aAEN,oBAAIF,UAAU,yDAAd,gCAGA,oBAAGA,UAAU,yCAAb,kDACuC,uBADvC,qCAMF,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,sDAAf,SACE,uBAAMG,SAAUZ,EAAcS,UAAU,YAAxC,UACE,sBAAKA,UAAU,uDAAf,UACE,cAAC,IAAD,CACEI,UAAU,gBACVC,MAAM,aACNC,GAAG,YACHC,KAAK,YACLpB,SAAUA,EACVqB,MAAOtB,EAAOF,YAGhB,cAAC,IAAD,CACEoB,UAAU,gBACVC,MAAM,YACNC,GAAG,WACHC,KAAK,WACLpB,SAAUA,EACVqB,MAAOtB,EAAOD,cAIlB,cAAC,IAAD,CACEoB,MAAM,QACNC,GAAG,QACHC,KAAK,QACLpB,SAAUA,EACVsB,UAAQ,EACRC,KAAK,QACLC,MAAOvB,EAAON,MACd0B,MAAOtB,EAAOJ,QAEhB,cAAC,IAAD,CACEuB,MAAM,WACNC,GAAG,WACHC,KAAK,WACLpB,SAAUA,EACVuB,KAAK,WACLC,MAAOvB,EAAOL,SACd0B,UAAQ,EACRD,MAAOtB,EAAOH,WAGhB,oBAAGiB,UAAU,uCAAb,2DACiD,IAC/C,mBACEY,KAAK,KACLZ,UAAU,wDAFZ,4CAKK,IAPP,MAQM,IACJ,mBACEY,KAAK,KACLZ,UAAU,wDAFZ,8BAQF,8BACE,cAAC,IAAD,CACEa,QAAStB,EACTuB,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRX,MAAM,qCAKd,sBAAKL,UAAU,mBAAf,8BAEE,oBAAGY,KAAK,SAASZ,UAAU,aAA3B,UACG,IADH,qBAMJ,cAAC,IAAD,OAlGF,cAAC,IAAD,M,2CChFEiB,EAAa,CACjB,CAAEV,KAAM,gBAAiBK,KAAM,MAC/B,CAAEL,KAAM,iBAAkBK,KAAM,MAChC,CAAEL,KAAM,mBAAoBK,KAAM,MAClC,CAAEL,KAAM,UAAWK,KAAM,OA+BZM,IA7BG,WAChB,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,wBAAQrB,UAAU,GAAlB,SACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,gGACVsB,aAAW,SAFb,SAIGL,EAAWM,KAAI,SAACC,GAAD,OACd,qBAAqBxB,UAAU,wBAA/B,SACE,mBACEY,KAAMY,EAAKZ,KACXZ,UAAU,8CAFZ,SAIGwB,EAAKjB,QALAiB,EAAKjB,WAWnB,oBAAGP,UAAU,2CAAb,kBACUmB,EADV,iD,mECVOtC,IAfC,SACd4C,EACAC,GACI,IAAD,EACyBhD,mBAAS+C,GADlC,mBACIvC,EADJ,KACYyC,EADZ,OAEyBjD,mBAASgD,GAFlC,mBAEItC,EAFJ,KAEYC,EAFZ,KASH,MAAO,CAAEH,SAAQyC,YAAWxC,SANX,SAACyC,GAAY,IAAD,EACLA,EAAEC,OAAhBvB,EADmB,EACnBA,GAAIE,EADe,EACfA,MACZmB,EAAU,2BAAKzC,GAAN,kBAAeoB,EAAKE,KAC7BnB,EAAU,2BAAKD,GAAN,kBAAekB,EAAK,OAGOlB,SAAQC,e,gCCdhD,wBAsEeyC,IAnEG,SAAC,GAsBZ,IArBLzB,EAqBI,EArBJA,MACAC,EAoBI,EApBJA,GACAC,EAmBI,EAnBJA,KAmBI,IAlBJG,YAkBI,MAlBG,OAkBH,EAjBJqB,EAiBI,EAjBJA,YACApB,EAgBI,EAhBJA,MACAH,EAeI,EAfJA,MACArB,EAcI,EAdJA,SACAiB,EAaI,EAbJA,UACAK,EAYI,EAZJA,SAcA,OACE,sBAAKT,UAAWI,EAAhB,UACE,wBAAO4B,QAASzB,EAAMP,UAAU,0CAAhC,UACGK,EAAO,IACPI,GACC,sBAAMT,UAAU,qCAAhB,kBAGJ,sBAAKA,UAAU,qCAAf,UACE,uBACEU,KAAMA,EACNH,KAAMA,EACND,GAAIA,EACJN,UAAS,oCACPW,EAfM,6GAiBF,gEAHG,0BAKToB,YAAaA,EACbvB,MAAOA,EACPC,SAAUA,EACVtB,SAAUA,EACV8C,eAAa,OACbC,mBAAiB,gBAElBvB,GACC,qBAAKX,UAAU,wEAAf,SACE,cAAC,IAAD,CACEA,UAAU,uBACVmC,cAAY,cAKnBxB,GACC,mBAAGX,UAAU,4BAA4BM,GAAE,UAAKC,GAAQD,EAAb,UAA3C,SACGK","file":"static/js/12.97e7a650.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Loading from 'components/Loading'\nimport Copyright from 'components/Copyright'\nimport Button from 'components/atoms/Button'\nimport { useHistory } from 'react-router-dom'\nimport useForm from 'hooks/useForm'\nimport FormInput from 'components/atoms/FormInput'\n\nconst Signup = () => {\n  const history = useHistory()\n  const [isLoaded, setIsLoaded] = useState(true)\n\n  //capture inputs\n  const INITIAL_FIELDS = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  const ERROR_INITIAL_FIELDS = {\n    email: '',\n    password: '',\n  }\n\n  const { fields, onChange, errors, setErrors } = useForm(\n    INITIAL_FIELDS,\n    ERROR_INITIAL_FIELDS\n  )\n\n  const validateForm = () => {\n    let isValid = true\n\n    const trimmedLen = (field) => fields[field].trim().length\n\n    if (trimmedLen('email') <= 0) {\n      isValid = false\n      errors.email = 'Please add email field'\n    } else {\n      isValid = true\n      errors.email = ''\n    }\n\n    if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        fields.email\n      )\n    ) {\n      isValid = true\n      errors.email = ''\n    } else {\n      isValid = false\n      errors.email = 'Please enter a valid email address'\n    }\n\n    if (trimmedLen('password') < 6) {\n      isValid = false\n      errors.password = 'Password must be atleast six characters long'\n    } else {\n      isValid = true\n      errors.password = ''\n    }\n\n    setErrors({ ...errors })\n\n    return isValid\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const handleSubmit = () => {\n    const isValid = validateForm()\n    if (isValid) {\n      history.push('/account/personal/edit-profile/company')\n    } else {\n    }\n  }\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Create new account\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Discover the benefits of selling and <br />\n          networking with your profile\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\n              <FormInput\n                gridClass=\"sm:col-span-3\"\n                label=\"First name\"\n                id=\"firstName\"\n                name=\"firstName\"\n                onChange={onChange}\n                value={fields.firstName}\n              />\n\n              <FormInput\n                gridClass=\"sm:col-span-3\"\n                label=\"Last name\"\n                id=\"lastName\"\n                name=\"lastName\"\n                onChange={onChange}\n                value={fields.lastName}\n              />\n            </div>\n\n            <FormInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              onChange={onChange}\n              required\n              type=\"email\"\n              error={errors.email}\n              value={fields.email}\n            />\n            <FormInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              onChange={onChange}\n              type=\"password\"\n              error={errors.password}\n              required\n              value={fields.password}\n            />\n\n            <p className=\"my-4 text-left text-xs text-gray-600\">\n              By clicking Agree and Join, you agree to 13RMS{' '}\n              <a\n                href=\"#/\"\n                className=\"font-medium text-xs text-blue-600 hover:text-blue-500\"\n              >\n                User Agreement, Privacy Policy\n              </a>{' '}\n              and{' '}\n              <a\n                href=\"#/\"\n                className=\"font-medium text-xs text-blue-600 hover:text-blue-500\"\n              >\n                Cookie Policy\n              </a>\n            </p>\n\n            <div>\n              <Button\n                onClick={handleSubmit}\n                fullWidth\n                rounded=\"rounded-lg\"\n                gradient\n                label=\"Agree and become a member\"\n              />\n            </div>\n          </form>\n        </div>\n        <div className=\"mt-4 text-center\">\n          Already on 13RMS?\n          <a href=\"/login\" className=\"link-hover\">\n            {' '}\n            Login now\n          </a>\n        </div>\n      </div>\n      <Copyright />\n    </div>\n  )\n}\nexport default Signup\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <a\n                href={item.href}\n                className=\"text-base text-gray-500 hover:text-gray-900\"\n              >\n                {item.name}\n              </a>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import { useState } from 'react'\n\nconst useForm = (\n  initialFields: { [key: string]: string },\n  errorInitialFields: { [key: string]: string }\n) => {\n  const [fields, setFields] = useState(initialFields)\n  const [errors, setErrors] = useState(errorInitialFields)\n  const onChange = (e: any) => {\n    const { id, value } = e.target\n    setFields({ ...fields, [id]: value })\n    setErrors({ ...errors, [id]: '' })\n  }\n\n  return { fields, setFields, onChange, errors, setErrors }\n}\n\nexport default useForm\n","import React from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\n\nconst FormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value: string\n  onChange: () => void\n  gridClass?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  return (\n    <div className={gridClass}>\n      <label htmlFor={name} className=\"block text-sm font-medium text-gray-700\">\n        {label}{' '}\n        {required && (\n          <span className=\"text-red-500 font-medium text-base\">*</span>\n        )}\n      </label>\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\n        <input\n          type={type}\n          name={name}\n          id={id}\n          className={`block border w-full pr-10 ${\n            error\n              ? errorClass\n              : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n          } sm:text-sm rounded-md`}\n          placeholder={placeholder}\n          value={value}\n          required={required}\n          onChange={onChange}\n          aria-invalid=\"true\"\n          aria-describedby=\"email-error\"\n        />\n        {error && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <ExclamationCircleIcon\n              className=\"h-5 w-5 text-red-500\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        )}\n      </div>\n      {error && (\n        <p className=\"mt-2 text-sm text-red-600\" id={`${name || id}-error`}>\n          {error}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n"],"sourceRoot":""}
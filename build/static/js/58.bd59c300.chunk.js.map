{"version":3,"sources":["components/CustomSearch.jsx","components/Features.jsx","components/HomeContent.jsx","components/Navigation.tsx","pages/home/Home.jsx"],"names":["CustomSearchPanel","useState","productsArray","selectedProduct","setSelectedProduct","searchPlaceHolder","indexOf","value","departmentsArray","selectedDepartment","setSelectedDepartment","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","borderRadius","padding","Tooltip","className","title","heading","content","map","item","idx","placement","Selector","disableFocus","selectedItem","label","list","product","name","required","border","onSelect","find","_item","id","type","placeholder","department","CountryListDropdown","welcomeSearchLinks","Features","features","description","icon","AiOutlineDropbox","BsPeople","CloudUploadIcon","HiOutlineGlobe","MdVerifiedUser","ImMobile2","AiOutlineFileProtect","RiSecurePaymentLine","feature","HomeContent","logo","useTheme","alt","src","Navigation","template","accountFilled","profileUrl","useUserContext","setDarkMode","darkMode","adjustColors","selected","setSelected","open","Group","as","href","Button","classNames","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","static","enabled","text","subText","setEnabled","onClick","link","links","getProfileById","target","gradient","invert","FEED","LOGIN","Home","isUser","Meta","pageTitle","CustomSearch"],"mappings":"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","file":"static/js/58.bd59c300.chunk.js","sourcesContent":["/* eslint-disable quotes */\nimport React, { useState } from 'react'\n\nimport Selector from 'components/atoms/Selector'\nimport {\n  productsArray,\n  departmentsArray,\n  welcomeSearchLinks,\n} from '../values/values'\nimport CountryListDropdown from 'components/CountryListDropdown'\nimport { find } from 'lodash'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nconst CustomSearchPanel = () => {\n  const [selectedProduct, setSelectedProduct] = useState(productsArray[0])\n\n  const searchPlaceHolder =\n    ['products', 'bulk', 'all'].indexOf(selectedProduct.value) !== -1\n      ? 'Search'\n      : 'Find a'\n\n  const [selectedDepartment, setSelectedDepartment] = useState(\n    departmentsArray[0]\n  )\n\n  const tooltipData = [\n    {\n      heading: 'Bulk items',\n      content: 'Bulk items are items that are offered in large numbers.',\n    },\n    {\n      heading: 'Commercial agent',\n      content:\n        \"A commercial agent acts on your company's behalf. Find a commercial agent abroad to sell your products abroad.\",\n    },\n\n    {\n      heading: 'Distributor',\n      content:\n        'A distributor acts for its own account and risk. Find a distributor who wants to buy your products.',\n    },\n\n    {\n      heading: 'Manufacturer',\n      content:\n        'A manufacturer is a company that produces goods. Find a manufacturer who wants to produce your product.',\n    },\n\n    {\n      heading: 'Supplier',\n      content:\n        'A supplier provides goods or services in exchange for money. Find a supplier who sells your products for your webshop, for example',\n    },\n  ]\n\n  const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#374151',\n      color: '#fff',\n      maxWidth: '18rem',\n      fontSize: theme.typography.pxToRem(12),\n      borderRadius: '.5rem',\n      padding: '1rem',\n    },\n  }))(Tooltip)\n\n  return (\n    <div className=\"mx-auto  w-full max-w-md my-12  px-4 text-center sm:max-w-3xl sm:px-6 lg:px-8 lg:max-w-7xl\">\n      <div className=\"grid bg-white dark:bg-gray-900 sm:grid-cols-12 rounded-t-xl h-12 grid-cols-1 dark:border-gray-800 border\">\n        <HtmlTooltip\n          title={\n            <div className=\"bg-white dark:bg-gray-900\">\n              {tooltipData.map((item, idx) => (\n                <div key={item.heading + idx} className=\"p-1 text-xs\">\n                  <strong className=\"text-gray-900 dark:text-white mb-1\">\n                    {item.heading}\n                    <br />{' '}\n                  </strong>\n\n                  <p className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                    {item.content}\n                  </p>\n                </div>\n              ))}\n            </div>\n          }\n          placement=\"left\"\n        >\n          <div className=\"col-span-3 tooltip-ref ml-2\">\n            <Selector\n              disableFocus\n              selectedItem={selectedProduct.label}\n              list={productsArray.map((product) => ({ name: product.label }))}\n              required\n              border={false}\n              onSelect={(item) => {\n                const selectedItem = find(\n                  productsArray,\n                  (_item) => _item.label === item.name\n                )\n                setSelectedProduct(selectedItem)\n              }}\n            />\n          </div>\n        </HtmlTooltip>\n        <div className=\"col-span-5\">\n          <input\n            id=\"home_search_panel\"\n            name=\"search\"\n            type=\"text\"\n            className=\"relative  dark:bg-gray-900 dark:text-white w-full border-none outline-none shadow-none focus:outline-none text-xs  pl-3 pr-10 py-2 text-left  dark:placeholder-gray-400 placeholder-gray-500 h-full\"\n            placeholder={searchPlaceHolder + ' ' + selectedProduct.label}\n          />\n        </div>\n        <div className=\"col-span-3\">\n          <Selector\n            selectedItem={selectedDepartment.label}\n            list={departmentsArray.map((department) => ({\n              name: department.label,\n            }))}\n            border={false}\n            disableFocus\n            required\n            onSelect={(item) => {\n              const selectedItem = find(\n                departmentsArray,\n                (_item) => _item.label === item.name\n              )\n              setSelectedDepartment(selectedItem)\n            }}\n          />\n        </div>\n        <div className=\"relative  flex items-center justify-center col-span-1\">\n          <CountryListDropdown />\n        </div>\n      </div>\n      <div className=\"bg-white dark:bg-gray-900 grid space-x-12 sm:grid-cols-5 rounded-b-xl h-12 grid-cols-1 px-10 dark:border-gray-800 border\">\n        {welcomeSearchLinks.map((item, idx) => {\n          return (\n            <>\n              <div\n                key={item.name + idx}\n                className=\"dark:text-white text-xs flex items-center justify-center  text-gray-600 link-hover cursor-pointer\"\n              >\n                {item.name}\n              </div>\n            </>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default CustomSearchPanel\n","import { CloudUploadIcon } from '@heroicons/react/outline'\nimport { AiOutlineDropbox, AiOutlineFileProtect } from 'react-icons/ai'\nimport { BsPeople } from 'react-icons/bs'\nimport { HiOutlineGlobe } from 'react-icons/hi'\nimport { ImMobile2 } from 'react-icons/im'\nimport { MdVerifiedUser } from 'react-icons/md'\nimport { RiSecurePaymentLine } from 'react-icons/ri'\n\nconst Features = () => {\n  const features = [\n    {\n      name: 'Develop',\n      description:\n        'New product developed look for manufacturers who want to produce your product',\n      icon: AiOutlineDropbox,\n    },\n    {\n      name: 'Present Yourself',\n      description:\n        'Present yourself extensively on 13RMS to the client and employers',\n      icon: BsPeople,\n    },\n    {\n      name: 'Internships',\n      description:\n        'Post vacancies and internships and find the right candidates',\n      icon: CloudUploadIcon,\n    },\n    {\n      name: 'Network',\n      description:\n        'Connect with people and professional organizations in your industry',\n      icon: HiOutlineGlobe,\n    },\n    {\n      name: 'Verified',\n      description: 'Only do business with verified users',\n      icon: MdVerifiedUser,\n    },\n    {\n      name: 'Our App',\n      description: 'Discover our app. Download our app now',\n      icon: ImMobile2,\n    },\n    {\n      name: 'Protection',\n      description: 'Worldwide buyer protection. Pay safely all over the world.',\n      icon: AiOutlineFileProtect,\n    },\n    {\n      name: 'Payment',\n      description: 'Pay safely with 13RMS Trading post',\n      icon: RiSecurePaymentLine,\n    },\n  ]\n  return (\n    <div className=\"relative bg-gray-100 dark:bg-gray-900 py-16 sm:py-24 lg:py-32\">\n      <div className=\"mx-auto max-w-md px-4 text-center sm:max-w-3xl sm:px-6 lg:px-8 lg:max-w-7xl\">\n        <p className=\"mt-2 text-xl font-extrabold dark:text-white text-gray-900 tracking-tight sm:text-3xl\">\n          Everything you need to get started with{' '}\n          <span className=\"border-b-2 border-pink-600 mt-2 dark:text-white text-3xl font-extrabold text-gray-900 tracking-tight sm:text-4xl\">\n            13RMS\n          </span>\n        </p>\n\n        <div className=\"mt-16\">\n          <div className=\"grid grid-cols-1 gap-8 gap-y-12 sm:grid-cols-2 lg:grid-cols-4\">\n            {features.map((feature) => (\n              <div key={feature.name} className=\"max-h-60 max-w-60 \">\n                <div className=\"flow-root feature cursor-pointer bg-white border-gray-200 border dark:border-gray-800 dark:bg-gray-700 rounded-lg px-4 pb-8\">\n                  <div className=\"-mt-6\">\n                    <div>\n                      <span className=\"feature-icon transform  inline-flex items-center justify-center p-2.5 bg-gradient-to-br from-yellow-400 via-red-500 to-pink-500 rounded-md shadow-lg\">\n                        <feature.icon\n                          className=\"h-5 w-5 text-white\"\n                          aria-hidden=\"true\"\n                        />\n                      </span>\n                    </div>\n                    <h3 className=\"mt-8 text-base font-medium dark:text-gray-100 text-gray-900 tracking-tight\">\n                      {feature.name}\n                    </h3>\n                    <p className=\"mt-5 text-sm whitespace-wrap dark:text-gray-400 text-gray-500\">\n                      {feature.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Features\n","import { Fragment } from 'react'\nimport useTheme from 'hooks/useTheme'\n\nconst HomeContent = () => {\n  const { logo } = useTheme()\n  return (\n    <Fragment>\n      <div className=\"dark:bg-gray-900\">\n        <div className=\"text-center pt-12 pb-4 flex items-center flex-col\">\n          <img alt=\"13RMS\" src={logo} className=\"m-0 h-36\" />\n          <p className=\"dark:text-gray-300 max-w-xl mt-5 mx-auto text-base text-gray-500\">\n            The place to sell your products, services and build business\n            relationships\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default HomeContent\n","/* eslint-disable quotes */\n/* This example requires Tailwind CSS v2.0+ */\nimport { Popover, Transition } from '@headlessui/react'\nimport { MenuIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\nimport Button from 'components/atoms/Button'\nimport Toggle from 'components/ThemeToggle'\nimport { links } from 'constants/Links'\nimport { useUserContext } from 'context/UserContext'\nimport { NavProps } from 'interfaces/UniversalInterface'\nimport { Fragment, useState } from 'react'\nimport { classNames } from 'utils/classNames'\nimport { adjustColors } from 'values/values'\n\nconst Navigation = ({\n  template = 1,\n  accountFilled = false,\n\n  profileUrl,\n}: NavProps) => {\n  const { setDarkMode, darkMode } = useUserContext()\n\n  const [selected, setSelected] = useState(adjustColors[0])\n\n  return (\n    <Popover className=\"relative dark:bg-gray-900  bg-white\">\n      {({ open }) => (\n        <>\n          <div className=\"\">\n            <div className=\"flex justify-between  items-center border-b-2 dark:border-gray-700 border-gray-100 py-2 md:justify-start md:space-x-10 px-2\">\n              <div className=\"flex justify-start lg:w-0 lg:flex-1 items-center\">\n                <Popover.Group\n                  as=\"nav\"\n                  className=\"hidden ml-6 md:flex  items-center space-x-10\"\n                >\n                  <a\n                    href=\"/#\"\n                    className=\"text-xs font-medium dark:text-gray-400 text-gray-500 link-hover\"\n                  >\n                    Help & Contact\n                  </a>\n                  <Popover className=\"relative\">\n                    {({ open }) => (\n                      <>\n                        <Popover.Button\n                          className={classNames(\n                            open ? 'text-gray-900' : 'text-gray-500',\n                            'group bg-white dark:bg-gray-900 rounded-md inline-flex items-center text-xs font-medium link-hover focus:outline-none '\n                          )}\n                        >\n                          <button className=\"text-xs font-medium dark:text-gray-400 text-gray-500 link-hover\">\n                            Adjust Colors\n                          </button>\n                          <ChevronDownIcon\n                            className={classNames(\n                              open ? 'text-gray-600' : ' text-gray-400',\n                              'ml-2 h-5 w-5 group-hover:text-gray-500'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        </Popover.Button>\n\n                        <Transition\n                          show={open}\n                          as={Fragment}\n                          enter=\"transition ease-out duration-200\"\n                          enterFrom=\"opacity-0 translate-y-1\"\n                          enterTo=\"opacity-100 translate-y-0\"\n                          leave=\"transition ease-in duration-150\"\n                          leaveFrom=\"opacity-100 translate-y-0\"\n                          leaveTo=\"opacity-0 translate-y-1\"\n                        >\n                          <Popover.Panel\n                            static\n                            className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/4\"\n                          >\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                              <div className=\"relative grid gap-6 bg-white dark:bg-gray-700 px-5 py-6 sm:gap-8 sm:p-8\">\n                                <div>\n                                  <Toggle\n                                    enabled={darkMode}\n                                    text=\"Select mode\"\n                                    subText=\"Choose theme preferance\"\n                                    setEnabled={setDarkMode}\n                                  />\n                                </div>\n\n                                {adjustColors.map((item) => (\n                                  <div\n                                    key={item.name}\n                                    onClick={() => setSelected(item)}\n                                    className=\"-m-3 p-3 mt-1 flex items-center text-left rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 justify-start cursor-pointer\"\n                                  >\n                                    <span\n                                      className={classNames(\n                                        selected.name === item.name\n                                          ? 'bg-indigo-600 border-transparent'\n                                          : 'bg-white border-gray-300',\n                                        selected.name === item.name ? '' : '',\n                                        'h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center'\n                                      )}\n                                      aria-hidden=\"true\"\n                                    >\n                                      <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\n                                    </span>\n                                    <div className=\"ml-4\">\n                                      <p className=\"text-xs text-left font-medium dark:text-white text-gray-900 mb-0\">\n                                        {item.name}\n                                      </p>\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          </Popover.Panel>\n                        </Transition>\n                      </>\n                    )}\n                  </Popover>\n                  <a\n                    href=\"/#\"\n                    className=\"text-xs text-gray-500  dark:text-gray-400 font-medium link-hover\"\n                  >\n                    Join our forum\n                  </a>\n                </Popover.Group>\n              </div>\n              <div className=\"-mr-2 -my-2 md:hidden\">\n                <Popover.Button className=\"bg-white dark:bg-gray-900 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none \">\n                  <span className=\"sr-only\">Open menu</span>\n                  <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </Popover.Button>\n              </div>\n\n              {accountFilled ? (\n                <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                  <Button\n                    link={links.getProfileById(profileUrl, template)}\n                    className=\"mx-4 \"\n                    label=\"Profile\"\n                    target=\"\"\n                    gradient\n                    invert\n                  />\n\n                  <Button\n                    link={links.FEED}\n                    target=\"\"\n                    className=\"mx-4 \"\n                    label=\"Dashboard\"\n                    gradient\n                  />\n                </div>\n              ) : (\n                <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                  <a\n                    href=\"/signup\"\n                    className=\"whitespace-nowrap dark:text-gray-400 text-gray-500  text-xs font-medium  link-hover\"\n                  >\n                    Join Now\n                  </a>\n\n                  <Button\n                    link={links.LOGIN}\n                    className=\"mx-4 \"\n                    target=\"\"\n                    label=\"Login\"\n                    gradient\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </Popover>\n  )\n}\nexport default Navigation\n","import Meta from 'components/atoms/Meta/Meta'\nimport Footer from 'components/CustomFooter'\nimport CustomSearchPanel from 'components/CustomSearch'\nimport Features from 'components/Features'\nimport HomeContent from 'components/HomeContent'\nimport Navigation from 'components/Navigation'\n\nconst Home = ({ isUser, profileUrl, template, accountFilled }) => {\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-900\">\n      <Meta\n        title=\"Home - Trading post - 13RMS\"\n        pageTitle=\"Home - Trading post - 13RMS\"\n      />\n      <Navigation\n        isUser={isUser}\n        profileUrl={profileUrl}\n        template={template}\n        accountFilled={accountFilled}\n      />\n      <div className=\"mx-auto max-w-smallScreen\">\n        <HomeContent />\n        <div className=\"flex flex-col dark:bg-gray-900 \">\n          <CustomSearchPanel />\n          <Features />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}
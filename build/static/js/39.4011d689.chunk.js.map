{"version":3,"sources":["components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","pages/account/personal/LocationStep.tsx"],"names":["AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","name","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","onClick","color","yourhandle","require","LastStep","user","useState","isLoaded","history","useHistory","saving","setSaving","useEffect","other","accountFilled","console","log","push","links","FEED","accountFinishedStep","CHOOSE_TEMPLATE","LOCATION_P","renderPathByType","accountType","CHOOSE_ACCOUNT","redirection","setValues","useUserContext","onSubmit","values","a","token","getAccessToken","updatedData","location","livesIn","network","post","headers","Authorization","error","validationSchema","Yup","required","matches","min","max","shortName","longName","selectedLocation","setSelectedLocation","countries","getCountries","disabledItem","msg","disabled","stateList","setStateList","cityList","setCityList","initialValues","label","list","orderBy","placeholder","onSelect","states","getStatesByShort","updated","length","updateStates","cities","getCities","updateCities","id","fullWidth","rounded","type","gradient","loading","COMPANY","EDUCATION"],"mappings":"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","file":"static/js/39.4011d689.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","import { useEffect, useState } from 'react'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport TextButton from 'components/atoms/TextButton'\nimport Loading from 'components/Loading'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { PersonalStepTwo } from 'initials'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { map, orderBy } from 'lodash'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport FormSelector from 'components/atoms/FormSelector'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport { useUserContext } from 'context/UserContext'\nimport { IParent } from 'interfaces/UniversalInterface'\n\nconst yourhandle = require('countrycitystatejson')\n\nconst LastStep = ({ user }: { user?: IParent }) => {\n  const [isLoaded] = useState(true)\n  const history = useHistory()\n\n  const [saving, setSaving] = useState(false)\n\n  const goBack = () => {\n    history.push(\n      user && user.other && user?.other.accountType === 'personal'\n        ? links.COMPANY\n        : links.EDUCATION\n    )\n  }\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountFinishedStep === 'location') {\n          // redirect to choose template page\n          console.log('redirect to choose template page')\n          return history.push(links.CHOOSE_TEMPLATE)\n        } else if (user.other?.accountFinishedStep === 'company') {\n          // redirect to location page\n          console.log('redirect to location page')\n          return history.push(links.LOCATION_P)\n        } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n          console.log('get the accountType and redirect as per account type')\n          // get the accountType and redirect as per account type\n          return history.push(renderPathByType(user.other?.accountType))\n        } else if (user.other?.accountFinishedStep === 'signup') {\n          // redirect to choose Account page\n          console.log('redirect to choose Account page')\n          return history.push(links.CHOOSE_ACCOUNT)\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [])\n\n  const { setValues } = useUserContext()\n\n  const onSubmit = async (values: {\n    country: any\n    pincode: any\n    state: any\n    city: any\n  }) => {\n    try {\n      const token = getAccessToken()\n      setSaving(true)\n\n      let updatedData = {\n        ...user,\n        location: {\n          ...user?.location,\n          country: values.country,\n          pincode: values.pincode,\n          state: values.state,\n          city: values.city,\n          livesIn: `${values.city} ${values.country}`,\n        },\n        other: {\n          ...user?.other,\n          accountFilled: false,\n          accountFinishedStep: 'location',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.CHOOSE_TEMPLATE)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n  const validationSchema = Yup.object({\n    state: Yup.string().required(),\n    country: Yup.string().required(),\n    city: Yup.string().required(),\n    pincode: Yup.string()\n      .required()\n      .matches(/^[0-9]+$/, 'Must be only digits')\n      .min(6, 'Must be exactly 6 digits')\n      .max(6, 'Must be exactly 6 digits'),\n  })\n\n  const [selectedLocation, setSelectedLocation] = useState({\n    country: { shortName: '', longName: '' },\n    state: '',\n    city: '',\n  })\n\n  const countries = yourhandle.getCountries()\n\n  const disabledItem = (msg: string) => [\n    {\n      name: msg,\n      disabled: true,\n    },\n  ]\n\n  const updateStates = (shortName: string) => {\n    const states = yourhandle.getStatesByShort(shortName)\n    const updated = map(states, (state) => ({ name: state }))\n    if (updated && updated.length > 0) {\n      setStateList(updated)\n    } else {\n      setStateList(disabledItem('No state found for selected country.'))\n    }\n  }\n\n  const updateCities = (shortName: string, state: any) => {\n    const cities = yourhandle.getCities(shortName, state)\n    const updated = map(cities, (city) => ({ name: city }))\n\n    if (updated && updated.length > 0) {\n      setCityList(updated)\n    } else {\n      setCityList(disabledItem('No city found for selected state.'))\n    }\n  }\n\n  const [stateList, setStateList] = useState<any[]>([])\n\n  const [cityList, setCityList] = useState<any>([])\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title={`Welcome, ${user?.firstName || 'Human'}!`}\n      subtitle={\n        <p>\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white  border border-transparent dark:border-gray-700  dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={PersonalStepTwo}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <div>\n                <FormSelector\n                  label={'Country / region'}\n                  list={orderBy(countries, ['name', 'asc'])}\n                  name=\"country\"\n                  required\n                  placeholder={'Select country'}\n                  onSelect={(item) => {\n                    updateStates(item.shortName)\n\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      country: {\n                        shortName: item.shortName,\n                        longName: item.name,\n                      },\n                    })\n                  }}\n                />\n              </div>\n              <div>\n                <FormSelector\n                  label=\"State\"\n                  list={stateList}\n                  name=\"state\"\n                  required\n                  placeholder={'Select state'}\n                  onSelect={(item) => {\n                    updateCities(selectedLocation.country.shortName, item.name)\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      state: item.name,\n                    })\n                  }}\n                />\n              </div>\n\n              <div>\n                <FormSelector\n                  label={'Ctiy'}\n                  name=\"city\"\n                  list={cityList}\n                  required\n                  placeholder={'Select city'}\n                  onSelect={(item) => {\n                    setSelectedLocation({\n                      ...selectedLocation,\n                      city: item.name,\n                    })\n                  }}\n                />\n              </div>\n              <FormInput\n                label=\"Postal Code\"\n                id=\"pincode\"\n                name=\"pincode\"\n                placeholder=\"Postal Code\"\n                required\n              />\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  type=\"submit\"\n                  gradient\n                  loading={saving}\n                  label=\"Finish Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          text=\"Edit company details\"\n          onClick={goBack}\n          className=\"inline-block mt-4\"\n        />\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default LastStep\n"],"sourceRoot":""}
{"version":3,"sources":["components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","initials/index.ts","components/atoms/TextButton.tsx","pages/account/personal/CompanyStep.tsx"],"names":["AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","name","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","SIGNUP","email","password","confirmPassword","firstName","lastName","LOGIN","PersonalStepOne","jobTitle","jobType","currentCompany","PersonalStepTwo","country","state","city","pincode","StudentStepOne","education","grade","grade_subject","BusinessStepOneFields","number","BusinessStepTwoFields","businessCountry","businessAddress","additionalInfo","postalCode","legalNumber","businessRegNumber","mobileNumber","businessEntityType","relationshipToBusiness","typeOfBusiness","TextButton","text","onClick","color","CompanyStep","user","useState","isLoaded","history","useHistory","useEffect","other","accountFilled","console","log","push","links","FEED","accountFinishedStep","CHOOSE_TEMPLATE","LOCATION_P","renderPathByType","accountType","CHOOSE_ACCOUNT","redirection","setValues","useUserContext","onSubmit","values","a","setSaving","token","getAccessToken","updatedData","company","companyName","network","post","headers","Authorization","error","validationSchema","Yup","required","saving","EDUCATION","initialValues","enableReinitialize","label","id","type","fullWidth","rounded","gradient","loading"],"mappings":"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","file":"static/js/38.cd9c62cf.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","export const SIGNUP = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  firstName: '',\n  lastName: '',\n}\n\nexport const LOGIN = {\n  email: '',\n  password: '',\n}\n\nexport const PersonalStepOne = {\n  jobTitle: '',\n  jobType: '',\n  currentCompany: '',\n}\nexport const PersonalStepTwo = {\n  country: '',\n  state: '',\n  city: '',\n  pincode: '',\n}\n\nexport const StudentStepOne = {\n  education: '',\n  grade: '',\n  grade_subject: '',\n}\n\nexport const StudentStepTwo = {\n  ...PersonalStepTwo,\n}\n\nexport const BusinessStepOneFields = {\n  name: '',\n  email: '',\n  number: '',\n}\n\nexport const BusinessStepTwoFields = {\n  businessCountry: '',\n  businessAddress: '',\n  additionalInfo: '',\n  postalCode: '',\n  city: '',\n  legalNumber: '',\n  businessRegNumber: '',\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  businessEntityType: '',\n  relationshipToBusiness: '',\n  typeOfBusiness: '',\n}\n","import React from 'react'\n\nconst TextButton = ({\n  text,\n  onClick,\n  className,\n  color = 'blue',\n}: {\n  text: string\n  className?: string\n  color?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div\n      className={`my-2 gradient-text hover:bg-gray-100 cursor-pointer px-2 py-1  rounded-md transition-all duration-200  ${className}`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  )\n}\n\nexport default TextButton\n","import AnimatedDiv from 'components/animation/AnimatedDiv'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport TextButton from 'components/atoms/TextButton'\nimport Loading from 'components/Loading'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useUserContext } from 'context/UserContext'\nimport { Form, Formik } from 'formik'\nimport { getAccessToken, network, renderPathByType } from 'helpers'\nimport { PersonalStepOne } from 'initials'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst CompanyStep = ({ user }: { user?: IParent }) => {\n  const [isLoaded] = useState(true)\n  const history = useHistory()\n\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user.other?.accountFinishedStep === 'location') {\n          // redirect to choose template page\n          console.log('redirect to choose template page')\n          return history.push(links.CHOOSE_TEMPLATE)\n        } else if (user.other?.accountFinishedStep === 'company') {\n          // redirect to location page\n          console.log('redirect to location page')\n          return history.push(links.LOCATION_P)\n        } else if (user.other?.accountFinishedStep === 'chooseAccount') {\n          console.log('get the accountType and redirect as per account type')\n          // get the accountType and redirect as per account type\n          return history.push(renderPathByType(user.other?.accountType))\n        } else if (user.other?.accountFinishedStep === 'signup') {\n          // redirect to choose Account page\n          console.log('redirect to choose Account page')\n          return history.push(links.CHOOSE_ACCOUNT)\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [])\n\n  const { setValues } = useUserContext()\n  const onSubmit = async (values: {\n    jobTitle: any\n    jobType: any\n    currentCompany: any\n  }) => {\n    setSaving(true)\n    try {\n      const token = getAccessToken()\n      let updatedData = {\n        ...user,\n        company: {\n          ...user?.company,\n          jobTitle: values.jobTitle,\n          jobType: values.jobType,\n          currentCompany: values.currentCompany,\n          companyName: values.currentCompany,\n        },\n        other: {\n          ...user?.other,\n          accountFinishedStep: 'company',\n        },\n      }\n      await network.post(\n        '/user/update',\n        {\n          ...updatedData,\n        },\n        {\n          headers: { Authorization: token },\n        }\n      )\n\n      //@ts-ignore\n      delete updatedData.password\n      setValues({ ...updatedData })\n\n      history.push(links.LOCATION_P)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const validationSchema = Yup.object({\n    jobTitle: Yup.string().required('Please add your job title'),\n    jobType: Yup.string().required('Please add your job type'),\n    currentCompany: Yup.string().required(\n      'Please add your current company name'\n    ),\n  })\n\n  const [saving, setSaving] = useState(false)\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <Layout\n      title=\"Company Information\"\n      withButton={\n        <TextButton\n          text=\"or create a student account\"\n          onClick={() => history.push(links.EDUCATION)}\n        />\n      }\n      subtitle={\n        <p>\n          Your profile helps you find new people and <br /> oppurtunites\n        </p>\n      }\n    >\n      <AnimatedDiv className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-900 border border-transparent dark:border-gray-700  py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={PersonalStepOne}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            enableReinitialize\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Most recent job title\"\n                id=\"jobTitle\"\n                name=\"jobTitle\"\n                required\n              />\n              <FormInput\n                label=\"Job Type\"\n                id=\"jobType\"\n                name=\"jobType\"\n                required\n              />\n\n              <FormInput\n                label=\"Current Company\"\n                id=\"currentCompany\"\n                name=\"currentCompany\"\n                required\n              />\n\n              <div>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  gradient\n                  loading={saving}\n                  label=\"Next Step\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </AnimatedDiv>\n    </Layout>\n  )\n}\n\nexport default CompanyStep\n"],"sourceRoot":""}
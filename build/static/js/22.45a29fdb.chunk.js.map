{"version":3,"sources":["utils/functions/index.js","components/atoms/Modal.tsx","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/NormalFormInput.tsx","components/alerts/Error.tsx","hooks/useUser.ts","components/Dropdown/Dropdown.tsx","components/atoms/FormSelector.tsx","assets/svg/placeholder.png","pages/DashboardLayout.tsx","components/posts/PostBottom.tsx","hooks/useOnScreen.ts","components/posts/Post.tsx","components/DiscoverButton.tsx","components/SideCard.tsx","components/event/CreateEvent.tsx","pages/dashboard/PostModal.tsx","pages/dashboard/PostPhotoModal.tsx","pages/dashboard/PostInput.tsx","pages/dashboard/ListPosts.tsx","pages/dashboard/AboutMe.tsx","pages/dashboard/index.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","FormError","error","FormInput","label","id","name","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","NormalFormInput","fullWidth","autoComplete","success","props","onKeyDown","onKeyPress","onKeyUp","Error","errors","idx","useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","Dropdown","list","Button","Items","item","Item","active","stopPropagation","classNames","Icon","FormSelector","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","Label","onBlur","Options","Option","hasOwnProperty","selected","DashboardLayout","firstCol","secondCol","thirdCol","firstColClass","firstColStyles","thirdColClass","thirdColStyles","mainClass","minHeight","PostBottom","AiOutlineLike","FaRegCommentDots","AiOutlineShareAlt","FiSend","useOnScreen","ref","rootMargin","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","disconnect","Post","post","userId","user","postId","toString","mutate","useMutation","viewPost","postRef","useRef","isCardOnScreen","isViewed","viewedBy","iAmOwnerOfThisPost","setNotification","useNotifications","saveMutations","saveUnsavePost","featureMutations","featurePost","deleteMutations","deletePost","setTimeout","isSaved","savedPosts","isFeatured","featuredPosts","saved","setSaved","featured","setFeatured","commonDropdownList","nanoid","action","buttonText","buttonUrl","links","myItems","title","FaBookmark","FaRegBookmark","AiOutlineLink","navigator","clipboard","writeText","window","origin","postById","postUrl","dropdownList","fullName","firstName","myDropdownList","AiFillStar","AiOutlineStar","AiOutlineEdit","AiOutlineDelete","src","profilePicture","avatarPlaceholder","alt","href","getProfileById","other","template","followers","postedOn","text","url","controls","controlsList","DiscoverCard","extraItems","fetchEvents","shortEventsData","groups","ev","viewEvent","eventName","link","news","readers","SideCard","secondary","cardTitle","content","_news","CreateEvent","eventData","validationSchema","Yup","min","max","eventDescription","initialValues","startDate","Date","endDate","startTime","endTime","timezone","formRef","createEvent","onSuccess","message","eventId","isError","values","setValues","upload","uploadMultipleImages","a","b","finalImageList","img","coverPhoto","find","originalname","location","profilePhoto","setCoverPhoto","setProfilePhoto","uploadFunction","fd","FormData","append","onSubmit","editMode","isEmpty","coverPicture","setSelectedTimeZone","profileImageSelectorRef","coverImageSelectorRef","selectedTimeZone","files","accept","enableReinitialize","innerRef","click","showFileExplorerForCover","URL","createObjectURL","showFileExplorerForProfile","t","rounded","loading","gradient","size","PostModal","setShowOtherModals","postingIn","customInId","setNewPostAdded","usePostContext","addPost","postData","postedIn","invert","HiOutlinePhotograph","BsCameraVideo","bgColor","PostPhotoModal","isPhoto","media","setMedia","uploadMediaToServer","modifiedData","postType","altText","postImageRef","onAltText","setOnAltText","setAltText","preventDefault","PostInput","customButtons","showPostModal","setShowPostModal","showOtherModals","showEventModal","setShowEventModal","defaultButtons","BiCalendarEvent","RiArticleLine","Card","ListPosts","skip","setSkip","posts","setPosts","fetchFeed","limit","_posts","isSuccess","newPostAdded","then","postCount","count","Meta","pageTitle","endMessage","dataLength","scrollableTarget","next","hasMore","loader","EmptyState","animation","animationData","PersonalCard","authUser","showModal","setShowModal","saving","setSaving","_image","setImage","onImageSelect","useUserContext","onSave","config","headers","network","updatedData","isCover","password","console","isBusiness","useAccountType","fetchAvgViews","postViews","setIsCover","React","backgroundImage","getProfile","business","company","jobTitle","pwvpCount","Dashboard","Loading","DashboardHeader","Sidebar"],"mappings":"iVAqEO,IAAMA,EAAU,WAAyB,IAAxBC,EAAuB,uDAAjB,GAAIC,EAAa,uDAAP,GACtC,OAAID,EAAIE,OAASD,EACRD,EAAIG,UAAU,EAAGF,GAAO,MACnBD,GAGHI,EAAO,SAACC,EAAKC,GAAN,IAAWC,EAAX,uDAAyB,IAAzB,OAClBF,EAAIG,KAAI,SAACC,GAAD,OAAOA,EAAEH,MAAMF,KAAKG,IAejBG,EAAW,SAACC,GASvB,IARA,IAAMC,EAAUD,EAAEE,OAEdC,EAAMF,EAAQG,MACdC,EAAOJ,EAAQI,KAEfC,EAAQ,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAKI,MAAM,MACtBC,EAAOF,EAASf,OAEXkB,EAAI,EAAGA,EAAIH,EAASf,OAAQkB,IAEnCD,GAAQE,SAASJ,EAASG,GAAGlB,OAASc,GAEpBJ,EAAQO,KAAxBA,EAXU,MAYMA,GAGTG,EAAS,WAAwB,IAAvBtB,EAAsB,uDAAhB,GAAIC,EAAY,uDAAN,EACrC,OAAIA,EAAM,EACF,GAAN,OAAUD,EAAV,KAEOA,GAIEuB,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAIA,GAAQ,GACJ,GAAN,OAAUA,EAAV,YAAkBF,EAAO,QAASE,IACzBA,EAAO,KAAO,EACjB,GAAN,OAAUA,EAAO,GAAjB,YAAuBF,EAAO,OAAQE,IAEhC,GAAN,OAAU,GAAMA,EAAO,GAAvB,YAA8BF,EAAO,OAAQE,GAA7C,YAAsDA,EAAO,GAA7D,YAAmEF,EACjE,QACAE,KAKOC,EAAe,CAC1B,IACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,KACA,KACA,OACA,KACA,OACA,KACA,KACA,KACA,OACA,KACA,MACA,KACA,OACA,MACA,QACA,MACA,KACA,OACA,MACA,MACA,OACA,KACA,MACA,QACA,OACA,WACA,QACA,SACA,MACA,OACA,OACA,SAGWC,EAAU,SAAC1B,GACtB,GAAIA,GAAOA,EAAIE,OAAS,EACtB,OAAOF,EAAIkB,MAAM,KAAKS,QAAO,SAACC,GAAD,OAAUH,EAAaI,SAASD,OAIpDE,EAAiB,SAACC,GAAD,OAAUC,IAAOD,GAAME,Y,iCCpLrD,mDA2GeC,IAtGD,SAAC,GAqBR,IAAD,IApBJC,YAoBI,SAnBJC,EAmBI,EAnBJA,QACAC,EAkBI,EAlBJA,SACAC,EAiBI,EAjBJA,OACAC,EAgBI,EAhBJA,QAgBI,IAfJC,4BAeI,aAdJC,oBAcI,SAbJC,EAaI,EAbJA,YAaI,IAZJC,sBAYI,SACJ,OACE,cAAC,IAAWC,KAAZ,CAAiBC,KAAMV,EAAMW,GAAIC,WAAjC,SACE,cAAC,IAAD,CACED,GAAG,MACHE,QAAM,EACNC,MAAO,CAAEC,OAAQ,MACjBC,UAAU,gCACVhB,KAAMA,EACNI,QAAUC,EAAuDY,OAA/Bb,GAAoBH,EANxD,SAQE,sBACEe,UAAS,yFADX,UAGE,cAAC,IAAWE,MAAZ,CACEP,GAAIC,WACJO,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAPV,SASE,cAAC,IAAOC,QAAR,CAAgBT,UAAU,4EAI5B,sBACEA,UAAU,qDACV,cAAY,OAFd,oBAMA,cAAC,IAAWE,MAAZ,CACEP,GAAIC,WACJO,MAAM,wBACNC,UAAU,uDACVC,QAAQ,yCACRC,MAAM,uBACNC,UAAU,yCACVC,QAAQ,uDAPV,SASE,sBACER,UAAS,0EACPR,EAAiB,GAAK,cADf,mGADX,WAKIF,GACA,qBAAKU,UAAU,mDAAf,SACE,yBACEU,KAAK,SACLV,UAAU,iJACVW,QAAS,kBAAOvB,EAAUA,IAAYH,GAAQ,IAHhD,UAKE,sBAAMe,UAAU,UAAhB,mBACA,cAAC,IAAD,CAAOA,UAAU,UAAU,cAAY,cAI7C,sBAAKA,UAAU,aAAf,UACGb,GACC,qBAAKa,UAAU,yCAAf,SACE,oBAAIA,UAAU,oDAAd,SACGb,MAIP,qBAAKa,UAAU,GAAf,SAAmBd,IAClBK,GACC,qBAAKS,UAAU,2FAAf,SACGT,qB,6EC3ENqB,EAnBG,SAAC,GAAuD,IAArDlB,EAAoD,EAApDA,KAAMmB,EAA8C,EAA9CA,MACzB,OACE,cAAC,IAAD,CACEnB,KAAMA,EACNS,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,kCACNC,UAAU,kCACVC,QAAQ,+BACRR,UAAU,OARZ,SAUE,mBAAGA,UAAU,qEAAb,SACGa,O,kPCgNMC,IAxNG,SAAC,GA+CZ,IA9CLC,EA8CI,EA9CJA,MACAC,EA6CI,EA7CJA,GA6CI,IA5CJC,YA4CI,MA5CG,GA4CH,MA3CJP,YA2CI,MA3CG,OA2CH,EA1CJQ,EA0CI,EA1CJA,YACAL,EAyCI,EAzCJA,MAGAM,GAsCI,EAxCJvD,MAwCI,EAtCJuD,WACAC,EAqCI,EArCJA,SAqCI,IApCJC,0BAoCI,aAnCJC,gBAmCI,aAlCJC,mBAkCI,aAjCJC,gBAiCI,aAhCJC,yBAgCI,MAhCgB,aAgChB,EA/BJC,EA+BI,EA/BJA,WACAC,EA8BI,EA9BJA,SACA3D,EA6BI,EA7BJA,KA6BI,IA5BJ4D,iBA4BI,MA5BQ,aA4BR,EA3BJ/D,EA2BI,EA3BJA,KA4BMgE,GADF,EA1BJC,KA0BI,iBACY,8GAChB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAA+BC,YAASjB,GAAxC,mBAAOkB,EAAP,KAAcC,EAAd,KAEQC,EAFR,KAEQA,SAEFC,EAAW,SAAC9E,GAChBiE,GAAkB,GAClBY,EAAS7E,EAAEE,OAAOE,QAGpB,OACE,sBAAKoC,UAAWmB,EAAhB,UACE,sBAAKnB,UAAU,uBAAf,UACE,wBACEuC,QAAStB,EACTjB,UAAU,0DAFZ,UAIGe,EAAO,IACPK,EACC,sBAAMpB,UAAU,uDAAhB,eAIA,sBAAMA,UAAU,4DAGnBsB,GACC,sBAAMtB,UAAU,wBAAwBgB,GAAG,iBAA3C,yBAMHQ,EACC,gCACE,sBAAKxB,UAAU,qCAAf,UACE,0BACEhC,KAAMA,EACNH,KAAMA,EACN2E,WAAS,EAETxB,GAAIA,EACJE,YAAaA,EACboB,SAAUA,EACVtC,UAAS,mCACPa,EAAQgB,EAAa,GADd,YAELD,EAFK,gBAGPL,EACI,qBACA,uCALG,kEAQX,qBAAKvB,UAAU,4EAAf,SACGoC,EAAKK,SAAWL,EAAKvB,OACpB,qBAAKb,UAAU,uBAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACV,cAAY,gBAMtB,cAAC,EAAD,CACEN,KAAMgD,QAAQN,EAAKK,SAAWL,EAAKvB,OACnCA,MAAOuB,EAAKvB,WAqBhB,gCACE,sBAAKb,UAAU,qCAAf,UACE,uBACE2B,SAAUA,EACVX,GAAIA,EAEJwB,WAAS,EACTF,SAAUA,EACVpB,YAAaA,EACbR,KACEW,EAAsBW,EAAW,OAAS,WAActB,EAE1DV,UAAS,4CACPa,EAAQgB,EAAa,GADd,2BAGPN,EACI,sBACA,uCALG,kDAQX,sBAAKvB,UAAU,iFAAf,UACGoC,EAAKK,SAAWL,EAAKvB,OACpB,qBAAKb,UAAU,uBAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACV,cAAY,WAKjBqB,GAAsBc,EAAMvE,OAC3B,qBAAKoC,UAAU,OAAOW,QAAS,kBAAMsB,GAAaD,IAAlD,SACGA,EACC,cAAC,IAAD,CACEhC,UAAU,2DACV,cAAY,SAGd,cAAC,IAAD,CACEA,UAAU,2DACV,cAAY,iBAQxB,sBAAKA,UAAU,yCAAf,UACE,cAAC,IAAD,CACEN,KAAMgD,QAAQN,EAAKK,SAAWL,EAAKvB,OACnCV,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,kCACNC,UAAU,kCACVC,QAAQ,+BAPV,SASE,mBACER,UAAU,qEACVgB,GAAE,UAAKC,GAAQD,EAAb,UAFJ,SAIGoB,EAAKvB,WAGR6B,QAAQN,EAAKK,SAAWL,EAAKvB,QAAU,wBACxCa,IACAgB,QAAQN,EAAKK,SAAWL,EAAKvB,QAC9BsB,EAAMvE,MAAMb,OAAS,EACnB2E,EAEA,qBAAK1B,UAAU,gB,4TC7Bd2C,IA/KS,SAAC,GA4ClB,IA3CL5B,EA2CI,EA3CJA,MACAC,EA0CI,EA1CJA,GACAC,EAyCI,EAzCJA,KAyCI,IAxCJP,YAwCI,MAxCG,OAwCH,EAvCJQ,EAuCI,EAvCJA,YACAL,EAsCI,EAtCJA,MACAjD,EAqCI,EArCJA,MACA0E,EAoCI,EApCJA,SACAnB,EAmCI,EAnCJA,UACAC,EAkCI,EAlCJA,SAkCI,IAjCJC,0BAiCI,aAhCJC,gBAgCI,aA/BJsB,iBA+BI,aA9BJpB,gBA8BI,aA7BJxB,iBA6BI,MA7BQ,GA6BR,MA5BJhC,YA4BI,MA5BG,EA4BH,MA3BJH,YA2BI,MA3BG,IA2BH,MA1BJgF,oBA0BI,aAzBJC,eAyBI,MAzBM,KAyBN,MAxBJhB,YAwBI,MAxBG,GAwBH,EAvBDiB,EAuBC,iBACElB,EAAU,6GAChB,EAAgCE,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OACE,sBAAKjC,UAAS,UAAKmB,EAAL,YAAkByB,EAAY,SAAW,IAAvD,UACE,sBAAK5C,UAAU,uBAAf,UACE,wBACEuC,QAAStB,EACTjB,UAAU,0DAFZ,UAIGe,EAAO,IACPK,GACC,sBAAMpB,UAAU,uDAAhB,kBAKHsB,GACC,sBAAMtB,UAAU,wBAAwBgB,GAAG,iBAA3C,yBAMJ,gCACE,sBAAKhB,UAAU,qCAAf,UACGwB,EACC,oDACMuB,GADN,IAEE/B,GAAIA,EACJpD,MAAOA,EACPoF,UAAWzF,IACX0F,WAAY1F,IACZ2F,QAAS3F,IACT0D,KAAMA,EACNqB,SAAUA,EACVpB,YAAaA,EACblD,KAAMA,EACNH,KAAMA,EACNmC,UAAS,oCACPa,EACIgB,EACA,gEAHG,sHAIqG7B,MAGhH,iDACM+C,GADN,IAEE/B,GAAIA,EACJ6B,aAAcA,EAAe,OAAS,QACtCjF,MAAOA,EACPqD,KAAMA,EACNqB,SAAUA,EACVpB,YAAaA,EACbR,KACEW,EAAsBW,EAAW,OAAS,WAActB,EAE1DV,UAAS,oCACPa,EACIgB,EACA,gEAHG,qIAIoH7B,MAIjI,sBAAKA,UAAU,iFAAf,UACGa,EACC,qBAAKb,UAAU,uBAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACV,cAAY,WAGF,OAAZ8C,IAAgC,IAAZA,EACtB,qBAAK9C,UAAU,uBAAf,SACE,cAAC,IAAD,CACEA,UAAU,4CACV,cAAY,WAGd,KAEHqB,GAAsBzD,GACrB,qBAAKoC,UAAU,OAAOW,QAAS,kBAAMsB,GAAaD,IAAlD,SACGA,EACC,cAAC,IAAD,CACEhC,UAAU,2DACV,cAAY,SAGd,cAAC,IAAD,CACEA,UAAU,2DACV,cAAY,iBAQvB8B,GACC,mBACE9B,UAAU,uFACVgB,GAAE,UAAKC,GAAQD,EAAb,SAFJ,SAIGc,IAIL,cAAC,IAAD,CACEpC,KAAMgD,QAAQ7B,GACdV,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,kCACNC,UAAU,kCACVP,UAAU,OACVQ,QAAQ,+BARV,SAUE,mBACER,UAAU,qEACVgB,GAAE,UAAKC,GAAQD,EAAb,UAFJ,SAIGH,c,iCCjLb,2BA8BesC,IA3BD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OACf,OACE,qBAAKpD,UAAU,2FAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACV,cAAY,WAGhB,sBAAKA,UAAU,OAAf,UACE,qBAAIA,UAAU,qDAAd,wBACcoD,EAAOrG,OADrB,kCAGA,qBAAKiD,UAAU,8CAAf,SACE,oBAAIA,UAAU,2BAAd,SACG3C,cAAI+F,GAAQ,SAACvC,EAAOwC,GAAR,OACX,6BAAexC,GAANwC,oB,iCCpBzB,4BAuBeC,IAnBC,SACdC,EACAC,GAEI,IADJC,IACG,yDACGC,EACJF,GAAYG,YAAUJ,MAAV,OAA0BC,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUI,KAElD,EAAgDC,mBAC9C,QACA,kBAAMC,YAAcP,KACpB,CAAEQ,SAAUL,GAAyBD,IAH/BO,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,QAM9BC,EAAgBJ,IAAcC,GAAaC,EAAKA,KAAKA,KAE3D,MAAO,CAAEE,gBAAeJ,YAAWC,YAAWP,wBAAuBS,a,iCCpBvE,qEAoEeE,IApDE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAClB,OACE,eAAC,IAAD,CAAM3E,GAAG,MAAMK,UAAU,kCAAzB,UACE,8BACE,eAAC,IAAKuE,OAAN,CAAavE,UAAU,4KAAvB,UACE,sBAAMA,UAAU,UAAhB,0BACA,cAAC,IAAD,CAAkBA,UAAU,UAAU,cAAY,cAItD,cAAC,IAAD,CACEL,GAAIC,WACJO,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAPV,SASE,cAAC,IAAKgE,MAAN,CAAYxE,UAAU,iJAAtB,SACE,qBAAKA,UAAU,OAAf,SACG3C,IAAIiH,GAAM,SAACG,GAAD,OACT,cAAC,IAAKC,KAAN,UACG,gBAAGC,EAAH,EAAGA,OAAH,OACC,sBACE7E,MAAO,CAAEC,OAAQ,KACjBY,QAAS,SAACnD,GACRA,EAAEoH,kBAC0B,oBAAjBH,EAAK9D,SACd8D,EAAK9D,WAGTX,UAAW6E,YACTF,EACI,6DACA,iDACJ,sDAZJ,UAeGF,EAAKK,MAAQ,cAACL,EAAKK,KAAN,CAAW9E,UAAU,SAClCyE,EAAKxD,yB,2GCkGX8D,IAtIM,SAAC,GAWA,IAVpBT,EAUmB,EAVnBA,KAUmB,IATnBpD,mBASmB,MATL,GASK,MARnBH,aAQmB,MARX,GAQW,MAPnBK,gBAOmB,SANnB4D,EAMmB,EANnBA,aAMmB,IALnBC,gBAKmB,MALR,aAKQ,MAJnBC,cAImB,SAHnBjE,EAGmB,EAHnBA,KAGmB,IAFnBjB,iBAEmB,MAFP,GAEO,EADnByB,EACmB,EADnBA,kBAEA,EAA+BS,YAASjB,GAAxC,mBAAOkB,EAAP,KAAcC,EAAd,KAAoB+C,EAApB,KAEQ9C,EAAmC8C,EAAnC9C,SAAU+C,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SAY9B,OACE,cAAC,IAAD,2BAAalD,GAAb,IAAoBG,SAXC,SAACgD,GACtBjD,EAASiD,EAAerE,MACxBgE,EAASK,GACTF,GAAW,GACXC,OAASE,GACwB,oBAAtB9D,GACTA,GAAkB,IAKpB,SACG,kBAAGzC,EAAH,EAAGA,KAAH,OACC,sBAAKgB,UAAWA,EAAhB,UACGe,GACC,eAAC,IAAQyE,MAAT,CAAexF,UAAU,0DAAzB,UACGe,EAAO,IACPK,GACC,sBAAMpB,UAAU,qCAAhB,kBAIN,sBAAKA,UAAU,gBAAf,UACE,eAAC,IAAQuE,OAAT,CACEkB,OAAQ,WACNJ,EAAS,2BAEXrF,UAAS,oDACPkF,EAAS,SAAW,GADb,gMAJX,UAQE,sBACElF,UAAS,0BACP,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAOvE,OAEJ,gCADA,qCAHR,UAOQ,OAALuE,QAAK,IAALA,GAAA,UAAAA,EAAOvE,aAAP,eAAcb,QAAS,EAAvB,OACGoF,QADH,IACGA,OADH,EACGA,EAAOvE,MACPoH,GAAgB9D,IAEtB,sBAAMlB,UAAU,wEAAhB,SACE,cAAC,IAAD,CACEA,UAAU,wBACV,cAAY,cAIjBoC,EAAKK,SAAWL,EAAKvB,OACpB,mBACEb,UAAU,0EACVgB,GAAE,UAAKC,EAAL,UAFJ,SAIGmB,EAAKvB,QAIV,cAAC,IAAD,CACEnB,KAAMV,EACNW,GAAIC,WACJU,MAAM,kCACNC,UAAU,cACVC,QAAQ,YALV,SAOE,cAAC,IAAQkF,QAAT,CACE7F,QAAM,EACNG,UAAU,oMAFZ,SAIGsE,EAAKjH,KAAI,SAACoH,EAAMpB,GAAP,OACR,cAAC,IAAQsC,OAAT,CACEhE,SAAU8C,EAAKmB,eAAe,YAE9B5F,UAAW,gBAAG2E,EAAH,EAAGA,OAAH,OACTE,YACEF,EACI,0DACA,gBACJ,uDAGJ/G,MAAO6G,EAXT,SAaG,gBAAGoB,EAAH,EAAGA,SAAUlB,EAAb,EAAaA,OAAb,OACC,qCACE,sBACE3E,UAAW6E,YACTgB,EAAW,iBAAmB,cAC9B,4CAHJ,SAMGpB,EAAKxD,OAGP4E,EACC,cAAC,IAAD,CACE7F,UAAW6E,YACTF,EAAS,aAAe,kBACxB,6DAEF,cAAY,SAEZ,UA9BHF,EAAKxD,KAAOoC,sB,iCC5GtB,QAA0B,yC,0DCwE1ByC,IAtES,SAAC,GAkBlB,IAjBLC,EAiBI,EAjBJA,SACAC,EAgBI,EAhBJA,UACAC,EAeI,EAfJA,SACAC,EAcI,EAdJA,cACAC,EAaI,EAbJA,eACAC,EAYI,EAZJA,cACAC,EAWI,EAXJA,eAWI,EAVJC,UAWA,OACE,sBAAKtG,UAAU,sGAAf,UAEE,sBAAKA,UAAU,4EAAf,UACG+F,GACC,qBACEjG,MAAK,eAAOqG,GACZnG,UAAS,UAAKkG,EAAL,2DAFX,SAIE,qBACElG,UAAU,eADZ,SAKE,qBAAKA,UAAU,mBAAmBF,MAAO,CAAEyG,UAAW,SAAtD,SACGR,QAORC,GACC,qBAAKhG,UAAU,kEAAf,SACE,qBAAKA,UAAU,mCAAf,SAEE,qBAAKA,UAAU,mBAAmBF,MAAO,GAAzC,SACGkG,WAQX,qBACElG,MAAK,eAAOuG,GACZrG,UAAS,UAAKoG,EAAL,gEAFX,SAIE,qBAAKpG,UAAU,0CAAf,SAEE,qBAAKA,UAAU,kBAAkBF,MAAO,CAAEyG,UAAW,SAArD,SACGN,a,8FCzDP1B,EAAS,SAAC,GAAwD,IAAtDO,EAAqD,EAArDA,KAAM/D,EAA+C,EAA/CA,MACtB,OACE,yBAAQf,UAAU,0KAAlB,UACE,cAAC8E,EAAD,CAAM9E,UAAU,SACfe,MAgBQyF,EAXI,WACjB,OACE,sBAAKxG,UAAU,6BAAf,UACE,cAAC,EAAD,CAAQ8E,KAAM2B,IAAe1F,MAAM,SACnC,cAAC,EAAD,CAAQ+D,KAAM4B,IAAkB3F,MAAM,YACtC,cAAC,EAAD,CAAQ+D,KAAM6B,IAAmB5F,MAAM,UACvC,cAAC,EAAD,CAAQ+D,KAAM8B,IAAQ7F,MAAM,a,cCInB8F,EAvBK,SAACC,GAA0C,IAAhCC,EAA+B,uDAAV,MAClD,EAA0ChF,oBAAS,GAAnD,mBAAOiF,EAAP,KAAuBC,EAAvB,KAmBA,OAjBAC,qBAAU,WACR,IAAMC,EAAW,IAAIC,sBACnB,gBAAEC,EAAF,2BAAaJ,EAAgBI,EAAML,kBACnC,CACED,eAQJ,OAJID,EAAIQ,SACNH,EAASI,QAAQT,EAAIQ,SAGhB,WACLH,EAASK,gBAEV,CAACV,IAEGE,G,kDC8NMS,IA1NF,SAAC,GAQP,IAAD,gBAPJC,EAOI,EAPJA,KACAC,EAMI,EANJA,OACAnE,EAKI,EALJA,SAMMoE,EAAI,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAME,KACbC,EAAc,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAM9D,WAAT,aAAG,EAAWkE,WAE1BC,EAAWC,uBAAY,kBAAMC,YAASJ,MAAtCE,OAEFG,EAAUC,iBAAO,MACjBC,EAAiBvB,EAAYqB,GAE7BG,EAAQ,OAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAMY,gBAAT,aAAG,EAAgB5J,SAASiJ,GAEpCY,GAAyB,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMhE,WAAN,eAAWkE,cAAeH,EAC7Ca,EAAoBC,cAApBD,gBAEFE,EAAgBV,sBAAYW,KAC5BC,EAAmBZ,sBAAYa,KAC/BC,EAAkBd,sBAAYe,KAEpC7B,qBAAU,YACJkB,GAAmBC,GAAaE,GAClCS,YAAW,WACTjB,MACC,OAEJ,CAACK,EAAgBC,IAEpB,IAAMY,EAAO,OAAGzF,QAAH,IAAGA,GAAH,UAAGA,EAAU0F,kBAAb,aAAG,EAAsBxK,SAASmJ,EAAOC,YAChDqB,EAAU,OAAG3F,QAAH,IAAGA,GAAH,UAAGA,EAAU4F,qBAAb,aAAG,EAAyB1K,SAASmJ,EAAOC,YAE5D,EAA0B/F,mBAASkH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAgCvH,mBAASoH,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAqB,CACzB,CACEzI,GAAI0I,cACJzI,KAAMoI,EAAQ,SAAW,iBACzB1I,QAAS,WACH0I,GAEFX,EAAcX,OAAO,CACnB4B,OAAQ,SACR9B,OAAQA,EAAOC,aAEjBwB,GAAS,GACTd,EAAgB,CACdoB,WAAY,WACZC,UAAWC,IAAMC,UACjBrK,MAAM,EACNsK,MAAO,oBAITtB,EAAcX,OAAO,CAAE4B,OAAQ,OAAQ9B,OAAM,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQC,aACvDwB,GAAS,GACTd,EAAgB,CACdoB,WAAY,WACZC,UAAWC,IAAMC,UACjBrK,MAAM,EACNsK,MAAO,kBAIblF,KAAMuE,EAAQY,IAAaC,KAE7B,CACEpF,KAAMqF,IACNnJ,GAAI0I,cACJzI,KAAM,oBACNN,QAAS,WACPyJ,UAAUC,UAAUC,UAClBC,OAAOC,OAASV,IAAMW,SAAN,OAAe/C,QAAf,IAAeA,OAAf,EAAeA,EAAMgD,aAMvCC,EAAY,UACblB,EADa,CAEhB,CACEzI,GAAI,IACJC,KAAK,YAAD,QAAkB,OAAJ2G,QAAI,IAAJA,OAAA,EAAAA,EAAMgD,YAAN,OAAkBhD,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMiD,YAC1ClK,QAAS,gBAKPmK,EAAc,UACfrB,EADe,CAElB,CACEzI,GAAI,IACJC,KAAM,4BACNN,QAAS,WACH4I,GAEFX,EAAiBb,OAAO,CACtB4B,OAAQ,YACR9B,OAAQA,EAAOC,aAEjB0B,GAAY,GACZhB,EAAgB,CACd9I,MAAM,EACNsK,MAAO,uCAITpB,EAAiBb,OAAO,CACtB4B,OAAQ,UACR9B,OAAQA,EAAOC,aAEjBU,EAAgB,CACd9I,MAAM,EACNsK,MAAO,iCAETR,GAAY,KAGhB1E,KAAMyE,EAAWwB,IAAaC,KAEhC,CACEhK,GAAI,IACJC,KAAK,YACL6D,KAAMmG,IACNtK,QAAS,cAEX,CACEK,GAAI,IACJC,KAAK,cACL6D,KAAMoG,IACNvK,QAAS,WACPmI,EAAgBf,OAAOF,OAK7B,OACE,sBACEf,IAAKoB,EACLlI,UAAU,uGAFZ,UAIE,sBAAKA,UAAU,gDAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,qBACEmL,KACM,OAAJvD,QAAI,IAAJA,OAAA,EAAAA,EAAMwD,gBAAN,OAAuBxD,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMwD,eAAiBC,IAEhDC,IAAI,QACJtL,UAAU,0FAGd,sBAAKA,UAAU,gBAAf,UACE,mBACEuL,KAAMzB,IAAM0B,eAAN,OACJ5D,QADI,IACJA,OADI,EACJA,EAAMrE,WADF,OAEJqE,QAFI,IAEJA,GAFI,UAEJA,EAAM6D,aAFF,aAEJ,EAAaC,SACb,UAJJ,SAOE,oBAAI1L,UAAU,uDAAd,UACO,OAAJ4H,QAAI,IAAJA,OAAA,EAAAA,EAAMgD,WAAY,SAGvB,uBAAM5K,UAAU,2CAAhB,WACO,OAAJ4H,QAAI,IAAJA,GAAA,UAAAA,EAAM+D,iBAAN,eAAiB5O,SAAU,EAD9B,aAC2C,IACzC,uBAAMiD,UAAU,uDAAhB,oBACKnB,IAAM,OAAC6I,QAAD,IAACA,OAAD,EAACA,EAAMkE,UAAU9M,sBAKlC,qBAAKkB,UAAU,WAAf,SACE,cAACqE,EAAA,EAAD,CAAUC,KAAMiE,EAAqBuC,EAAiBH,UAGrD,OAAJjD,QAAI,IAAJA,OAAA,EAAAA,EAAMmE,OACL,qBAAK7L,UAAU,YAAf,SACE,mBAAGA,UAAU,uDAAb,gBACG0H,QADH,IACGA,OADH,EACGA,EAAMmE,UAIR,OAAJnE,QAAI,IAAJA,GAAA,UAAAA,EAAMoC,aAAN,eAAa/M,QAAS,IACG,UAAvB2K,EAAKoC,MAAM,GAAGpJ,KACb,qBAAKV,UAAU,SAASmL,IAAKzD,EAAKoC,MAAM,GAAGgC,IAAKR,IAAI,KAEpD,uBACES,UAAQ,EACR/L,UAAU,SACVgM,aAAa,aACbb,IAAKzD,EAAKoC,MAAM,GAAGgC,OAgBzB,cAAC,EAAD,S,iCC/ON,mCA6DeG,IAzDM,SAAC,GAIf,IAAD,EAHJC,EAGI,EAHJA,WAIA,EAAuCrI,mBAAS,qBAAqB,kBACnEsI,aAAY,MADNnI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,KAIxBkI,EACJpI,IAAcC,EAAd,OAA0BC,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMA,YAAhC,aAA0B,EAAYA,KAAO,GAC/C,OACE,qBAAKlE,UAAU,mHAAf,SACE,sBAAKA,UAAU,GAAf,UACE,sBAAKA,UAAU,0DAAf,UACE,mBAAGuL,KAAMzB,IAAMuC,SAAUrM,UAAU,iCAAnC,oBAGA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,qDAAf,UACE,qBAAKA,UAAU,mBAAf,oBACA,qBAAKA,UAAU,oIAAf,kBAIDoM,GACCA,EAAgBrP,OAAS,GACzBqP,EAAgB/O,KAAI,SAACiP,GAAD,OAClB,mBACEf,KAAMzB,IAAMyC,UAAUD,EAAG1I,KACzB5D,UAAU,2FAFZ,SAIGsM,EAAGE,kBAIZ,qBAAKxM,UAAU,iCAAf,8BACCkM,GACCA,EAAWnP,OAAS,GACpBmP,EAAW7O,KAAI,SAACoH,GAAD,OACb,mBACE8G,KAAM9G,EAAKgI,KAEXzM,UAAU,iCAHZ,SAKGyE,EAAKxD,MAHDwD,EAAKxD,YAOlB,qBAAKjB,UAAU,iOAAf,SACE,uD,iCCtDV,4BAGM0M,EAAO,CACX,CAAEzL,KAAM,oCAAqC0L,QAAS,UACtD,CAAE1L,KAAM,oCAAqC0L,QAAS,UAEtD,CAAE1L,KAAM,oCAAqC0L,QAAS,WA6BzCC,IA1BE,WACf,OACE,cAAC,IAAD,CACE5M,UAAU,GACV6M,WAAS,EACTC,UAAU,aACVC,QACE,qBAAK/M,UAAU,6BAAf,SACE,oBAAIA,UAAU,wBAAd,SACG3C,cAAIqP,GAAM,SAACM,EAAO3J,GAAR,OACT,qBAAcrD,UAAU,QAAxB,UACE,oBAAIA,UAAU,iFAAd,SACGgN,EAAM/L,OAET,oBAAGjB,UAAU,yCAAb,6BACcgN,EAAML,QADpB,gBAJOtJ,c,iOCiRR4J,IAlRK,SAAC,GAQd,IAPLjO,EAOI,EAPJA,KACAC,EAMI,EANJA,QACAiO,EAKI,EALJA,UAMMC,EAAmBC,IAAW,CAClCZ,UAAWY,MAAahM,SAAS,0BAA0BiM,IAAI,IAAIC,IAAI,KACvEC,iBAAkBH,MACfhM,SAAS,iCACTiM,IAAI,IACJC,IAAI,OAMHE,EAAwB,CAC5BhB,WAAoB,OAATU,QAAS,IAATA,OAAA,EAAAA,EAAWV,YAAa,GACnCe,kBAA2B,OAATL,QAAS,IAATA,OAAA,EAAAA,EAAWK,mBAAoB,GACjDE,WAAoB,OAATP,QAAS,IAATA,OAAA,EAAAA,EAAWO,YAAa,IAAIC,KACvCC,SAAkB,OAATT,QAAS,IAATA,OAAA,EAAAA,EAAWS,UAAW,IAAID,KACnCE,WAAoB,OAATV,QAAS,IAATA,OAAA,EAAAA,EAAWU,YAAa,GACnCC,SAAkB,OAATX,QAAS,IAATA,OAAA,EAAAA,EAAWW,UAAW,GAC/BC,UAAmB,OAATZ,QAAS,IAATA,OAAA,EAAAA,EAAWY,WAAY,IAG7BC,EAAU5F,mBACRK,EAAoBC,cAApBD,gBAER,EAA8CR,sBAAYgG,IAAa,CACrEC,UAAW,SAAC/J,GAEV,IAAMgK,EAAUhK,EAAKA,KAAKgK,QACpBC,EAAUjK,EAAKA,KAAKA,KAC1BsE,EAAgB,CACd9I,MAAM,EACNsK,MAAOkE,EACPtE,WAAY,OACZC,UAAWC,IAAMyC,UAAU4B,QATzBpG,EAAR,EAAQA,OAAQ9D,EAAhB,EAAgBA,UAAWmK,EAA3B,EAA2BA,QAASvN,EAApC,EAAoCA,MAcpC,EAA4BkB,mBAAS,MAArC,mBAAOsM,EAAP,KAAeC,EAAf,KAEMC,EAASvG,sBAAYwG,IAAsB,CAC/CP,UAAW,SAACQ,EAAGC,GACb,GAAIL,EAAQ,CACV,GAAII,EAAEvK,KAAKA,MAAQuK,EAAEvK,KAAKA,KAAKnH,OAAQ,CAAC,IAAD,IAC/B4R,EAAwBtR,cAAIoR,EAAEvK,KAAKA,MAAM,SAAC0K,GAAD,OAASA,KAExD7G,EAAO,2BACFsG,GADC,IAEJQ,WAAU,UAAEF,EAAeG,MACzB,SAACF,GAAD,OAASA,EAAIG,eAAiBF,EAAW5N,eADjC,aAAE,EAET+N,SAEHC,aAAY,UAAEN,EAAeG,MAC3B,SAACF,GAAD,OAASA,EAAIG,eAAiBE,EAAahO,eADjC,aAAE,EAEX+N,iBAGLjH,EAAO,eACFsG,IAGPpP,GAAQ,GACRiQ,EAAc,MACdC,EAAgB,UAKhBC,EAAiB,WACrB,IAAMC,EAAK,IAAIC,SAEfD,EAAGE,OAAO,SAAUN,GACpBI,EAAGE,OAAO,SAAUV,GAEpB7F,YAAW,WACTuF,EAAOxG,OAAOsH,KACb,MAGCG,EAAQ,uCAAG,WAAOnB,GAAP,SAAAI,EAAA,sDACfH,EAAU,eAAKD,IACfe,IAFe,2CAAH,sDAKRK,GAAYC,kBAAQxC,GAE1BhG,qBAAU,WACJuI,IACFP,EAAchC,EAAUyC,cACxBR,EAAgBjC,EAAU9B,gBAC1BwE,IAA6B,OAAT1C,QAAS,IAATA,OAAA,EAAAA,EAAWY,WAAYA,IAAS,GAAGjC,SAExD,CAAC4D,IAEJ,IAAMI,EAA0B1H,mBAM1B2H,EAAwB3H,mBAM9B,EAAwCpG,qBAAxC,mBAAOkN,EAAP,KAAqBE,EAArB,KAEA,EAAoCpN,qBAApC,mBAAO8M,EAAP,KAAmBK,EAAnB,KAEA,EAAgDnN,mBAAS+L,IAAS,GAAGjC,MAArE,oBAAOkE,GAAP,MAAyBH,GAAzB,MAEA,OACE,cAAC,IAAD,CAAOpQ,gBAAc,EAACP,QAASA,EAASE,OAAO,eAAeH,KAAMA,EAApE,SACE,qBAAKgB,UAAU,iEAAf,SACE,sBAAKA,UAAU,OAAf,UAEE,uBAEE8G,IAAKgJ,EACL9P,UAAU,SACVU,KAAK,OACL4B,SAAU,SAAC9E,GAAD,OAAO0R,EAAc1R,EAAEE,OAAOsS,MAAM,KAC9CC,OAAO,2BAGT,uBAEEnJ,IAAK+I,EACL7P,UAAU,SACVU,KAAK,OACL4B,SAAU,SAAC9E,GAAD,OAAO2R,EAAgB3R,EAAEE,OAAOsS,MAAM,KAChDC,OAAO,2BAGT,cAAC,IAAD,CACEzC,cAAeA,EACf0C,mBAAoBT,EACpBU,SAAUpC,EACVZ,iBAAkBA,EAClBqC,SAAUA,EALZ,SAOE,eAAC,IAAD,CAAMxP,UAAU,aAAhB,UACE,sBAAKA,UAAU,8CAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAAC,IAAD,CAAeA,UAAU,yGAE3B,qBACEsL,IAAI,GACJ3K,QAAS,kBAhDM,+BAE/BmP,QAF+B,IAE/BA,GAF+B,UAE/BA,EAAuBxI,eAFQ,aAE/B,EAAgC8I,QA8CDC,IACflF,IACE0D,EACIY,EACEZ,EACAyB,IAAIC,gBAAgB1B,GACtB3N,IAENlB,UAAU,gDAGd,qBAAKA,UAAU,gDAAf,SACE,qBACEW,QAAS,kBAnEQ,+BAEjCkP,QAFiC,IAEjCA,GAFiC,UAEjCA,EAAyBvI,eAFQ,aAEjC,EAAkC8I,QAiEHI,IACflF,IAAI,GACJH,IACE8D,EACIQ,EACER,EACAqB,IAAIC,gBAAgBtB,GACtB5D,IAENrL,UAAU,+EAIhB,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,+CAAd,qBAGA,cAAC,IAAD,CACEe,MAAM,aACNC,GAAG,YACHC,KAAK,YACLG,UAAQ,IAGV,cAAC,IAAD,CACEL,MAAM,WACNK,UAAQ,EACRH,KAAK,WACL+D,aAAc+K,GACdzL,KAAMwJ,IAASzQ,KAAI,SAACoT,GAAD,MAAQ,CAAExP,KAAMwP,EAAE5E,KAAM7K,GAAIyP,EAAE7S,UACjDsD,YAAY,uCAGd,sBAAKlB,UAAU,mDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CACEiB,KAAK,YACLF,MAAM,aACNL,KAAK,WAGT,qBAAKV,UAAU,OAAf,SACE,cAAC,IAAD,CACEiB,KAAK,YACLF,MAAM,aACNK,UAAQ,EACRV,KAAK,cAIX,sBAAKV,UAAU,oBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAWiB,KAAK,UAAUF,MAAM,WAAWL,KAAK,WAElD,qBAAKV,UAAU,OAAf,SACE,cAAC,IAAD,CACEiB,KAAK,UACLG,UAAQ,EACRL,MAAM,WACNL,KAAK,iBAMb,cAAC,IAAD,CACEK,MAAM,cACNK,UAAQ,EACRJ,GAAG,mBACHC,KAAK,mBACLC,YAAY,6BACZM,UAAQ,EACRxD,KAAM,EACNH,KAAM,SAITuQ,GACC,qBAAKpO,UAAU,OAAf,SACE,cAAC,IAAD,CAAOoD,OAAQ,CAACvC,EAAMiH,gBAG1B,qBAAK9H,UAAU,oCAAf,SACE,cAAC,IAAD,CACE0Q,QAAQ,eACRC,QAASpC,EAAOtK,WAAaA,EAC7BtC,SAAU4M,EAAOtK,WAAaA,EAC9B2M,UAAQ,EACRC,KAAK,KACLnQ,KAAK,SACLK,MAAM,2B,yKCjKT+P,EA3GG,SAAC,GAYZ,IAAD,EAXJ9R,EAWI,EAXJA,KACAC,EAUI,EAVJA,QACA8R,EASI,EATJA,mBASI,IARJC,iBAQI,MARQ,UAQR,EAPJC,EAOI,EAPJA,WAQQzI,EAAoBC,cAApBD,gBACA0I,EAAoBC,cAApBD,gBACR,EAA8ClJ,sBAAYoJ,IAAS,CACjEnD,UAAW,SAAC/J,GACV,IAAMwG,EAAUxG,EAAKA,KAAKA,KAC1BgN,GAAgB,GAChBjS,GAAQ,GACRuJ,EAAgB,CACd9I,MAAM,EACNsK,MAAO,kBACPJ,WAAY,OACZC,UAAWC,IAAMW,SAASC,QATxB3C,EAAR,EAAQA,OAAQ9D,EAAhB,EAAgBA,UAAWmK,EAA3B,EAA2BA,QAASvN,EAApC,EAAoCA,MAiB9BkN,EAAU5F,mBAYhB,OACE,cAACpJ,EAAA,EAAD,CAAOE,QAASA,EAASE,OAAO,gBAAgBH,KAAMA,EAAtD,SACE,qBAAKgB,UAAU,gDAAf,SACE,cAAC,IAAD,CACEmQ,SAAUpC,EACVP,cApBc,CACpB3B,KAAM,IAoBA2D,SAhBS,SAACnB,GAChBtG,EAAO,CACLsJ,SAAU,CACRxF,KAAMwC,EAAOxC,KACbyF,SAAUN,EACVC,WAA0B,YAAdD,EAA0BC,EAAa,SAQnD,SAKE,eAAC,IAAD,WACE,cAACnQ,EAAA,EAAD,CACEK,UAAU,cACVI,aAAW,EACXK,UAAU,sDACVV,YAAY,kCACZlD,KAAM,GACNiD,KAAK,OACLD,GAAG,OACHQ,UAAQ,IAEV,sBAAKxB,UAAU,sDAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAACuE,EAAA,EAAD,CACEqM,UAAQ,EACRW,QAAM,EAENzM,KAAM0M,IACNzQ,MAAM,QACNJ,QAAS,WACP1B,GAAQ,GACR8R,EAAmB,YAGvB,cAACxM,EAAA,EAAD,CACEqM,UAAQ,EACR9L,KAAM2M,IAENC,QAAQ,OACRH,QAAM,EACN5Q,QAAS,WAEP,OADA1B,GAAQ,GACD8R,EAAmB,UAE5BhQ,MAAM,aAGV,cAACwD,EAAA,EAAD,CACEqM,UAAQ,EACRD,QAAS1M,EAETtC,UAAiB,OAAPoM,QAAO,IAAPA,GAAA,UAAAA,EAASzG,eAAT,eAAkB+G,OAAOxC,KAAK9O,SAAU,EAClD2D,KAAK,SACLK,MAAM,OACN8P,KAAK,UAGRzC,GAAW,mBAAGpO,UAAU,uBAAb,SAAqCa,c,iBC4F9C8Q,EAlMQ,SAAC,GAQjB,IAPL3S,EAOI,EAPJA,KACAC,EAMI,EANJA,QAMI,IALJ2S,eAKI,SACIpJ,EAAoBC,cAApBD,gBACA0I,EAAoBC,cAApBD,gBACR,EAA8ClJ,sBAAYoJ,IAAS,CACjEnD,UAAW,SAAC/J,GACV,IAAMwG,EAAUxG,EAAKA,KAAKA,KAC1BgN,GAAgB,GAChBjS,GAAQ,GACRuJ,EAAgB,CACd9I,MAAM,EACNsK,MAAO,kBACPJ,WAAY,OACZC,UAAWC,IAAMW,SAASC,QATxB3C,EAAR,EAAQA,OAAQ9D,EAAhB,EAAgBA,UAAWmK,EAA3B,EAA2BA,QAASvN,EAApC,EAAoCA,MAcpC,EAA0BkB,mBAAS,MAAnC,mBAAO8P,EAAP,KAAcC,EAAd,KAEMvD,EAASvG,sBAAY+J,IAAqB,CAC9C9D,UAAW,SAACQ,GAAO,IAAD,IACVuD,EAAe,CACnBX,SAAU,CACRY,SAAU,YACVpG,KAAMqG,GAAW,GACjBpI,MAAO,CACL,CACE9I,GAAI0I,YAAO,IACXoC,IAAG,OAAE2C,QAAF,IAAEA,GAAF,UAAEA,EAAGvK,YAAL,iBAAE,EAASA,YAAX,aAAE,EAAe8K,SACpBtO,KAAMkR,EAAU,QAAU,YAKlC7J,EAAOiK,MAILG,EAAoBhK,mBAsB1B,EAAkCpG,oBAAS,GAA3C,mBAAOqQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BtQ,mBAAS,IAAvC,mBAAOmQ,EAAP,KAAgBI,EAAhB,KAOA,OACE,eAACvT,EAAA,EAAD,CACES,gBAAc,EACdP,QAASA,EACTE,OAAM,oBAAeyS,EAAU,QAAU,SACzC5S,KAAMA,EAJR,UAME,sBAAKgB,UAAU,2FAAf,UACG6R,EACC,sBAAK7R,UAAU,GAAf,UACGoS,EACC,sBAAKpS,UAAU,QAAf,UACE,oBAAIA,UAAU,wCAAd,sBAGA,mBAAGA,UAAU,wCAAb,2LAKA,cAAC2C,EAAA,EAAD,CACE/E,MAAOsU,EACP5P,SA3BQ,SAAC9E,GACvB,IAAQI,EAAUJ,EAAEE,OAAZE,MACR0U,EAAW1U,IA0BG4D,UAAQ,EACRxD,KAAM,IAER,sBAAKgC,UAAU,+DAAf,UACE,cAACuE,EAAA,EAAD,CACEqM,UAAQ,EACRF,QAAQ,eACR/P,QAAS,WACP2R,EAAW,IACXD,GAAa,IAEfd,QAAM,EACNxQ,MAAM,SACN8P,KAAK,OAEP,cAACtM,EAAA,EAAD,CACEqM,UAAQ,EACRF,QAAQ,eACR3P,MAAM,OACNJ,QAAS,WACP0R,GAAa,IAEfxB,KAAK,aAKX,8BACGe,EACC,qBACE5R,UAAU,SACVmL,IAAKmF,IAAIC,gBAAgBsB,GACzBvG,IAAI,KAGN,uBACES,UAAQ,EACR/L,UAAU,SACVgM,aAAa,aACbb,IAAKmF,IAAIC,gBAAgBsB,OAKjC,qBAAK7R,UAAU,0CAAf,SACE,cAACuE,EAAA,EAAD,CACE5D,QAAS,kBAAM0R,GAAcD,IAC7Bb,QAASa,EACTrR,MAAM,kBAKZ,cAACwD,EAAA,EAAD,CACE5D,QApGe,+BAAMwR,QAAN,IAAMA,GAAN,UAAMA,EAAc7K,eAApB,aAAM,EAAuB8I,SAqG5CrP,MAAK,iBAAY6Q,EAAU,QAAU,QAAhC,aACLhB,UAAQ,EACRW,QAAM,EACNV,KAAK,OAKT,uBAEE/J,IAAKqL,EACLnS,UAAU,SACVU,KAAK,OACL4B,SAvHc,SAAC9E,GACrB,IAAMoR,EAAMpR,EAAEE,OAAOsS,MAAM,GAC3B8B,EAASlD,IAsHHqB,OAAQ2B,EAAU,UAAY,eAGlC,sBAAK5R,UAAU,kHAAf,UACE,cAACuE,EAAA,EAAD,CACEqM,UAAQ,EACRF,QAAQ,eACR/P,QAxHS,WACfmR,EAAS,MACT7S,GAAQ,IAuHFsS,QAAM,EACNxQ,MAAM,SACN8P,KAAK,OAEP,cAACtM,EAAA,EAAD,CACEqM,UAAQ,EACRF,QAAQ,eACRC,QAAS1M,GAAasK,EAAOtK,UAC7BlD,MAAM,OACNJ,QA7HS,SAACnD,GAChBA,EAAE+U,iBACF,IAAMlD,EAAK,IAAIC,SACfD,EAAGE,OAAO,QAASsC,GAEnBtD,EAAOxG,OAAOsH,IAyHRwB,KAAK,UAGRzC,GAAW,mBAAGpO,UAAU,uBAAb,SAAqCa,Q,yBCpFxC2R,IAvGG,SAAC,GAcZ,IAbLpH,EAaI,EAbJA,eAaI,IAZJqH,qBAYI,MAZY,KAYZ,MAXJvR,mBAWI,MAXU,eAWV,EAVJS,EAUI,EAVJA,SAUI,IATJqP,iBASI,MATQ,UASR,EARJC,EAQI,EARJA,WASA,EAA0ClP,oBAAS,GAAnD,mBAAO2Q,EAAP,KAAsBC,EAAtB,KACA,EAA8C5Q,mBAAS,QAAvD,mBAAO6Q,EAAP,KAAwB7B,EAAxB,KACA,EAA4ChP,oBAAS,GAArD,mBAAO8Q,EAAP,KAAuBC,EAAvB,KAEMC,EACJ,qCACE,cAACxO,EAAA,EAAD,CACEqM,UAAQ,EACRW,QAAM,EAENzM,KAAM0M,IACNzQ,MAAM,QACNJ,QAAS,kBAAMoQ,EAAmB,YAEpC,cAACxM,EAAA,EAAD,CACEqM,UAAQ,EACR9L,KAAM2M,IAENC,QAAQ,OACRH,QAAM,EACN5Q,QAAS,kBAAMoQ,EAAmB,UAClChQ,MAAM,UAER,cAACwD,EAAA,EAAD,CACEqM,UAAQ,EACR9L,KAAMkO,IAENzB,QAAM,EACNG,QAAQ,OACR/Q,QAAS,kBAAMmS,GAAkB,IACjC/R,MAAM,UAER,cAACwD,EAAA,EAAD,CACEqM,UAAQ,EACR9L,KAAMmO,IACN1B,QAAM,EAENG,QAAQ,OACR3Q,MAAM,sBAKZ,OACE,sCACIY,GACA,cAAC,EAAD,CACEsP,WAAYA,EACZD,UAAWA,EACXD,mBAAoBA,EACpB/R,KAAM0T,EACNzT,QAAS0T,KAGS,UAApBC,GAAmD,UAApBA,IAC/B,cAAC,EAAD,CACEhB,QAA6B,UAApBgB,EACT5T,MAAI,EACJC,QAAS,kBAAM8R,EAAmB,WAGtC,cAAC9D,EAAA,EAAD,CAAajO,KAAM6T,EAAgB5T,QAAS6T,IAC5C,cAACI,EAAA,EAAD,CACEnG,QACE,sBAAK/M,UAAU,0BAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEmL,IAAKC,GAAkCC,IACvCC,IAAI,QACJtL,UAAU,wFAEZ,qBACEW,QAAS,kBAAMgS,GAAiB,IAChC3S,UAAU,mRAFZ,SAIGkB,OAGL,qBAAKlB,UAAU,oCAAf,SACGyS,GAAiBM,c,q7yBC3BjBI,EArEG,SAAC,GAAyC,IAAD,IAAtC3P,EAAsC,EAAtCA,SACnB,EAAwBzB,mBAAS,GAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KAEA,EAA0BtR,mBAAS,IAAnC,mBAAOuR,EAAP,KAAcC,EAAd,KAEA,EAA2D1P,mBACzD,cACA,WACE,OAAO2P,YAAU,CAAEC,MAAO,GAAIL,WAEhC,CACEnF,UAAW,SAAC/J,GAAU,IAAD,IACbwP,EAAM,OAAGxP,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,iBAAG,EAAYA,YAAf,aAAG,EAAkBoP,MAC7BI,GAAUA,EAAO3W,OAAS,GAC5BwW,EAAS,GAAD,mBAAKD,GAAL,YAAeI,QATvBxP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASF,EAAvB,EAAuBA,UAAWD,EAAlC,EAAkCA,UAAW2P,EAA7C,EAA6CA,UAoB7C,EAA0CxC,cAAlCyC,EAAR,EAAQA,aAAc1C,EAAtB,EAAsBA,gBAEtBhK,qBAAU,WACJ0M,GACFzP,IAAU0P,MAAK,WACb3C,GAAgB,QAGnB,CAAC0C,IAEJ,IAAME,GACH7P,GAAaD,GAAa2P,IAAgB,OAAJzP,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,mBAAYA,YAAZ,eAAkB6P,QAAa,EAExE,OACE,sBAAK/T,UAAU,GAAf,UACE,cAACgU,EAAA,EAAD,CAAMC,UAAS,WAAMH,GAAa,EAAnB,oBACdR,GAASA,EAAMvW,OAAS,EACvB,cAAC,IAAD,CACEmX,WACE,qBAAKlU,UAAU,cAAf,SACE,sBAAMA,UAAU,+CAAhB,sBAKJmU,WAAYL,EACZM,iBAAiB,eACjBC,KAhCc,WACpBhB,EAAQD,EAAO,IACfjP,KA+BMmQ,QAASR,EAAYR,EAAMvW,OAC3BwX,OAAQ,4CAZV,SAcE,qBAAKvU,UAAU,2BAAf,SACGsT,EAAMjW,KAAI,SAACqK,GAAD,OACT,cAACD,EAAA,EAAD,CAAMjE,SAAUA,EAAUmE,OAAQnE,EAASI,IAAK8D,KAAMA,WAK5D,cAAC8M,EAAA,EAAD,CAAYC,UAAWC,EAAe1K,MAAM,6B,mJC+JrC2K,EAzNM,SAAC,GAQhB,EAPJ3U,UAOK,IAAD,EANJ4U,EAMI,EANJA,SACUhN,EAKN,EALJpE,SAMA,EAAkCzB,oBAAS,GAA3C,mBAAO8S,EAAP,KAAkBC,EAAlB,KACA,EAA4B/S,oBAAS,GAArC,mBAAOgT,EAAP,KAAeC,EAAf,KAEA,EAA2BjT,mBAAS,IAApC,mBAAOkT,EAAP,KAAeC,EAAf,KAEMC,EAAgB,SAAC3X,GACrB,IAAMoR,EAAMpR,EAAEE,OAAOsS,MAAM,GAC3BkF,EAAStG,GACTkG,GAAa,IAGPxG,EAAc8G,cAAd9G,UACA9F,EAAoBC,cAApBD,gBAEF6M,EAAM,uCAAG,oCAAA5G,EAAA,6DACbuG,GAAU,IAEJ3F,EAAK,IAAIC,UACZC,OAAO,QAAS0F,GAEbK,EAAS,CACbC,QAAS,CACP,eAAgB,wBARP,kBAaYC,IAAQ9N,KAAK,eAAgB2H,EAAIiG,GAb7C,sBAaHpR,EAbG,EAaHA,OAEIA,EAAKA,MAAQA,EAAKA,KAAK8K,UAfxB,+BAgBHyG,EAhBG,2BAiBJ7N,GAjBI,kBAkBN8N,EAAU,eAAiB,iBAAmBxR,EAAKA,KAAK8K,YAGxC2G,SAEnBrH,EAAU,eAAKmH,IAvBN,UAyBHD,IAAQ9N,KAAK,eAAb,eACD+N,IA1BI,QA6BTjN,EAAgB,CACd9I,MAAM,EACNsK,MAAM,GAAD,OAAK0L,EAAU,QAAU,UAAzB,iCA/BE,0DAmCXE,QAAQ/U,MAAM,KAAMqN,SAnCT,yBAqCX4G,GAAa,GArCF,qBAuCbE,GAAU,GAvCG,gEAAH,qDA0CJa,EAAeC,YAAelO,GAA9BiO,WAEA3R,EAASL,mBAAS,sBAAsB,kBAAMkS,iBAA9C7R,KAEF8R,GAAgB,OAAJ9R,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,eAAYA,OAAQ,EAEtC,EAA8BnC,oBAAS,GAAvC,mBAAO2T,EAAP,KAAgBO,EAAhB,KAEMpG,EAA0BqG,IAAM/N,SAShC2H,EAAwBoG,IAAM/N,SASpC,OACE,qCACGyM,GACC,cAAC7V,EAAA,EAAD,CACEI,OAAM,UAAKuW,EAAU,QAAU,UAAzB,UACNrW,sBAAoB,EACpBL,KAAM6V,EACN5V,QAAS6V,EAJX,SAME,sBACE9U,UAAS,UACP0V,EACI,sCACA,2BAJR,UAOE,qBACE1V,UAAS,mBACP0V,EACI,uBACA,4CAHG,KADX,SAOGT,GACC,qBACEjV,UAAS,oBACP0V,EA5BhB,8DACyB,gDA8BXvK,IAAKmF,IAAIC,gBAAgB0E,GACzB3J,IAAI,OAIV,qBAAKtL,UAAU,8CAAf,SACE,cAACuE,EAAA,EAAD,CACEqM,UAAQ,EACRD,QAASoE,EACTpT,SAAUoT,EACVpU,QAAS0U,EACT3U,KAAK,SACLK,MAAM,gBAOhB,uBAEE+F,IAAK+I,EACL7P,UAAU,SACVU,KAAK,OACL4B,SAAU6S,EACVlF,OAAO,2BAGT,uBAEEnJ,IAAKgJ,EACL9P,UAAU,SACVU,KAAK,OACL4B,SAAU6S,EACVlF,OAAO,2BAIT,sBACEjQ,UAAS,kIADX,UAGE,qBACEF,MAAO,CACLqW,gBAAgB,OAAD,QACT,OAAJvO,QAAI,IAAJA,OAAA,EAAAA,EAAM+H,cAAN,OACI/H,QADJ,IACIA,OADJ,EACIA,EAAM+H,aACN,qDAHS,MAMjBhP,QAAS,kBAAOiU,EAtFS,WAAO,IAAD,EACrCqB,GAAW,GAEU,OAArBnG,QAAqB,IAArBA,GAAA,UAAAA,EAAuBxI,eAAvB,SAAgC8I,QAmFCC,GAA6BpQ,QACxDD,UAAU,+EAEZ,qBAAKA,UAAU,4BAAf,SACE,qBACEsL,IAAI,GACJtB,MAAM,eACNrJ,QAAS,kBAAOiU,EAtGS,WAEhC,IAAD,EAGE,OAFAqB,GAAW,GAEX,OAAOpG,QAAP,IAAOA,GAAP,UAAOA,EAAyBvI,eAAhC,aAAO,EAAkC8I,QAiGRI,GAA+BvQ,QAC1DkL,IAAKvD,EAAKwD,eAAiBxD,EAAKwD,eAAiBC,IACjDrL,UAAU,sGAGd,sBAAKA,UAAU,6BAAf,UACE,mBACEuL,KAAMzB,IAAMsM,WAAWxO,GAAM,GAC7B5H,UAAU,sDAFZ,SAIG4H,EAAKgD,WAER,mBAAG5K,UAAU,wDAAb,SACG6V,EAAajO,EAAKyO,SAASpV,KAAO2G,EAAK0O,QAAQC,cAGpD,sBAAKvW,UAAU,iIAAf,UACE,sBAAKA,UAAU,kGAAf,UACE,oBAAIA,UAAU,GAAd,qCACA,sBAAMA,UAAU,0BAAhB,SAA2C4H,EAAK4O,eAElD,sBAAKxW,UAAU,kGAAf,UACE,oBAAIA,UAAU,GAAd,gCACA,sBAAMA,UAAU,0BAAhB,SAA2CgW,UAG/C,oBACEzK,KAAMzB,IAAMC,UACZ/J,UAAU,+NAFZ,UAIE,cAAC,IAAD,CAAoBA,UAAU,SAC9B,+CAMJ,cAAC,IAAD,Q,SCrKSyW,UAjDG,SAAC,GAAkC,IAAhCjT,EAA+B,EAA/BA,SACnB,EAAwDF,YACtDE,EAASI,IACTJ,GAFMQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWP,EAA9B,EAA8BA,sBAK9B,OAAIO,IAAcD,EACT,cAAC0S,EAAA,EAAD,IAIP,sBAAK1W,UAAU,uDAAf,UACE,cAAC2W,EAAA,EAAD,CAAiBnT,SAAUA,IAE3B,cAACoT,EAAA,EAAD,IAEA,qBACE5W,UAAS,+DADX,SAGE,cAAC8F,EAAA,EAAD,CACEI,cAAa,wCACbH,SACE,qBAAK/F,UAAU,yBAAf,SACE,cAAC,EAAD,CACE4U,SAAUlR,EACVF,SAAUA,MAKhBwC,UACE,sBAAKhG,UAAU,8CAAf,UACE,cAACwS,EAAA,EAAD,CAAWpH,eAAc,OAAE5H,QAAF,IAAEA,OAAF,EAAEA,EAAU4H,iBACrC,cAAC,EAAD,CAAW5H,SAAUA,OAGzByC,SACE,sBAAKjG,UAAU,aAAf,UACE,cAAC4M,EAAA,EAAD,IACA,cAACA,EAAA,EAAD","file":"static/js/22.45a29fdb.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-4\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field?.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field?.value?.length > 0\n                  ? field?.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import React from 'react'\n\nconst DashboardLayout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  firstColClass,\n  firstColStyles,\n  thirdColClass,\n  thirdColStyles,\n  mainClass = '',\n}: {\n  firstColClass?: string\n  mainClass?: string\n  firstColStyles?: any\n  firstCol?: React.ReactNode\n  thirdColClass?: string\n  thirdColStyles?: any\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n}) => {\n  return (\n    <div className=\"flex-grow pt-24 w-full px-4 md:max-w-6xl lg:max-w-7xl sm:max-w-5xl mx-auto xl:px-8 lg:flex relative\">\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 px-6 sm:px-4 lg:px-0  min-w-0 bg-gray-100 dark:bg-gray-900 xl:flex\">\n        {firstCol && (\n          <div\n            style={{ ...firstColStyles }}\n            className={`${firstColClass}  dark:bg-gray-900 xl:flex-shrink-0 xl:w-64 bg-gray-100`}\n          >\n            <div\n              className=\"h-full py-6\n          \"\n            >\n              {/* Start left column area */}\n              <div className=\"h-full  relative\" style={{ minHeight: '12rem' }}>\n                {firstCol}\n              </div>\n              {/* End left column area */}\n            </div>\n          </div>\n        )}\n\n        {secondCol && (\n          <div className=\"bg-gray-100 dark:bg-gray-900 lg:min-w-0 xl:pl-6 pl-0 lg:flex-1 \">\n            <div className=\"h-full py-6 px-0 lg:px-6 xl:px-8\">\n              {/* Start main area*/}\n              <div className=\"relative h-full \" style={{}}>\n                {secondCol}\n              </div>\n              {/* End main area */}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div\n        style={{ ...thirdColStyles }}\n        className={`${thirdColClass} bg-gray-100 dark:bg-gray-900 px-4 lg:px-0 lg:flex-shrink-0 `}\n      >\n        <div className=\"h-full pl-0 lg:pl-6  py-6 xl:pr-0 pr-6 \">\n          {/* Start right column area */}\n          <div className=\"h-full relative\" style={{ minHeight: '16rem' }}>\n            {thirdCol}\n          </div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardLayout\n","import { AiOutlineLike } from 'react-icons/ai'\nimport { IconType } from 'react-icons/lib'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineShareAlt } from 'react-icons/ai'\nimport { FiSend } from 'react-icons/fi'\n\nconst Button = ({ Icon, label }: { Icon: IconType; label: string }) => {\n  return (\n    <button className=\"flex m-2 hover:bg-gray-200 text-sm text-gray-700 dark:text-gray-400 items-center justify-center py-2 rounded-lg transition-all px-3 duration-300 dark:hover:bg-gray-700\">\n      <Icon className=\"mr-2\" />\n      {label}\n    </button>\n  )\n}\n\nconst PostBottom = () => {\n  return (\n    <div className=\"grid grid-cols-4 px-2 mb-2\">\n      <Button Icon={AiOutlineLike} label=\"Like\" />\n      <Button Icon={FaRegCommentDots} label=\"Comment\" />\n      <Button Icon={AiOutlineShareAlt} label=\"Share\" />\n      <Button Icon={FiSend} label=\"Send\" />\n    </div>\n  )\n}\n\nexport default PostBottom\n","import { useEffect, useState } from 'react'\n\nconst useOnScreen = (ref: any, rootMargin: string = '0px') => {\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIntersecting(entry.isIntersecting),\n      {\n        rootMargin,\n      }\n    )\n\n    if (ref.current) {\n      observer.observe(ref.current!)\n      // Remove the observer as soon as the component is unmounted\n    }\n    return () => {\n      observer.disconnect()\n    }\n  }, [ref])\n\n  return isIntersecting\n}\n\nexport default useOnScreen\n","import {\n  saveUnsavePost,\n  viewPost,\n  featurePost,\n  deletePost,\n} from 'apis/mutations'\nimport Dropdown from 'components/Dropdown/Dropdown'\nimport PostBottom from 'components/posts/PostBottom'\nimport { links } from 'constants/Links'\nimport useOnScreen from 'hooks/useOnScreen'\nimport { IPost, IParent } from 'interfaces/UniversalInterface'\nimport moment from 'moment'\nimport { useEffect, useState, useRef } from 'react'\nimport { FaRegBookmark, FaBookmark } from 'react-icons/fa'\nimport { useMutation } from 'react-query'\nimport { nanoid } from 'nanoid'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport {\n  AiOutlineStar,\n  AiFillStar,\n  AiOutlineLink,\n  AiOutlineEdit,\n  AiOutlineDelete,\n} from 'react-icons/ai'\nimport { useNotifications } from 'context/NotificationContext'\n\nconst Post = ({\n  post,\n  userId,\n  userData,\n}: {\n  post: IPost\n  userId: string\n  userData: IParent\n}) => {\n  const user = post?.user\n  const postId: string = post?._id?.toString()\n\n  const { mutate } = useMutation(() => viewPost(postId))\n\n  const postRef = useRef(null)\n  const isCardOnScreen = useOnScreen(postRef)\n\n  const isViewed = post?.viewedBy?.includes(userId)\n\n  const iAmOwnerOfThisPost = user?._id?.toString() === userId\n  const { setNotification } = useNotifications()\n\n  const saveMutations = useMutation(saveUnsavePost)\n  const featureMutations = useMutation(featurePost)\n  const deleteMutations = useMutation(deletePost)\n\n  useEffect(() => {\n    if (isCardOnScreen && !isViewed && !iAmOwnerOfThisPost) {\n      setTimeout(() => {\n        mutate()\n      }, 300)\n    }\n  }, [isCardOnScreen, isViewed])\n\n  const isSaved = userData?.savedPosts?.includes(postId.toString())\n  const isFeatured = userData?.featuredPosts?.includes(postId.toString())\n\n  const [saved, setSaved] = useState(isSaved)\n  const [featured, setFeatured] = useState(isFeatured)\n\n  const commonDropdownList = [\n    {\n      id: nanoid(),\n      name: saved ? 'Unsave' : 'Save for later',\n      onClick: () => {\n        if (saved) {\n          // @ts-ignore\n          saveMutations.mutate({\n            action: 'unsave',\n            postId: postId.toString(),\n          })\n          setSaved(false)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post unsaved.',\n          })\n        } else {\n          // @ts-ignore\n          saveMutations.mutate({ action: 'save', postId: postId?.toString() })\n          setSaved(true)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post saved.',\n          })\n        }\n      },\n      Icon: saved ? FaBookmark : FaRegBookmark,\n    },\n    {\n      Icon: AiOutlineLink,\n      id: nanoid(),\n      name: 'Copy link to post',\n      onClick: () => {\n        navigator.clipboard.writeText(\n          window.origin + links.postById(post?.postUrl)\n        )\n      },\n    },\n  ]\n\n  const dropdownList = [\n    ...commonDropdownList,\n    {\n      id: '3',\n      name: `Unfollow ${user?.fullName || user?.firstName}`,\n      onClick: () => {},\n    },\n  ]\n\n  // Show this if the post is mine\n  const myDropdownList = [\n    ...commonDropdownList,\n    {\n      id: '1',\n      name: 'Feature on top of profile',\n      onClick: () => {\n        if (featured) {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'unfeature',\n            postId: postId.toString(),\n          })\n          setFeatured(false)\n          setNotification({\n            show: true,\n            title: 'Post removed from featured list.',\n          })\n        } else {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'feature',\n            postId: postId.toString(),\n          })\n          setNotification({\n            show: true,\n            title: 'Post added to featured list.',\n          })\n          setFeatured(true)\n        }\n      },\n      Icon: featured ? AiFillStar : AiOutlineStar,\n    },\n    {\n      id: '4',\n      name: `Edit post`,\n      Icon: AiOutlineEdit,\n      onClick: () => {},\n    },\n    {\n      id: '5',\n      name: `Delete post`,\n      Icon: AiOutlineDelete,\n      onClick: () => {\n        deleteMutations.mutate(postId)\n      },\n    },\n  ]\n\n  return (\n    <div\n      ref={postRef}\n      className=\"rounded-lg overflow-x-hidden  dark:bg-gray-800 border border-gray-200 bg-white dark:border-gray-700 \"\n    >\n      <div className=\"flex w-full items-center justify-between px-6\">\n        <div className=\"flex  py-4\">\n          <div className=\"mr-4 flex-shrink-0\">\n            <img\n              src={\n                user?.profilePicture ? user?.profilePicture : avatarPlaceholder\n              }\n              alt=\"13RMS\"\n              className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <a\n              href={links.getProfileById(\n                user?.profileUrl,\n                user?.other?.template,\n                'public'\n              )}\n            >\n              <h4 className=\"text-base hover:underline  dark:text-white font-bold\">\n                {user?.fullName || '--'}\n              </h4>\n            </a>\n            <span className=\"text-gray-500 text-xs dark:text-gray-500\">\n              {user?.followers?.length || 0} followers{' '}\n              <span className=\"text-xs dark:text-gray-500 text-gray-500 font-medium\">\n                • {moment(post?.postedOn).fromNow()}\n              </span>\n            </span>\n          </div>\n        </div>\n        <div className=\"relative\">\n          <Dropdown list={iAmOwnerOfThisPost ? myDropdownList : dropdownList} />\n        </div>\n      </div>\n      {post?.text && (\n        <div className=\"px-6 pb-4\">\n          <p className=\"text-gray-700 dark:text-gray-400 text-sm break-words\">\n            {post?.text}\n          </p>\n        </div>\n      )}\n      {post?.links?.length > 0 &&\n        (post.links[0].type === 'image' ? (\n          <img className=\"w-full\" src={post.links[0].url} alt=\"\" />\n        ) : (\n          <video\n            controls\n            className=\"w-full\"\n            controlsList=\"nodownload\"\n            src={post.links[0].url}\n          />\n        ))}\n\n      {/* <div className=\"px-6 pt-4 pb-2\">\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #photography\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #travel\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #winter\n        </span>\n      </div> */}\n\n      <PostBottom />\n    </div>\n  )\n}\n\nexport default Post\n","import { links } from 'constants/Links'\nimport { useQuery } from 'react-query'\nimport { fetchEvents } from 'apis/queries'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  const { isFetched, isLoading, data } = useQuery('short-event-names', () =>\n    fetchEvents(true)\n  )\n\n  const shortEventsData: { _id: string; eventName: string }[] =\n    isFetched && !isLoading ? data?.data?.data : []\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\"flex flex-col\">\n            <div className=\" cursor-pointer flex  items-center justify-between\">\n              <div className=\"hover:underline \">Events</div>\n              <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n                +\n              </div>\n            </div>\n            {shortEventsData &&\n              shortEventsData.length > 0 &&\n              shortEventsData.map((ev) => (\n                <a\n                  href={links.viewEvent(ev._id)}\n                  className=\"py-2 text-xs font-medium text-gray-500 dark:text-gray-500 hover:underline cursor-pointer\"\n                >\n                  {ev.eventName}\n                </a>\n              ))}\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news • {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { createEvent, uploadMultipleImages } from 'apis/mutations'\nimport placeholder from 'assets/svg/placeholder.png'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormSelector from 'components/atoms/FormSelector'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IEvent } from 'interfaces/UniversalInterface'\nimport { isEmpty, map } from 'lodash'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { timezone } from 'values/values'\nimport * as Yup from 'yup'\n\nconst CreateEvent = ({\n  open,\n  setOpen,\n  eventData,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  eventData?: IEvent\n}) => {\n  const validationSchema = Yup.object({\n    eventName: Yup.string().required('Event Name is required').min(10).max(150),\n    eventDescription: Yup.string()\n      .required('Event Description is required')\n      .min(10)\n      .max(600),\n\n    // startTime\n  })\n\n  // @ts-ignore\n  const initialValues: IEvent = {\n    eventName: eventData?.eventName || '',\n    eventDescription: eventData?.eventDescription || '',\n    startDate: eventData?.startDate || new Date(),\n    endDate: eventData?.endDate || new Date(),\n    startTime: eventData?.startTime || '',\n    endTime: eventData?.endTime || '',\n    timezone: eventData?.timezone || '',\n  }\n\n  const formRef = useRef()\n  const { setNotification } = useNotifications()\n\n  const { mutate, isLoading, isError, error } = useMutation(createEvent, {\n    onSuccess: (data) => {\n      // console.log(data)\n      const message = data.data.message\n      const eventId = data.data.data\n      setNotification({\n        show: true,\n        title: message,\n        buttonText: 'View',\n        buttonUrl: links.viewEvent(eventId),\n      })\n    },\n  })\n\n  const [values, setValues] = useState(null)\n\n  const upload = useMutation(uploadMultipleImages, {\n    onSuccess: (a, b) => {\n      if (values) {\n        if (a.data.data && a.data.data.length) {\n          const finalImageList: any[] = map(a.data.data, (img) => img)\n\n          mutate({\n            ...values,\n            coverPhoto: finalImageList.find(\n              (img) => img.originalname === coverPhoto.name\n            )?.location,\n\n            profilePhoto: finalImageList.find(\n              (img) => img.originalname === profilePhoto.name\n            )?.location,\n          })\n        } else {\n          mutate({\n            ...values,\n          })\n        }\n        setOpen(false)\n        setCoverPhoto(null)\n        setProfilePhoto(null)\n      }\n    },\n  })\n\n  const uploadFunction = () => {\n    const fd = new FormData()\n\n    fd.append('images', profilePhoto)\n    fd.append('images', coverPhoto)\n\n    setTimeout(() => {\n      upload.mutate(fd)\n    }, 500)\n  }\n\n  const onSubmit = async (values: any) => {\n    setValues({ ...values })\n    uploadFunction()\n  }\n\n  const editMode = !isEmpty(eventData)\n\n  useEffect(() => {\n    if (editMode) {\n      setCoverPhoto(eventData.coverPicture)\n      setProfilePhoto(eventData.profilePicture)\n      setSelectedTimeZone(eventData?.timezone || timezone[0].text)\n    }\n  }, [editMode])\n\n  const profileImageSelectorRef = useRef()\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageSelectorRef = useRef()\n\n  const showFileExplorerForCover = () =>\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n\n  const [profilePhoto, setProfilePhoto] = useState<any>()\n\n  const [coverPhoto, setCoverPhoto] = useState<any>()\n\n  const [selectedTimeZone, setSelectedTimeZone] = useState(timezone[0].text)\n\n  return (\n    <Modal disablePadding setOpen={setOpen} header=\"Create event\" open={open}>\n      <div className=\" min-w-200 pb-4  max-w-200 min-h-164 max-h-164 overflow-y-auto\">\n        <div className=\"px-1\">\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={coverImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setCoverPhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={profileImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setProfilePhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            enableReinitialize={editMode}\n            innerRef={formRef}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6 \">\n              <div className=\" overflow-hidden  bg-white dark:bg-gray-900\">\n                <div className=\"relative  group\">\n                  <div className=\"absolute top-0 right-0 p-4\">\n                    <AiOutlineEdit className=\"bg-gray-100   transition-all hover:bg-gray-300 duration-300 rounded-full p-2 text-gray-700 h-8 w-8\" />\n                  </div>\n                  <img\n                    alt=\"\"\n                    onClick={() => showFileExplorerForCover()}\n                    src={\n                      coverPhoto\n                        ? editMode\n                          ? coverPhoto\n                          : URL.createObjectURL(coverPhoto)\n                        : placeholder\n                    }\n                    className=\"w-full lg:h-36 sm:h-24 object-cover h-20\"\n                  />\n                </div>\n                <div className=\"flex  relative justify-start mr-8 ml-8 -mt-12\">\n                  <img\n                    onClick={() => showFileExplorerForProfile()}\n                    alt=\"\"\n                    src={\n                      profilePhoto\n                        ? editMode\n                          ? profilePhoto\n                          : URL.createObjectURL(profilePhoto)\n                        : avatarPlaceholder\n                    }\n                    className=\" border-solid  lg:h-24 lg:w-24 h-16 w-16  border-white border-2 -mt-3\"\n                  />\n                </div>\n              </div>\n              <div className=\"px-8 space-y-4\">\n                <h3 className=\"dark:text-white text-gray-900 font-semibold \">\n                  Details\n                </h3>\n                <FormInput\n                  label=\"Event Name\"\n                  id=\"eventName\"\n                  name=\"eventName\"\n                  required\n                />\n\n                <FormSelector\n                  label=\"Timezone\"\n                  required\n                  name=\"timezone\"\n                  selectedItem={selectedTimeZone}\n                  list={timezone.map((t) => ({ name: t.text, id: t.value }))}\n                  placeholder=\"What is the purpose of this group?\"\n                />\n\n                <div className=\"flex items-center justify-between w-full gap-x-2\">\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startDate\"\n                        label=\"Start date\"\n                        type=\"date\"\n                      />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startTime\"\n                        label=\"Start time\"\n                        required\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput name=\"endDate\" label=\"End date\" type=\"date\" />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"endTime\"\n                        required\n                        label=\"End time\"\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <FormInput\n                  label=\"Description\"\n                  required\n                  id=\"eventDescription\"\n                  name=\"eventDescription\"\n                  placeholder=\"Ex. Topics, schedule, etc.\"\n                  textarea\n                  rows={2}\n                  cols={255}\n                />\n              </div>\n\n              {isError && (\n                <div className=\"px-8\">\n                  <Error errors={[error.toString()]} />\n                </div>\n              )}\n              <div className=\"flex p-4 items-center justify-end\">\n                <Button\n                  rounded=\"rounded-full\"\n                  loading={upload.isLoading || isLoading}\n                  disabled={upload.isLoading || isLoading}\n                  gradient\n                  size=\"lg\"\n                  type=\"submit\"\n                  label=\"Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default CreateEvent\n","import { addPost } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { Form, Formik } from 'formik'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport { useRef } from 'react'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { useMutation } from 'react-query'\n\nconst PostModal = ({\n  open,\n  setOpen,\n  setShowOtherModals,\n  postingIn = 'general',\n  customInId,\n}: {\n  open: boolean\n  postingIn?: IPost['postedIn']\n  customInId?: string\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  setShowOtherModals: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const initialValues = {\n    text: '',\n  }\n  const formRef = useRef()\n\n  const onSubmit = (values: { text: string }) => {\n    mutate({\n      postData: {\n        text: values.text,\n        postedIn: postingIn,\n        customInId: postingIn !== 'general' ? customInId : null,\n      },\n    })\n  }\n\n  return (\n    <Modal setOpen={setOpen} header=\"Create a post\" open={open}>\n      <div className=\" min-w-132 min-h-56 max-h-132 overflow-y-auto\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            <FormInput\n              gridClass=\"hideBorders\"\n              hideBorders\n              textClass=\"text-sm text-gray-700 dark:text-gray-100 sm:text-lg\"\n              placeholder=\"What do you want to talk about?\"\n              rows={10}\n              name=\"text\"\n              id=\"text\"\n              textarea\n            />\n            <div className=\"mt-5 m-1 sm:mt-4 flex justify-between  items-center\">\n              <div className=\"flex items-center gap-x-4\">\n                <Button\n                  gradient\n                  invert\n                  // className=\"dark:border-gray-600\"\n                  Icon={HiOutlinePhotograph}\n                  label=\"Photo\"\n                  onClick={() => {\n                    setOpen(false)\n                    setShowOtherModals('photo')\n                  }}\n                />\n                <Button\n                  gradient\n                  Icon={BsCameraVideo}\n                  // className=\"dark:border-gray-600\"\n                  bgColor=\"blue\"\n                  invert\n                  onClick={() => {\n                    setOpen(false)\n                    return setShowOtherModals('video')\n                  }}\n                  label=\"Video\"\n                />\n              </div>\n              <Button\n                gradient\n                loading={isLoading}\n                // @ts-ignore\n                disabled={formRef?.current?.values.text.length <= 0}\n                type=\"submit\"\n                label=\"Post\"\n                size=\"lg\"\n              />\n            </div>\n            {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import { addPost, uploadMediaToServer } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { nanoid } from 'nanoid'\nimport React, { useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostPhotoModal = ({\n  open,\n  setOpen,\n  isPhoto = true,\n}: {\n  open: boolean\n  isPhoto: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const [media, setMedia] = useState(null)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a) => {\n      const modifiedData = {\n        postData: {\n          postType: 'withPhoto',\n          text: altText || '',\n          links: [\n            {\n              id: nanoid(12),\n              url: a?.data?.data?.location,\n              type: isPhoto ? 'image' : 'video',\n            },\n          ],\n        },\n      }\n      mutate(modifiedData)\n    },\n  })\n\n  const postImageRef: any = useRef()\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setMedia(img)\n  }\n\n  const showFileExplorer = () => postImageRef?.current?.click()\n\n  const onCancel = () => {\n    setMedia(null)\n    setOpen(false)\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const [onAltText, setOnAltText] = useState(false)\n  const [altText, setAltText] = useState('')\n\n  const onAltTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target\n    setAltText(value)\n  }\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`Edit your ${isPhoto ? 'photo' : 'video'}`}\n      open={open}\n    >\n      <div className=\" min-w-132 max-w-132 min-h-56 max-h-132 flex items-center justify-center overflow-y-auto\">\n        {media ? (\n          <div className=\"\">\n            {onAltText ? (\n              <div className=\"px-12\">\n                <h4 className=\"mb-1 text-gray-600 dark:text-gray-500\">\n                  Alt text\n                </h4>\n                <p className=\"dark:text-gray-700 text-gray-400 mb-2\">\n                  Alt text describes images for people who have trouble seeing\n                  them. If you don’t add alt text, it may be automatically\n                  generated after you post. You can edit it anytime.\n                </p>\n                <NormalFormInput\n                  value={altText}\n                  onChange={onAltTextChange}\n                  textarea\n                  rows={6}\n                />\n                <div className=\"mt-5 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    onClick={() => {\n                      setAltText('')\n                      setOnAltText(false)\n                    }}\n                    invert\n                    label=\"Cancel\"\n                    size=\"sm\"\n                  />\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    label=\"Save\"\n                    onClick={() => {\n                      setOnAltText(false)\n                    }}\n                    size=\"sm\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div>\n                {isPhoto ? (\n                  <img\n                    className=\"w-full\"\n                    src={URL.createObjectURL(media)}\n                    alt=\"\"\n                  />\n                ) : (\n                  <video\n                    controls\n                    className=\"w-full\"\n                    controlsList=\"nodownload\"\n                    src={URL.createObjectURL(media)}\n                  />\n                )}\n              </div>\n            )}\n            <div className=\"absolute bottom-5 left-5 pt-4 mb-2 pl-4\">\n              <Button\n                onClick={() => setOnAltText(!onAltText)}\n                invert={!onAltText}\n                label=\"Alt text\"\n              />\n            </div>\n          </div>\n        ) : (\n          <Button\n            onClick={showFileExplorer}\n            label={`Select ${isPhoto ? 'image' : 'video'} to share`}\n            gradient\n            invert\n            size=\"lg\"\n          />\n        )}\n\n        {/* HIDDEN IMAGE INPUT */}\n        <input\n          // @ts-ignore\n          ref={postImageRef}\n          className=\"hidden\"\n          type=\"file\"\n          onChange={onImageSelect}\n          accept={isPhoto ? 'image/*' : 'video/*'}\n        />\n      </div>\n      <div className=\"mt-5 border-t border-gray-200 dark:border-gray-700 pt-4 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          onClick={onCancel}\n          invert\n          label=\"Cancel\"\n          size=\"lg\"\n        />\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          loading={isLoading || upload.isLoading}\n          label=\"Done\"\n          onClick={onSubmit}\n          size=\"lg\"\n        />\n      </div>\n      {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n    </Modal>\n  )\n}\n\nexport default PostPhotoModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport CreateEvent from 'components/event/CreateEvent'\nimport { IPost } from 'interfaces/UniversalInterface'\nimport PostModal from 'pages/dashboard/PostModal'\nimport PostPhotoModal from 'pages/dashboard/PostPhotoModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n  postingIn = 'general',\n  customInId,\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n  postingIn?: IPost['postedIn']\n  customInId?: string\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n  const [showOtherModals, setShowOtherModals] = useState('init')\n  const [showEventModal, setShowEventModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n        onClick={() => setShowOtherModals('photo')}\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        onClick={() => setShowOtherModals('video')}\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        onClick={() => setShowEventModal(true)}\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal\n          customInId={customInId}\n          postingIn={postingIn}\n          setShowOtherModals={setShowOtherModals}\n          open={showPostModal}\n          setOpen={setShowPostModal}\n        />\n      )}\n      {(showOtherModals === 'photo' || showOtherModals === 'video') && (\n        <PostPhotoModal\n          isPhoto={showOtherModals === 'photo'}\n          open\n          setOpen={() => setShowOtherModals('init')}\n        />\n      )}\n      <CreateEvent open={showEventModal} setOpen={setShowEventModal} />\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","import { fetchFeed } from 'apis/queries'\nimport animationData from 'assets/animation/caught-up.json'\nimport EmptyState from 'components/atoms/EmptyState'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport { usePostContext } from 'context/PostContext'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useQuery } from 'react-query'\n\nconst ListPosts = ({ userData }: { userData: IParent }) => {\n  const [skip, setSkip] = useState(0)\n\n  const [posts, setPosts] = useState([])\n\n  const { data, refetch, isLoading, isFetched, isSuccess } = useQuery(\n    'list-posts',\n    () => {\n      return fetchFeed({ limit: 10, skip })\n    },\n    {\n      onSuccess: (data) => {\n        const _posts = data?.data?.data?.posts\n        if (_posts && _posts.length > 0) {\n          setPosts([...posts, ..._posts])\n        }\n      },\n    }\n  )\n\n  const fetchMoreData = () => {\n    setSkip(skip + 10)\n    refetch()\n  }\n\n  const { newPostAdded, setNewPostAdded } = usePostContext()\n\n  useEffect(() => {\n    if (newPostAdded) {\n      refetch().then(() => {\n        setNewPostAdded(false)\n      })\n    }\n  }, [newPostAdded])\n\n  const postCount =\n    !isLoading && isFetched && isSuccess ? data?.data?.data?.count || 0 : 0\n\n  return (\n    <div className=\"\">\n      <Meta pageTitle={`(${postCount || 0}) Feed | 13RMS`} />\n      {posts && posts.length > 0 ? (\n        <InfiniteScroll\n          endMessage={\n            <div className=\"text-center\">\n              <span className=\"dark:text-gray-600 text-center text-gray-400\">\n                •\n              </span>\n            </div>\n          }\n          dataLength={postCount}\n          scrollableTarget=\"main_content\"\n          next={fetchMoreData}\n          hasMore={postCount > posts.length}\n          loader={<h4>Loading...</h4>}\n        >\n          <div className=\"grid grid-cols-1 gap-y-6\">\n            {posts.map((post) => (\n              <Post userData={userData} userId={userData._id} post={post} />\n            ))}\n          </div>\n        </InfiniteScroll>\n      ) : (\n        <EmptyState animation={animationData} title=\"You're all caught up\" />\n      )}\n    </div>\n  )\n}\n\nexport default ListPosts\n","import { fetchAvgViews } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport DiscoverCard from 'components/DiscoverButton'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { useUserContext } from 'context/UserContext'\nimport { network } from 'helpers'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { noop } from 'lodash'\nimport React, { useState } from 'react'\nimport { BsFillBookmarkFill } from 'react-icons/bs'\nimport { useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PersonalCard = ({\n  className,\n  authUser,\n  userData: user,\n}: {\n  className?: string\n  authUser: boolean\n  userData?: IParent\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const [saving, setSaving] = useState(false)\n\n  const [_image, setImage] = useState('')\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setImage(img)\n    setShowModal(true)\n  }\n\n  const { setValues } = useUserContext()\n  const { setNotification } = useNotifications()\n\n  const onSave = async () => {\n    setSaving(true)\n\n    const fd = new FormData()\n    fd.append('image', _image)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }\n\n    try {\n      const { data } = await network.post('/uploadImage', fd, config)\n\n      if (data && data.data && data.data.location) {\n        const updatedData = {\n          ...user,\n          [isCover ? 'coverPicture' : 'profilePicture']: data.data.location,\n        }\n        //@ts-ignore\n        delete updatedData.password\n\n        setValues({ ...updatedData })\n\n        await network.post('/user/update', {\n          ...updatedData,\n        })\n\n        setNotification({\n          show: true,\n          title: `${isCover ? 'Cover' : 'Profile'} photo changed successfully`,\n        })\n      }\n    } catch (error) {\n      console.error(error.message)\n    } finally {\n      setShowModal(false)\n    }\n    setSaving(false)\n  }\n\n  const { isBusiness } = useAccountType(user)\n\n  const { data } = useQuery('average-post-views', () => fetchAvgViews())\n\n  const postViews = data?.data?.data || 0\n\n  const [isCover, setIsCover] = useState(false)\n\n  const profileImageSelectorRef = React.useRef()\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    {\n      setIsCover(false)\n      /*@ts-ignore*/\n      return profileImageSelectorRef?.current?.click()\n    }\n\n  const coverImageSelectorRef = React.useRef()\n  const showFileExplorerForCover = () => {\n    setIsCover(true)\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n  }\n  const coverImageStyles =\n    'max-h-72 rounded-md sm:overflow-hidden w-full  object-cover'\n  const profileImageStyles = 'md:h-32 md:w-32 sm:h-12 sm:w-12 rounded-full'\n  return (\n    <>\n      {authUser && (\n        <Modal\n          header={`${isCover ? 'Cover' : 'Profile'} Photo`}\n          disableBackdropClose\n          open={showModal}\n          setOpen={setShowModal}\n        >\n          <div\n            className={`${\n              isCover\n                ? ' lg:min-w-256 sm:min-w-172 min-w-32'\n                : 'sm:min-w-64 sm:min-h-64'\n            }`}\n          >\n            <div\n              className={`relative ${\n                isCover\n                  ? 'sm:min-h-72 min-h-48'\n                  : 'min-h-48 flex items-center justify-center'\n              } `}\n            >\n              {_image && (\n                <img\n                  className={`shadow-xl ${\n                    isCover ? coverImageStyles : profileImageStyles\n                  }`}\n                  // @ts-ignore\n                  src={URL.createObjectURL(_image)}\n                  alt=\"\"\n                />\n              )}\n            </div>\n            <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={saving}\n                disabled={saving}\n                onClick={onSave}\n                type=\"submit\"\n                label=\"Save\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* HIDDEN IMAGE INPUT -- For Profile Picture*/}\n      <input\n        // @ts-ignore\n        ref={profileImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n      {/* HIDDEN IMAGE INPUT -- For Cover Picture*/}\n      <input\n        // @ts-ignore\n        ref={coverImageSelectorRef}\n        className=\"hidden\"\n        type=\"file\"\n        onChange={onImageSelect}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {/* ------------ Profile Card ---------*/}\n      <div\n        className={`rounded-lg   border dark:border-gray-700 transition-all  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800`}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${\n              user?.coverPicture\n                ? user?.coverPicture\n                : 'https://source.unsplash.com/1600x900/?nature,water'\n            })`,\n          }}\n          onClick={() => (authUser ? showFileExplorerForCover() : noop)}\n          className=\"w-full lg:h-20 cursor-pointer sm:h-24 bg-center bg-no-repeat bg-cover h-20\"\n        />\n        <div className=\"flex justify-center -mt-8\">\n          <img\n            alt=\"\"\n            title=\"change photo\"\n            onClick={() => (authUser ? showFileExplorerForProfile() : noop)}\n            src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n            className=\"rounded-full cursor-pointer border-solid lg:h-16 lg:w-16 h-12 w-12  border-white border-2 -mt-3\"\n          />\n        </div>\n        <div className=\"text-center px-3 pb-6 pt-2\">\n          <a\n            href={links.getProfile(user, true)}\n            className=\"dark:text-white  text-gray-900 text-base font-bold \"\n          >\n            {user.fullName}\n          </a>\n          <p className=\"text-sm font-medium dark:text-gray-500 text-gray-500 \">\n            {isBusiness ? user.business.name : user.company.jobTitle}\n          </p>\n        </div>\n        <div className=\"flex gap-y-2  flex-col border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Who viewed your profile</h6>\n            <span className=\"text-link font-semibold\">{user.pwvpCount}</span>\n          </div>\n          <div className=\"flex transition-all item-center px-4 py-1 cursor-pointer dark:hover:bg-gray-700 justify-between\">\n            <h6 className=\"\">Views of your post</h6>\n            <span className=\"text-link font-semibold\">{postViews}</span>\n          </div>\n        </div>\n        <a\n          href={links.myItems()}\n          className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-start px-4 border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\"\n        >\n          <BsFillBookmarkFill className=\"mr-2\" />\n          <p>My Items</p>\n        </a>\n      </div>\n      {/* ------------ Profile Card Ends ---------*/}\n\n      {/* // ~~~~~~~~~~~~~~~~~~~Discover Cards ~~~~~~~~~~~~~~~~~~~~ // */}\n      <DiscoverCard />\n    </>\n  )\n}\nexport default PersonalCard\n","import Loading from 'components/Loading'\nimport Sidebar from 'components/Sidebar'\nimport SideCard from 'components/SideCard'\nimport useUser from 'hooks/useUser'\nimport { IParent, NavProps } from 'interfaces/UniversalInterface'\nimport ListPosts from 'pages/dashboard/ListPosts'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport PersonalCard from './AboutMe'\nimport PostInput from './PostInput'\n\ninterface DashboardProps extends NavProps {\n  userData: IParent\n}\n\nconst Dashboard = ({ userData }: DashboardProps) => {\n  const { isFetched, isLoading, iAmOwnerOfThisProfile } = useUser(\n    userData._id,\n    userData\n  )\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n\n      <Sidebar />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`max-h-152 lg:block  xl:block w-full  `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              <PersonalCard\n                authUser={iAmOwnerOfThisProfile}\n                userData={userData}\n              />\n              {/* <GroupList secondary userId={userData._id} /> */}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              <PostInput profilePicture={userData?.profilePicture} />\n              <ListPosts userData={userData} />\n            </div>\n          }\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n            </div>\n          }\n        />\n      </div>\n    </div>\n    // </Sidebar>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}
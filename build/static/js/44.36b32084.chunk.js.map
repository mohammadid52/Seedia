{"version":3,"sources":["components/atoms/Modal.tsx","components/animation/AnimatedDiv.tsx","components/Copyright.jsx","containers/Layout.tsx","pages/account/other/ChooseTemplate.tsx"],"names":["Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","AnimatedDiv","delay","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","navigation","name","href","Copyright","year","Date","getFullYear","map","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","settings","description","ChooseTemplate","user","useState","selected","setSelected","useEffect","other","accountFilled","console","log","history","push","links","FEED","redirection","useHistory","loading","setLoading","errors","setErrors","setValues","useUserContext","onNext","a","token","getAccessToken","updatedData","accountFinishedStep","template","network","post","headers","Authorization","window","location","reload","error","idx","showModal","setShowModal","maxWidth","process","value","onChange","Label","setting","settingIdx","Option","checked","classNames","active","e","stopPropagation","fullWidth","label","gradient","length"],"mappings":"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","file":"static/js/44.36b32084.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block overflow-visible align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-2\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","import { RadioGroup } from '@headlessui/react'\nimport Error from 'components/alerts/Error'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useUserContext } from 'context/UserContext'\nimport { getAccessToken, network } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { classNames } from 'utils/classNames'\n\nconst settings = [\n  {\n    name: 'Template One',\n    description: '',\n  },\n  {\n    name: 'Template Two',\n    description: '',\n  },\n]\n\nconst ChooseTemplate = ({ user }: { user: IParent }) => {\n  const [selected, setSelected] = useState(settings[0])\n\n  const redirection = () => {\n    if (user) {\n      if (!user?.other?.accountFilled) {\n        if (user && user.other) {\n          console.log('get the accountType and redirect as per account type')\n          // get the accountType and redirect as per account type\n          return\n        }\n      } else {\n        //  redirect to dashboard\n        console.log('redirect to dashboard')\n        return history.push(links.FEED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    redirection()\n  }, [])\n\n  const history = useHistory()\n\n  const [loading, setLoading] = useState(false)\n\n  const [errors, setErrors] = useState<string[]>([])\n\n  const { setValues } = useUserContext()\n\n  const onNext = async () => {\n    if (selected) {\n      try {\n        setLoading(true)\n\n        const token = getAccessToken()\n\n        const updatedData = {\n          ...user,\n          other: {\n            ...user.other,\n            accountFilled: true,\n            accountFinishedStep: 'chooseTemplate',\n            template: selected?.name === 'Template One' ? 1 : 2,\n          },\n        }\n\n        await network.post(\n          '/user/update',\n          {\n            ...updatedData,\n          },\n          {\n            headers: { Authorization: token },\n          }\n        )\n        setValues({ ...updatedData })\n\n        setErrors([])\n        window.location.reload()\n        history.push(links.FEED)\n      } catch (error) {\n        setErrors(['Oops! Something went wrong'])\n        console.error(error)\n        setErrors([])\n      } finally {\n        setLoading(false)\n      }\n    } else {\n      setErrors(['Please select a template'])\n    }\n  }\n\n  const [showModal, setShowModal] = useState({ show: false, idx: 1 })\n\n  return (\n    <div>\n      <Modal\n        open={showModal.show}\n        disableBackdropClose={false}\n        setOpen={() => setShowModal({ show: false, idx: 1 })}\n        header={'Preview'}\n      >\n        <div className=\"max-h-screen\" style={{ maxWidth: '100vw' }}>\n          <img\n            alt=\"\"\n            src={process.env.PUBLIC_URL + `/template${showModal.idx}.png`}\n            className=\"h-full rounded-xl w-full\"\n          />\n        </div>\n      </Modal>\n      <Layout title=\"Choose profile template\" subtitle=\"\">\n        <AnimatedDiv className=\"mt-4 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white dark:border-gray-700 border border-white dark:bg-gray-900 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n            <RadioGroup value={selected} onChange={setSelected}>\n              <RadioGroup.Label className=\"sr-only\">\n                Privacy setting\n              </RadioGroup.Label>\n              <div className=\"bg-white dark:bg-gray-900 rounded-md space-y-4\">\n                {settings.map((setting, settingIdx) => (\n                  <RadioGroup.Option\n                    key={setting.name}\n                    value={setting}\n                    className={({ checked }) =>\n                      classNames(\n                        checked\n                          ? 'bg-pink-50 dark:bg-gray-900 rounded-md dark:border-pink-700 border-pink-200 z-10'\n                          : 'border-gray-200 dark:border-gray-700 rounded-md',\n                        'relative items-center justify-between border p-4 transition-all duration-200 flex overflow-hidden cursor-pointer focus:outline-none'\n                      )\n                    }\n                  >\n                    {({ active, checked }) => (\n                      <>\n                        <div className=\"flex items-center justify-center\">\n                          <span\n                            className={classNames(\n                              checked\n                                ? 'bg-pink-600 border-transparent'\n                                : 'bg-white border-gray-300',\n                              active\n                                ? 'ring-2 ring-offset-2 ring-pink-500'\n                                : '',\n                              'h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center'\n                            )}\n                            aria-hidden=\"true\"\n                          >\n                            <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\n                          </span>\n                          <div className=\"ml-3 flex flex-col items-center justify-between\">\n                            <RadioGroup.Label\n                              as=\"span\"\n                              className={classNames(\n                                checked\n                                  ? 'gradient-text'\n                                  : 'dark:text-white text-gray-900',\n                                'block text-sm font-medium mb-2'\n                              )}\n                            >\n                              {setting.name}\n                            </RadioGroup.Label>\n                          </div>\n                        </div>\n                        <div\n                          onClick={(e: any) => {\n                            e.stopPropagation()\n                            setShowModal({ show: true, idx: settingIdx + 1 })\n                          }}\n                          className=\"dark:text-gray-400 text-xs\"\n                        >\n                          See Preview\n                          {/* <img\n                            alt=\"\"\n                            src={\n                              process.env.PUBLIC_URL +\n                              `/template${settingIdx + 1}.png`\n                            }\n                            className=\"h-8 w-8\"\n                          /> */}\n                        </div>\n                      </>\n                    )}\n                  </RadioGroup.Option>\n                ))}\n              </div>\n            </RadioGroup>\n            <Button\n              loading={loading}\n              fullWidth\n              label=\"Next\"\n              className=\"mt-4\"\n              gradient\n              onClick={onNext}\n            />\n            <div className=\"mt-4\">\n              {errors.length > 0 && <Error errors={errors} />}\n            </div>\n          </div>\n        </AnimatedDiv>\n      </Layout>\n    </div>\n  )\n}\n\nexport default ChooseTemplate\n"],"sourceRoot":""}
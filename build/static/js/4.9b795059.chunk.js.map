{"version":3,"sources":["../node_modules/lodash/map.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../../../src/hooks/use-tree-walker.ts","../../../src/hooks/use-focus-trap.ts","../../../src/hooks/use-inert-others.ts","../../../src/internal/portal-force-root.tsx","../../../../src/components/portal/portal.tsx","../../../src/internal/stack-context.tsx","../../../../src/components/dialog/dialog.tsx","../../../../src/components/menu/menu.tsx","../../../../src/components/radio-group/radio-group.tsx","../../../src/hooks/use-flags.ts"],"names":["arrayMap","require","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","baseEach","isArrayLike","index","result","Array","length","value","key","baseForOwn","createBaseEach","eachFunc","fromRight","iterable","Object","useTreeWalker","container","accept","walk","enabled","acceptRef","useRef","walkRef","useEffect","useIsoMorphicEffect","acceptNode","walker","document","NodeFilter","Features","useFocusTrap","features","All","initialFocus","containers","restoreElement","window","previousActiveElement","mounted","useIsMounted","featuresRestoreFocus","Boolean","featuresInitialFocus","focusElement","activeElement","focusIn","Focus","FocusResult","Error","useWindowEvent","event","Keys","allContainers","Set","previous","toElement","contains","interactables","originals","inert","element","restore","original","ForcePortalRootContext","createContext","ForcePortalRoot","props","force","usePortalTarget","forceInRoot","useContext","groupTarget","useState","existingRoot","root","target","setTarget","DEFAULT_PORTAL_TAG","Portal","passthroughProps","ready","useServerHandoffComplete","createPortal","render","defaultTag","name","DEFAULT_GROUP_TAG","PortalGroupContext","StackMessage","StackContext","StackProvider","children","onUpdate","type","parentUpdate","notify","useCallback","args","DialogStates","ActionTypes","reducers","state","action","titleId","id","DialogContext","useDialogContext","component","context","err","Dialog","stateReducer","match","DialogRenderFeatures","DialogRoot","forwardRefWithAs","open","onClose","rest","nestedDialogCount","setNestedDialogCount","usesOpenClosedState","useOpenClosed","State","internalDialogRef","dialogRef","useSyncRefs","hasOpen","hasOnClose","dialogState","visible","useReducer","descriptionId","dispatch","close","setTitleId","hasNestedDialogs","hasParentDialog","position","parent","FocusTrapFeatures","leaf","child","interactable","useInertOthers","overflow","paddingRight","scrollbarWidth","observer","IntersectionObserver","entries","entry","useDescriptions","describedby","DescriptionProvider","useId","contextBag","useMemo","slot","Open","propsWeControl","ref","role","onClick","onKeyDown","message","count","React","Overlay","overlayRef","handleClick","isDisabledReactIssue7711","Title","Description","MenuStates","activeItemIndex","menuState","Closed","calculateActiveIndex","resolveItems","resolveActiveIndex","resolveId","item","resolveDisabled","searchQuery","items","dataRef","nextItems","currentActiveItem","idx","a","MenuContext","useMenuContext","Menu","DEFAULT_MENU_TAG","reducerBag","buttonRef","createRef","itemsRef","CloseMenu","isFocusableElement","FocusableMode","Button","d","useDisposables","handleKeyDown","OpenMenu","focus","First","Last","handleKeyUp","preventScroll","onKeyUp","ItemsRenderFeatures","Items","searchDisposables","node","disposables","Next","Previous","ClearSearch","tabIndex","DEFAULT_ITEM_TAG","Item","disabled","active","block","bag","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","options","propsRef","radio","RadioGroupContext","useRadioGroupContext","RadioGroup","onChange","passThroughProps","useLabels","labelledby","LabelProvider","radioGroupRef","firstOption","option","containsCheckedOption","triggerChange","nextValue","nextOption","all","activeOption","registerOption","RegisterOption","api","change","OptionState","Option","optionRef","initialFlags","flags","setFlags","addFlag","hasFlag","removeFlag","toggleFlag","useFlags","radioGroupDisabled","radioGroupValue","handleBlur","isFirstOption","isDisabled","checked","undefined","onBlur"],"mappings":"yFAAA,IAAIA,EAAWC,EAAQ,KACnBC,EAAeD,EAAQ,KACvBE,EAAUF,EAAQ,KAClBG,EAAUH,EAAQ,IAiDtBI,EAAOC,QALP,SAAaC,EAAYC,GAEvB,OADWJ,EAAQG,GAAcP,EAAWG,GAChCI,EAAYL,EAAaM,EAAU,M,oBCjDjD,IAAIC,EAAWR,EAAQ,KACnBS,EAAcT,EAAQ,KAoB1BI,EAAOC,QAVP,SAAiBC,EAAYC,GAC3B,IAAIG,GAAS,EACTC,EAASF,EAAYH,GAAcM,MAAMN,EAAWO,QAAU,GAKlE,OAHAL,EAASF,GAAY,SAASQ,EAAOC,EAAKT,GACxCK,IAASD,GAASH,EAASO,EAAOC,EAAKT,MAElCK,I,oBClBT,IAAIK,EAAahB,EAAQ,KAWrBQ,EAViBR,EAAQ,IAUdiB,CAAeD,GAE9BZ,EAAOC,QAAUG,G,oBCbjB,IAAIC,EAAcT,EAAQ,KA+B1BI,EAAOC,QArBP,SAAwBa,EAAUC,GAChC,OAAO,SAASb,EAAYC,GAC1B,GAAkB,MAAdD,EACF,OAAOA,EAET,IAAKG,EAAYH,GACf,OAAOY,EAASZ,EAAYC,GAM9B,IAJA,IAAIM,EAASP,EAAWO,OACpBH,EAAQS,EAAYN,GAAU,EAC9BO,EAAWC,OAAOf,IAEda,EAAYT,MAAYA,EAAQG,KACa,IAA/CN,EAASa,EAASV,GAAQA,EAAOU,KAIvC,OAAOd,K,+FCjBKgB,K,IACdC,cACAC,WACAC,S,IACAC,mBAAUA,GAAA,EAONC,EAAYC,iBAAhB,GACIC,EAAUD,iBAAd,GAEAE,qBAAU,WACRH,YACAE,cACC,CAACL,EAHJM,IAKAC,aAAoB,WAClB,MACA,EAQA,IANA,IAAIP,EAASG,EAAb,QACIF,EAAOI,EAAX,QAEIG,EAAaX,OAAA,QAAc,mBAAuBG,EAAvB,KAAqC,CAAEQ,WAAYR,IAC9ES,EAASC,4BAAqCC,WAArCD,gBAAb,GAEOD,EAAP,YAA0BR,EAAKQ,EAALR,eACzB,CAACF,EAAWG,EAASC,EAXxBI,M,uECjBUK,E,gHAoBIC,EACdd,EACAe,oBAAqBF,EAASG,K,iBAO1B,KALFC,iBACAC,eAMEC,EAAiBd,iBACD,qBAAXe,OAA0BT,SAAjC,cADF,MAGIU,EAAwBhB,iBAA5B,MACIiB,EAAUC,cAEVC,EAAuBC,QAAQV,EAAWF,EAA9C,cACIa,EAAuBD,QAAQV,EAAWF,EAA9C,cAGAN,qBAAU,WACR,IAEAY,UAAyBR,SAAzBQ,iBACC,CAJHZ,IAOAA,qBAAU,WACR,KAEA,OAAO,WACLoB,YAAaR,EAAbQ,SACAR,kBAED,CAPHZ,IAUAA,qBAAU,WACR,MACKP,EAAL,SAEA,IAAI4B,EAAgBjB,SAApB,cAEA,SAAIM,OAAJ,EAAIA,EAAJ,SACE,IAAI,MAAAA,OAAA,EAAAA,EAAA,WAAJ,EAA6C,YAC3CI,kBAGG,GAAIrB,mBAAJ,GAA+C,YACpDqB,aAKF,SAAIJ,OAAJ,EAAIA,EAAJ,QACEU,YAAaV,EAAbU,cAEA,GAAIE,YAAQ7B,EAAD,QAAoB8B,IAA3BD,SAA4CE,IAAhD,MACE,MAAM,IAAIC,MAAV,4DAIJX,UAAgCV,SAAhCU,iBACC,CAACrB,EAAWiB,EA1BfV,IA6BA0B,YAAe,WAAW,SAAAC,GAClBnB,EAAWF,EAAjB,SAEKb,EAAL,SACIkC,QAAcC,IAAlB,MAEAD,mBAGEL,YACE7B,EADK,SAEJkC,WAAiBJ,IAAjBI,SAAkCJ,IAAnC,MAAiDA,IAFnDD,cAGME,IAJR,UAMEV,UAAgCV,SAAhCU,mBAKJY,YAAe,SAEb,SAAAC,GACE,GAAMnB,EAAWF,EAAjB,WAEA,IAAIuB,EAAgB,IAAIC,IAAJ,MAAQnB,OAAR,EAAQA,EAA5B,SAGA,GAFAkB,SAEKA,EAAL,MAEA,IAAIE,EAAWjB,EAAf,QACA,MACKC,EAAL,SAEA,IAAIiB,EAAYL,EAAhB,OAEIK,GAAaA,aAAjB,aAiBN,SAAkBrB,EAAlB,GACE,0CAAkC,OAChC,YADgC,QAChC,gBAAIlB,WAAJ,GAA0C,OAAO,EAGnD,SArBWwC,CAASJ,EAAd,IACEF,mBACAA,oBACAP,iBAEAN,YACAM,gBAGFA,YAAaN,EAAbM,eA1BNM,IA1GF,SAAYpB,GAEVA,mBAGAA,mCAGAA,yBAGAA,6BAGAA,oCAGAA,kBAjBF,CAAYA,MAAZ,K,YCTI4B,EAAgB,IAApB,IACIC,EAAY,IAAhB,IAEA,SAASC,EAAMC,GACbA,qCAEAA,WAGF,SAASC,EAAQD,GACf,IAAIE,EAAWJ,MAAf,GACA,IAEA,OAAII,iBAAkCF,kBAAtC,eACKA,6BAAoCE,EAApCF,gBAELA,QAAgBE,EAAhBF,OCXF,IAAIG,EAAyBC,yBAA7B,G,SAWgBC,EAAgBC,GAC9B,OACE,kBAACH,EAAD,UAAiCxD,MAAO2D,EAAMC,OAC3CD,EAFL,U,YCDF,SAASE,IACP,IAAIC,EDTGC,qBAAP,GCUIC,EAAcD,qBAAlB,G,EAC0BE,oBAAS,WAEjC,IAAKH,GAAL,OAAoBE,EAAsB,OAAO,KAGjD,wBAAWnC,OAAwB,OAAO,KAC1C,IAAIqC,EAAe9C,wBAAnB,0BACA,KAAkB,OAAO8C,EAEzB,IAAIC,EAAO/C,uBAAX,OAEA,OADA+C,8CACO/C,0BAAP,MAXGgD,OAAQC,OAoBb,OANArD,qBAAU,WACR,GACA,OAAIgD,GACJK,EAAUL,EAAVK,WACC,CAACL,EAAaK,EAJjBrD,IAMA,EAKF,IAAIsD,EAAJ,W,SAGgBC,EACdZ,GAEA,IAAIa,EAAJ,EACIJ,EAASP,IACRR,EAAWY,oBAAgC,iBAC5B,qBAAXpC,OAAyB,KAAOT,uBADO,UAA3CiC,GAIDoB,EAAQC,cAoBZ,OAlBAzD,aAAoB,WAClB,MACA,EAIA,OAFAmD,iBAEO,WAM8B,MALnC,IACA,IAEAA,iBAEIA,qBAAJ,IACE,SAAAA,EAAA,8BAAAA,SAGH,CAACA,EAhBJnD,IAkBA,GAEQmD,GAAD,EAEHO,uBACEC,YAAO,CAAEjB,MAAF,EAA2BkB,WAA3B,EAA2DC,KAAM,WAH9E,GAFmB,KAYrB,IAAIC,EAAJ,WAGIC,EAAqBvB,wBAAzB,MAsBAc,QApBA,Y,IAKQH,EAAgCT,EAAhCS,OAAWI,cAAqBb,cAEtC,OACE,kBAACqB,EAAD,UAA6BhF,MAAOoE,GACjCQ,YAAO,CACNjB,MADM,EAENkB,WAFM,EAGNC,KAAM,oB,ICxFFG,E,ECiBZ,EASA,E,iBD7BIC,EAAezB,yBAAwB,e,SAY3B0B,K,IACdC,aACAC,aACAC,SACAjC,YAOIkC,EAdGxB,qBAAP,GAgBIyB,EAASC,uBACX,W,2BAAIC,6CAEFL,2BAGAE,oBAEF,CAACA,EARH,IAgBA,OALAtE,aAAoB,WAElB,OADAuE,EAAOP,EAAD,MAANO,GACO,kBAAMA,EAAOP,EAAD,SAAZ,MACN,CAACO,EAAQF,EAHZrE,IAKO,kBAACiE,EAAD,UAAuBlF,MAAOwF,GAArC,GAxCFN,6BAEA,SAAYD,GACVA,iBACAA,uBAFF,CAAYA,MAAZ,KCiBA,SAAKU,GACHA,mBACAA,uBAFF,CAAKA,MAAL,KASA,SAAKC,GACHA,+BADF,CAAKA,MAAL,KAMA,IAAIC,IAAQ,MAMTD,EANS,0BAOR,OAAIE,YAAkBC,EAAtB,GAAwCD,EACxC,kBAAmBE,QAASD,EAAOE,MARvC,GAYIC,EAAgBzC,wBAApB,MAaA,SAAS0C,EAAiBC,GACxB,IAAIC,EAAUtC,qBAAd,GACA,UAAIsC,EAAkB,CACpB,IAAIC,EAAM,IAAI7D,MAAM,IAAV,8BAAmD8D,EAAnD,YAAV,kBAEA,MADI9D,MAAJ,mBAA6BA,6BAC7B,EAEF,SAGF,SAAS+D,EAAaV,EAAtB,GACE,OAAOW,YAAMV,EAAD,SAAZ,GAbFG,8BAkBA,IAYIQ,EAAuBpF,mBAA0BA,IAArD,OAEIqF,EAAaC,aAAiB,c,IAewB,EAJlDC,EAAyClD,EAAzCkD,KAAMC,EAAmCnD,EAAnCmD,QAASpF,EAA0BiC,EAA1BjC,aAAiBqF,cAASpD,qC,EACCM,mBAAS,GAApD+C,OAAmBC,OAEpBC,EAAsBC,mBACtBN,OAAJ,OAA0BK,IAExBL,EAAOJ,YAAMS,IAAD,MACTE,IADS,WAETA,IAFS,WAAZP,KAMF,IAAIlF,EAAab,iBAAkD,IAAnE,KACIuG,EAAoBvG,iBAAxB,MACIwG,EAAYC,YAAYF,EAA5B,GAGIG,EAAU7D,0BAAd,OAA8CuD,EAC1CO,EAAa9D,iBAAjB,WACA,IAAK6D,IAAL,EACE,MAAM,IAAI/E,MAAV,kFAKF,MACE,MAAM,IAAIA,MAAV,8EAKF,MACE,MAAM,IAAIA,MAAV,8EAKF,sBAAWoE,EACT,MAAM,IAAIpE,MAAM,0FAAhB,GAKF,uBAAWqE,EACT,MAAM,IAAIrE,MAAM,8FAAhB,GAIF,IAAIiF,EAAcb,EAAOlB,EAAH,KAAuBA,EAA7C,OACIgC,EACF,OAAIT,EACKA,IAAwBE,IAA/B,KAGKM,IAAgB/B,EAAvB,K,EAGsBiC,qBAAWpB,EAAc,CAC/CR,QAD+C,KAE/C6B,cAAe,OAFZ/B,OAAOgC,OAKRC,EAAQtC,uBAAY,kBAAMqB,GAAN,KAAsB,CAA9C,IAEIkB,EAAavC,uBACf,mBAAuBqC,EAAS,CAAExC,KAAMM,EAAR,WAAgCK,SAChE,CAFF,IAMIrF,EADQ8D,eACWgD,IAAgB/B,EAAvC,KACIsC,EAAmBjB,EAAvB,EACIkB,EAAJ,OAAsBnE,wBAIlBoE,GAAYF,EAAhB,SAAmC,OAEnC1G,EAAa,EAEXX,EACI6F,YAAM0B,GAAU,CACdC,OAAQC,EADM,aAEdC,KAAMD,EAAkB5G,MAE1B4G,EAPM,KAQV,CAAE3G,aAAF,EAAgBC,e,SJrLlBlB,EACAG,mBAAmB,GAEnBK,aAAoB,WAClB,MACKR,EAAL,SAEA,IAAI4C,EAAU5C,EAAd,QAGAyC,SAGA,wBAAqBC,EAArB,uBAAuC,KAA9BI,EAA8B,QACjCA,WAAJ,KACED,KACAH,EAAS,OAATA,IA0BJ,OArBA/B,+CAA8C,SAAAmH,GAC5C,GAAMA,aAAN,aAGA,0CAAwC,KAA/BC,EAA+B,QACtC,GAAID,WAAJ,GAAkC,OAIpC,IAAIrF,SACFC,QAAqB,CACnB,cAAeoF,eADI,eAGnBnF,MAAOmF,EAAMnF,QAIfA,UAIG,WAML,GAJAF,EAAa,OAAbA,GAIIA,OAAJ,EAEE9B,+CAA8C,SAAAmH,GAC5C,GAAMA,aAAN,cAGIpF,MAAJ,IAGA,0CAAwC,KAA/BqF,EAA+B,QACtC,GAAID,WAAJ,GAAkC,OAGpCpF,QAAqB,CACnB,cAAeoF,eADI,eAGnBnF,MAAOmF,EAAMnF,QAIfA,cAGF,wBAAoBD,EAApB,uBAAsC,KAA7BE,EAA6B,QAEpCC,EAFoC,GAKpCH,EAAS,OAATA,QAIL,CA7EHlC,IIoLAwH,CAAepB,IAAmBY,GAAmBrH,GAGrD8B,YAAe,aAAa,SAAAC,G,MACtByB,EAASzB,EAAb,OAEI+E,IAAgB/B,EAApB,OACA,IACA,SAAI0B,EAAJ,gBAAIA,WAAJ,KAEAU,QAIF/G,qBAAU,WACR,GAAI0G,IAAgB/B,EAApB,OACA,GAEA,IAAI+C,EAAWtH,+BAAf,SACIuH,EAAevH,+BAAnB,aAEIwH,EAAiB/G,kBAAoBT,yBAAzC,YAKA,OAHAA,iDACAA,4CAAiDwH,EAAjDxH,KAEO,WACLA,0CACAA,kDAED,CAACsG,EAhBJ1G,IAmBAA,qBAAU,WACR,GAAI0G,IAAgB/B,EAApB,MACK0B,EAAL,SAEA,IAAIwB,EAAW,IAAIC,sBAAqB,SAAAC,GACtC,0CAA2B,KAAlBC,EAAkB,QAEvBA,gCACAA,wBADAA,IAEAA,4BAHF,IAIEA,6BAEAjB,QAON,OAFAc,UAAiBxB,EAAjBwB,SAEO,kBAAMA,EAAN,iBACN,CAACnB,EAAaL,EApBjBrG,I,OAsByCiI,cAApCC,SAAaC,SAEdlD,GAAK,qBAAqBmD,cAE1BC,GAAaC,mBACf,iBAAM,CAAC,CAAE5B,YAAF,EAAeK,MAAf,EAAsBC,cAA7B,KACA,CAACN,EAAa5B,EAAOiC,EAFvB,IAKIwB,GAAOD,mBAA6B,iBAAO,CAAEzC,KAAMa,IAAgB/B,EAAa6D,QAAS,CAA7F,IAIIC,GAAiB,CACnBC,IADmB,EAEnBzD,GAFmB,GAGnB0D,KAHmB,SAInB,aAAcjC,IAAgB/B,EAAhB+B,WAJK,EAKnB,kBAAmB5B,EALA,QAMnB,mBANmB,GAOnB8D,QAPmB,YAQjBjH,qBAIFkH,UAZmB,YAablH,QAAcC,IAAlB,QACI8E,IAAgB/B,EAApB,OACA,IACAhD,mBACAA,oBACAoF,QAGAvD,GAAJ,EAEA,OACE,qBACEc,KAAK,SACLjC,QAASgE,EACThC,SAAUI,uBAAY,gB,MACpB,WAAIH,GAEJmB,YAAMqD,IAAD,MACF7E,EADE,gBAEDtD,iBACAsF,GAAqB,SAAA8C,GAAK,OAAIA,EAAJ,MAHzB,EAKF9E,EALE,mBAMDtD,iBACAsF,GAAqB,SAAA8C,GAAK,OAAIA,EAAJ,MAP9BtD,MAHmB,KAerB,qBAAiB7C,OAAO,GACtBoG,yBACE,kBAAC9D,EAAD,UAAwBlG,MAAOqJ,IAC7B,kBAAC9E,EAAD,OAAcH,OAAQiD,GACpB,qBAAiBzD,OAAO,GACtB,sBAAqB2F,KAAMA,GAAMzE,KAAK,sBACnCF,YAAO,CACNjB,MAAO,OAAF,IAAE,CAAF,MADC,IAEN4F,KAFM,GAGN1E,WAxOpB,MAyOoBrD,SAJM,EAKNmG,QALM,EAMN7C,KAAM,qBAoBtBmF,EAAUrD,aAAiB,SAASqD,EAAT,K,MAGE9D,EAAiB,CAACI,EAAD,YAAqB0D,EAArB,WAAD,M,GAAxCvC,gBAAaK,UAChBmC,EAAa3C,YAAjB,GAEItB,EAAK,6BAA6BmD,cAElCe,EAAc1E,uBAChB,YACE,GAAI2E,YAAyBzH,EAA7B,eAAmD,OAAOA,EAAP,iBACnDA,mBACAA,oBACAoF,MAEF,CAPF,IAUIwB,EAAOD,mBAA8B,iBAAO,CAAEzC,KAAMa,IAAgB/B,EAAa6D,QAAS,CAA9F,IAGIC,EAAiB,CACnBC,IADmB,EAEnBzD,GAFmB,EAGnB,eAHmB,EAInB2D,QAASO,GAEP3F,EAAJ,EAEA,OAAOI,YAAO,CACZjB,MAAO,OAAF,IAAE,CAAF,KADO,GAEZ4F,KAFY,EAGZ1E,WAtCJ,MAuCIC,KAAM,sB,IAwCCyB,EAAShG,OAAA,SAA0B,CAAE0J,QAAF,EAAWI,MA5BzD,SAASA,EAAT,G,MAGsClE,EAAiB,CAACI,EAAD,YAAqB8D,EAArB,WAAD,M,GAA7C3C,gBAAaM,eAEhB/B,EAAK,2BAA2BmD,cAEpCpI,qBAAU,WAER,OADAgH,KACO,kBAAMA,EAAN,SACN,CAAC/B,EAHJjF,IAKA,IAAIuI,EAAOD,mBAA4B,iBAAO,CAAEzC,KAAMa,IAAgB/B,EAAa6D,QAAS,CAA5F,IAGIC,EAAiB,CAAExD,MACnBzB,EAAJ,EAEA,OAAOI,YAAO,CACZjB,MAAO,OAAF,IAAE,CAAF,KADO,GAEZ4F,KAFY,EAGZ1E,WA3BJ,KA4BIC,KAAM,kBAMsDwF,mB,yEChYhE,EAgBA,E,wIAhBA,SAAKC,GACHA,mBACAA,uBAFF,CAAKA,MAAL,KAgBA,SAAK3E,GACHA,2BACAA,6BAEAA,2BACAA,uBACAA,iCACAA,mCACAA,uCARF,CAAKA,MAAL,KAqBA,IAAIC,IAAQ,MAMTD,EANS,uBAOR,OAAIE,cAAoByE,EAAxB,OAAkDzE,EAClD,kBAAmB0E,gBAAnB,KAA0CC,UAAWF,EAAWG,UARxD,EAUT9E,EAVS,sBAWR,OAAIE,cAAoByE,EAAxB,KAAgDzE,EAChD,kBAAmB2E,UAAWF,EAAWf,QAZjC,EAcT5D,EAdS,UAcc,cACtB,IAAI4E,EAAkBG,YAAqB5E,EAAQ,CACjD6E,aAAc,kBAAM9E,EAAN,OACd+E,mBAAoB,kBAAM/E,EAAN,iBACpBgF,UAAW,SAAAC,GAAI,OAAIA,EAAJ,IACfC,gBAAiB,SAAAD,GAAI,OAAIA,kBAAJ,YAGvB,MAAIjF,oBAA4BA,oBAAhC,EAAkFA,EAClF,kBAAmBmF,YAAnB,GAAoCT,qBAvB5B,EAyBT5E,EAzBS,QAyBY,cACpB,IAAIqF,EAAcnF,cAAoBC,QAAtC,cACIU,EAAQX,EAAA,iBACV,SAAAiF,GAAI,aACF,SAAAA,EAAA,qDAA4DA,kBAD1D,YAIN,OAAItE,OAAgBA,IAAUX,EAA9B,gBAA4D,OAAP,IAAO,CAAP,MAAmBmF,gBACxE,kBAAmBA,YAAnB,EAAgCT,gBAAiB/D,KAjCzC,EAmCTb,EAnCS,yBAoCR,WAAIE,cAAiCA,EACrC,kBAAmBmF,YAAa,MArCxB,EAuCTrF,EAvCS,cAuCkB,uCAE1BsF,MAAO,GAAF,OAAMpF,EAAN,OAAmB,CAAEG,GAAIF,EAAN,GAAiBoF,QAASpF,EAAOoF,cAzCjD,EA2CTvF,EA3CS,gBA2CoB,cAC5B,IAAIwF,EAAYtF,QAAhB,QACIuF,EAAoBvF,yBAAiCsF,EAAUtF,EAA3CA,iBAAxB,KAEIwF,EAAMF,EAAA,WAAoB,SAAAG,GAAC,OAAIA,OAASxF,EAAb,MAI/B,OAFA,IAAIuF,GAAYF,cAEhB,kBAEEF,MAFF,EAGEV,gBACMc,IAAQxF,EAAZ,iBACA,OAAIuF,EADsC,KAKnCD,UAAP,MA5DR,GAkEII,EAAc/H,wBAAlB,MAGA,SAASgI,EAAerF,GACtB,IAAIC,EAAUtC,qBAAd,GACA,UAAIsC,EAAkB,CACpB,IAAIC,EAAM,IAAI7D,MAAM,IAAV,8BAAmDiJ,EAAnD,KAAV,kBAEA,MADIjJ,MAAJ,mBAA6BA,6BAC7B,EAEF,SAGF,SAAS+D,EAAaV,EAAtB,GACE,OAAOW,YAAMV,EAAD,SAAZ,GAbFyF,4BAkBA,IAAIG,EAAJ,W,SAKgBD,EACd/H,G,MAEIiI,EAAahE,qBAAWpB,EAAc,CACxCiE,UAAWF,EAD6B,OAExCsB,UAAWC,sBACXC,SAAUD,sBACVZ,MAJwC,GAKxCD,YALwC,GAMxCT,gBAAiB,O,EAEkCoB,KAA9CnB,cAAWsB,aAAUF,cAAa/D,EAAY8D,KAGrDlJ,YAAe,aAAa,SAAAC,G,QAU4B,EATlDyB,EAASzB,EAAb,OAEI8H,IAAcF,EAAlB,QAEA,SAAIsB,EAAJ,gBAAIA,WAAJ,MACA,SAAIE,EAAJ,gBAAIA,WAAJ,MAEAjE,EAAS,CAAExC,KAAMM,EAAYoG,YAExBC,YAAmB7H,EAAQ8H,IAAhC,SACEvJ,mBACA,SAAAkJ,EAAA,0BAIJ,IAAItC,EAAOD,mBAA2B,iBAAO,CAAEzC,KAAM4D,IAAcF,EAAWf,QAAS,CAAvF,IAIA,OACE,kBAACgC,EAAD,UAAsBxL,MAAO4L,GAC3B,uBACE5L,MAAOyG,YAAMgE,GAAD,OACTF,EADS,MACSnD,IADT,OAETmD,EAFS,QAEWnD,IAFX,YAKXxC,YAAO,CAAEjB,MAAF,EAAS4F,KAAT,EAAe1E,WAAf,EAA6CC,KAAM,WAQnE,IAaIqH,EAASvF,aAAiB,SAASuF,EAAT,K,QAIJV,EAAe,CAACC,EAAD,KAAYS,EAAZ,WAAD,MAAjCrG,OAAOgC,OACR+D,EAAYtE,YAAYzB,EAAD,UAA3B,GAEIG,EAAK,0BAA0BmD,cAC/BgD,EAAIC,cAEJC,EAAgB7G,uBAClB,YACE,OAAQ9C,EAAR,KAGE,KAAKC,IAAL,MACA,KAAKA,IAAL,MACA,KAAKA,IAAL,UACED,mBACAA,oBACAmF,EAAS,CAAExC,KAAMM,EAAY2G,WAC7BH,aAAY,kBAAMtE,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMkK,WACtE,MAEF,KAAK7J,IAAL,QACED,mBACAA,oBACAmF,EAAS,CAAExC,KAAMM,EAAY2G,WAC7BH,aAAY,kBAAMtE,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMmK,aAI5E,CAAC5E,EAtBH,IAyBI6E,EAAclH,uBAAY,YAC5B,OAAQ9C,EAAR,KACE,KAAKC,IAAL,MAIED,sBANN,IAWIwH,EAAc1E,uBAChB,YACE,GAAI2E,YAAyBzH,EAA7B,eAAmD,OAAOA,EAAP,iBAC/CgB,EAAJ,WACImC,cAAoByE,EAAxB,MACEzC,EAAS,CAAExC,KAAMM,EAAYoG,YAC7BI,aAAY,iCAAMtG,EAAA,UAAN,gBAAM,QAA+B,CAAE8G,eAAe,SAElEjK,mBACAA,oBACAmF,EAAS,CAAExC,KAAMM,EAAY2G,eAGjC,CAACzE,EAAUsE,EAAGtG,EAAOnC,EAbvB,WAgBI4F,EAAOD,mBAA6B,iBAAO,CAAEzC,KAAMf,cAAoByE,EAAWf,QAAS,CAA/F,IAGIhF,EAAJ,EACIiF,EAAiB,CACnBC,IADmB,EAEnBzD,GAFmB,EAGnBX,KAHmB,SAInB,iBAJmB,EAKnB,yBAAiBQ,WAAjB,gBAAiBA,EALE,GAMnB,gBAAiBnC,kBAA6BmC,cAAoByE,EAN/C,KAOnBV,UAPmB,EAQnBgD,QARmB,EASnBjD,QAASO,GAGX,OAAOvF,YAAO,CACZjB,MAAO,OAAF,IAAE,CAAF,KADO,GAEZ4F,KAFY,EAGZ1E,WA9FJ,SA+FIC,KAAM,mBAkBNgI,EAAsBxL,mBAA0BA,IAApD,OAEIyL,EAAQnG,aAAiB,SAASmG,EAAT,K,UAKHtB,EAAe,CAACC,EAAD,KAAYqB,EAAZ,WAAD,MAAjCjH,OAAOgC,OACRiE,EAAWxE,YAAYzB,EAAD,SAA1B,GAEIG,EAAK,yBAAyBmD,cAC9B4D,EAAoBX,cAEpBnF,EAAsBC,cACtBQ,EACF,OAAIT,EACKA,IAAwBE,IAA/B,KAGKtB,cAAoByE,EAA3B,KAGFvJ,qBAAU,WACR,IAAIP,EAAYqF,WAAhB,QACA,GACIA,cAAoByE,EAAxB,MACI9J,IAAcW,SAAlB,eAEAX,QAAgB,CAAEmM,eAAe,MAChC,CAAC9G,EAAD,UAAkBA,EAPrB9E,WASAR,YAAc,CACZC,UAAWqF,WADC,QAEZlF,QAASkF,cAAoByE,EAFjB,KAGZ7J,OAHY,YAIV,mBAAIuM,uBAAiD5L,WAAP,cAC1C4L,eAAJ,QAAsC5L,WAAP,YACxBA,WAAP,eAEFV,KARY,YASVsM,iCAIJ,IAAIX,EAAgB7G,uBAClB,YAGE,OAFAuH,YAEQrK,EAAR,KAIE,KAAKC,IAAL,MACE,QAAIkD,cAGF,OAFAnD,mBACAA,oBACOmF,EAAS,CAAExC,KAAMM,EAAR,OAA4B5F,MAAO2C,EAAM1C,MAG7D,KAAK2C,IAAL,MAIE,GAHAD,mBACAA,oBACAmF,EAAS,CAAExC,KAAMM,EAAYoG,YAC7B,OAAIlG,kBAAgC,OAC5BG,EAAOH,QAAYA,EADS,oBAElC,SAAA1E,SAAA,8BAEF8L,yBAAwB,iCAAMpH,EAAA,UAAN,gBAAM,QAA+B,CAAE8G,eAAe,OAC9E,MAEF,KAAKhK,IAAL,UAGE,OAFAD,mBACAA,oBACOmF,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAM4K,OAE7D,KAAKvK,IAAL,QAGE,OAFAD,mBACAA,oBACOmF,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAM6K,WAE7D,KAAKxK,IAAL,KACA,KAAKA,IAAL,OAGE,OAFAD,mBACAA,oBACOmF,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMkK,QAE7D,KAAK7J,IAAL,IACA,KAAKA,IAAL,SAGE,OAFAD,mBACAA,oBACOmF,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMmK,OAE7D,KAAK9J,IAAL,OACED,mBACAA,oBACAmF,EAAS,CAAExC,KAAMM,EAAYoG,YAC7BkB,yBAAwB,iCAAMpH,EAAA,UAAN,gBAAM,QAA+B,CAAE8G,eAAe,OAC9E,MAEF,KAAKhK,IAAL,IACED,mBACAA,oBACA,MAEF,QACE,IAAIA,eACFmF,EAAS,CAAExC,KAAMM,EAAR,OAA4B5F,MAAO2C,EAAM1C,MAClD+M,cAA6B,kBAAMlF,EAAS,CAAExC,KAAMM,EAAYyH,gBAAhEL,SAKR,CAAClF,EAAUkF,EApEb,IAuEIL,EAAclH,uBAAY,YAC5B,OAAQ9C,EAAR,KACE,KAAKC,IAAL,MAIED,sBANN,IAWI4G,EAAOD,mBAA4B,iBAAO,CAAEzC,KAAMf,cAAoByE,EAAWf,QAAS,CAA9F,IAGIC,EAAiB,CACnB,wBACE3D,mCAA6CA,QAAYA,EAAzDA,yBAA6CA,EAF5B,GAGnB,2BAAmBA,YAAnB,gBAAmBA,EAHA,GAInBG,GAJmB,EAKnB4D,UALmB,EAMnBgD,QANmB,EAOnBlD,KAPmB,OAQnB2D,SARmB,EASnB5D,IAAKqC,GAEHvH,EAAJ,EAEA,OAAOI,YAAO,CACZjB,MAAO,OAAF,IAAE,CAAF,KADO,GAEZ4F,KAFY,EAGZ1E,WA7JJ,MA8JIrD,SAJY,EAKZmG,QALY,EAMZ7C,KAAM,kBAMNyI,EAAJ,WAsGA7B,WACAA,UACAA,OAxFA,SAAS8B,EAAT,G,MAM2D7J,EAAnD8J,oBAAWA,GAAA,EAAO7D,EAAiCjG,EAAjCiG,QAAYpF,cAAqBb,0B,EACjC8H,EAAe,CAACC,EAAD,KAAY8B,EAAZ,WAAD,MAAjC1H,OAAOgC,OACR7B,EAAK,wBAAwBmD,cAC7BsE,EAAS5H,0BAAiCA,QAAYA,EAAZA,sBAAjCA,EAEb7E,aAAoB,WAClB,GAAI6E,cAAoByE,EAAxB,MACA,GACA,IAAI6B,EAAIc,cAER,OADAd,aAAY,iCAAMhL,SAAA,eAAN,WAAM,EAAN,sBAAM,iBAA8C,CAAEuM,MAAO,eAClEvB,EAAP,WACC,CAACnG,EAAIyH,EAAQ5H,EANhB7E,YAQA,IAAI2M,EAAM9M,iBAAmC,CAAE2M,aAE/CxM,aAAoB,WAClB2M,uBACC,CAACA,EAFJ3M,IAIAA,aAAoB,W,QAClB2M,6BAAwBxM,wBAAxBwM,cAAwBxM,EAAxBwM,oBAAwBxM,EAAxBwM,gBACC,CAACA,EAFJ3M,IAIAA,aAAoB,WAElB,OADA6G,EAAS,CAAExC,KAAMM,EAAR,aAAkCK,GAAlC,EAAsCkF,QAASyC,IACjD,kBAAM9F,EAAS,CAAExC,KAAMM,EAAR,eAAoCK,UACzD,CAAC2H,EAHJ3M,IAKA,IAAIkJ,EAAc1E,uBAChB,YACE,SAAqB9C,EAAP,kBACdmF,EAAS,CAAExC,KAAMM,EAAYoG,YAC7BkB,yBAAwB,iCAAMpH,EAAA,UAAN,gBAAM,QAA+B,CAAE8G,eAAe,OAC9E,EAAoBhD,EAAP,QAAb,KAEF,CAAC9B,EAAUhC,EAAX,YAPF,IAUI+H,EAAcpI,uBAAY,WAC5B,KAAc,OAAOqC,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMuL,UACzEhG,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAArC,SAAqD0D,SAC7D,CAACwH,EAAUxH,EAHd,IAKI8H,EAAatI,uBAAY,WAC3B,GACA,GACAqC,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAArC,SAAqD0D,SAC7D,CAACwH,EAAUC,EAAQzH,EAJtB,IAMI+H,EAAcvI,uBAAY,WAC5B,GACA,GACAqC,EAAS,CAAExC,KAAMM,EAAR,SAA8B4G,MAAOjK,IAAMuL,YACnD,CAACL,EAAUC,EAJd,IAMInE,EAAOD,mBAA2B,iBAAO,CAAEoE,OAAF,EAAUD,cAAa,CAACC,EAArE,IACIjE,EAAiB,CACnBxD,GADmB,EAEnB0D,KAFmB,WAGnB2D,UAAUG,cAHS,EAInB,iBAAiBA,YAJE,EAKnBA,cALmB,EAMnB7D,QANmB,EAOnBqE,QAPmB,EAQnBC,cARmB,EASnBC,YATmB,EAUnBC,eAVmB,EAWnBC,aAAcL,GAGhB,OAAOpJ,YAAO,CACZjB,MAAO,OAAF,IAAE,CAAF,KADO,GAEZ4F,KAFY,EAGZ1E,WAHY,EAIZC,KAAM,gB,qKC5hBV,E,UAAA,SAAKc,GACHA,uCACAA,2CAFF,CAAKA,MAAL,KASA,IAAIC,IAAQ,MAMTD,EANS,8BAOR,yBAEE0I,QAAS,GAAF,OACFxI,EADE,SAEL,CAAEG,GAAIF,EAAN,GAAiB1C,QAAS0C,EAA1B,QAA0CwI,SAAUxI,EAAOwI,eAXvD,EAeT3I,EAfS,gCAgBR,IAAI0I,EAAUxI,UAAd,QACIwF,EAAMxF,EAAA,mBAAwB,SAAA0I,GAAK,OAAIA,OAAazI,EAAjB,MACvC,WAAIuF,EAAmBxF,GACvBwI,cACA,kBAAmBA,cApBvB,GAwBIG,EAAoBhL,wBAAxB,MAUA,SAASiL,EAAqBtI,GAC5B,IAAIC,EAAUtC,qBAAd,GACA,UAAIsC,EAAkB,CACpB,IAAIC,EAAM,IAAI7D,MAAM,IAAV,8BAAmDkM,EAAnD,KAAV,kBAEA,MADIlM,MAAJ,mBAA6BA,6BAC7B,EAEF,SAGF,SAAS+D,EAAaV,EAAtB,GACE,OAAOW,YAAMV,EAAD,SAAZ,GAbF0I,kCAkBA,IA4KA,E,SAxKgBE,EAIdhL,G,IAUM3D,EAA2D2D,EAA3D3D,MAAO4O,EAAoDjL,EAApDiL,S,EAAoDjL,EAA1C8J,oBAAWA,GAAA,EAAUoB,cAAqBlL,mC,EACnCiE,qBAAWpB,EAAc,CACrD8H,QAAS,KADJA,eAAWxG,O,EAGgBgH,cAA7BC,OAAYC,O,EACwB/F,cAApCC,OAAaC,OACdlD,EAAK,yBAAyBmD,cAC9B6F,EAAgBnO,iBAApB,MAEIoO,EAAc5F,mBAChB,kBACEgF,EAAA,MAAa,SAAAa,GACX,OAAIA,mBAAJ,cAGJ,CANF,IAQIC,EAAwB9F,mBAC1B,kBAAMgF,EAAA,MAAa,SAAAa,GAAM,OAAIA,2BAAJ,OACzB,CAACb,EAFH,IAKIe,EAAgB5J,uBAClB,SAAA6J,G,MACE,KAAc,OAAO,EACrB,GAAIA,IAAJ,EAAyB,OAAO,EAChC,IAAIC,EAAU,SAAGjB,EAAA,MAAa,SAAAa,GAAM,OAAIA,2BAAJ,WAAtB,EAAG,WAAjB,QAEA,cAAII,OAAJ,EAAIA,EAAJ,YAEAX,MACA,KAEF,CAACA,EAAU5O,EAAOyN,EAXpB,IAcAjN,YAAc,CACZC,UAAWwO,EADC,QAEZvO,OAFY,YAGV,gBAAIuM,uBAA8C5L,WAAP,cACvC4L,eAAJ,QAAsC5L,WAAP,YACxBA,WAAP,eAEFV,KAPY,YAQVsM,iCAIJ,IAAIX,EAAgB7G,uBAClB,YAEE,GADgBwJ,EAAhB,QACA,CAEA,IAAIO,EAAMlB,EAAA,QACA,SAAAa,GAAM,WAAIA,+BADV,KAEH,SAAAX,GAAK,OAAIA,UAAJ,WAEZ,OAAQ7L,EAAR,KACE,KAAKC,IAAL,UACA,KAAKA,IAAL,QAOI,GALAD,mBACAA,oBAEaL,YAAQkN,EAAKjN,aAAiBA,IAA3C,cAEeC,IAAf,QAAoC,CAClC,IAAIiN,EAAenB,EAAA,MACjB,SAAAa,GAAM,OAAIA,oBAA2B/N,SAA/B,iBAER,GAAkBiO,EAAcI,mBAAdJ,OAGtB,MAEF,KAAKzM,IAAL,WACA,KAAKA,IAAL,UAOI,GALAD,mBACAA,oBAEaL,YAAQkN,EAAKjN,SAAaA,IAAvC,cAEeC,IAAf,QAAoC,CAClC,IAAIiN,EAAenB,EAAA,MACjB,SAAAa,GAAM,OAAIA,oBAA2B/N,SAA/B,iBAER,GAAkBiO,EAAcI,mBAAdJ,OAGtB,MAEF,KAAKzM,IAAL,MAEID,mBACAA,oBAEA,IAAI8M,EAAenB,EAAA,MACjB,SAAAa,GAAM,OAAIA,oBAA2B/N,SAA/B,iBAER,GAAkBiO,EAAcI,mBAAdJ,WAK1B,CAACJ,EAAeX,EAzDlB,IA4DIoB,EAAiBjK,uBACnB,YAEE,OADAqC,EAAS,OAAD,IAAC,CAAD,CAAGxC,KAAMM,EAAY+J,gBAA7B7H,IACO,kBAAMA,EAAS,CAAExC,KAAMM,EAAR,iBAAsCK,GAAIkJ,EAAOlJ,QAEzE,CALF,IAQI2J,EAAMtG,mBACR,iBAAO,CACLoG,eADK,EAELR,YAFK,EAGLE,sBAHK,EAILS,OAJK,EAKLpC,SALK,EAMLzN,WAEF,CAAC0P,EAAgBR,EAAaE,EAAuBC,EAAe5B,EATtE,IAYIhE,EAAiB,CACnBC,IADmB,EAEnBzD,GAFmB,EAGnB0D,KAHmB,aAInB,kBAJmB,EAKnB,mBALmB,EAMnBE,UAAWyC,GAGb,OACE,qBAAqBxH,KAAK,0BACxB,qBAAeA,KAAK,oBAClB,kBAAC2J,EAAD,UAA4BzO,MAAO4P,GAChChL,YAAO,CACNjB,MAAO,OAAF,IAAE,CAAF,KADC,GAENkB,WAjKZ,MAkKYC,KAAM,mBAUlB,SAAKgL,GACHA,qBACAA,uBAFF,CAAKA,MAAL,KAsHAnB,SAjGA,SAASoB,EAAT,GAWE,IAAIC,EAAYlP,iBAAhB,MACImF,EAAK,gCAAgCmD,c,EAEP0F,cAA7BC,OAAYC,O,EACwB/F,cAApCC,OAAaC,O,WC9SK8G,kBAAe,G,MACdhM,mBAASgM,GAA5BC,OAAOC,OAOZ,MAAO,CAAEC,QALK3K,uBAAY,mBAAkB0K,GAAS,SAAAD,GAAK,OAAIA,EAAJ,OAAmB,CAA7E,IAKkBG,QAJJ5K,uBAAY,mBAAkBvD,QAAQgO,EAA1B,KAAyC,CAAnE,IAI2BI,WAHV7K,uBAAY,mBAAkB0K,GAAS,SAAAD,GAAK,OAAIA,GAAJ,OAAoB,CAAjF,IAGuCK,WAFtB9K,uBAAY,mBAAkB0K,GAAS,SAAAD,GAAK,OAAIA,EAAJ,OAAmB,CAAhF,KDySuCM,CAASV,EAAD,OAAzCM,YAASE,eAAYD,YAErBrQ,EAAiD2D,EAAjD3D,M,EAAiD2D,EAA1C8J,oBAAWA,GAAA,EAAUoB,cAAqBlL,wBACnD4K,EAAWzN,iBAAO,CAAEd,MAAF,EAASyN,aAE/BxM,aAAoB,WAClBsN,oBACC,CAACvO,EAFJiB,IAGAA,aAAoB,WAClBsN,uBACC,CAACd,EAFJxM,I,MAWIyN,EAAqB,CAACC,EAAD,KAAkBoB,EAAlB,WAAD,MANtBL,mBACUe,IAAVhD,SACAoC,WACAX,gBACAE,0BACOsB,IAAP1Q,MAGFiB,aAAoB,kBAAMyO,EAAe,CAAEzJ,GAAF,EAAM5C,QAAN,EAA0BkL,eAAa,CAAC,EAAD,IAAhFtN,IAOA,IAAIkJ,EAAc1E,uBAAY,W,MACvBoK,EAAL,KAEAO,EAAQN,EAARM,QACA,SAAAJ,EAAA,uBACC,CAACI,EAASP,EALb,IAOIhC,EAAcpI,uBAAY,kBAAM2K,EAAQN,EAAd,UAAmC,CAAjE,IACIa,EAAalL,uBAAY,kBAAM6K,EAAWR,EAAjB,UAAsC,CAAnE,IAEIc,GAAgB,MAAA1B,OAAA,EAAAA,EAAA,MAApB,EACI2B,EAAaJ,GAAjB,EAEIK,EAAUJ,IAAd,EACIjH,EAAiB,CACnBC,IADmB,EAEnBzD,GAFmB,EAGnB0D,KAHmB,QAInB,eAAgBmH,EAAU,OAJP,QAKnB,kBALmB,EAMnB,mBANmB,EAOnB,kBAAiBD,QAPE,EAQnBvD,SACE,GAAgB,EAChB,IACK8B,GAAL,EADoB,GAEpB,EAEFxF,QAASiH,OAAaE,EAdH,EAenB9C,QAAS4C,OAAaE,EAfH,EAgBnBC,OAAQH,OAAaE,EAAYJ,GAE/BpH,EAAOD,mBACT,iBAAO,CAAEwH,QAAF,EAAWrD,SAAX,EAAiCC,OAAQ2C,EAAQP,EAAD,WACvD,CAACgB,EAASD,EAFZ,IAKA,OACE,qBAAqB/L,KAAK,0BACxB,qBAAeA,KAAK,oBACjBF,YAAO,CACNjB,MAAO,OAAF,IAAE,CAAF,KADC,GAEN4F,KAFM,EAGN1E,WAvGV,MAwGUC,KAAM,yBAUhB6J,YACAA","file":"static/js/4.9b795059.chunk.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","import { useRef, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled = true,\n}: {\n  container: HTMLElement | null\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: boolean\n}) {\n  let acceptRef = useRef(accept)\n  let walkRef = useRef(walk)\n\n  useEffect(() => {\n    acceptRef.current = accept\n    walkRef.current = walk\n  }, [accept, walk])\n\n  useIsoMorphicEffect(() => {\n    if (!container) return\n    if (!enabled) return\n\n    let accept = acceptRef.current\n    let walk = walkRef.current\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  }, [container, enabled, acceptRef, walkRef])\n}\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n  useEffect,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from './use-window-event'\nimport { useIsMounted } from './use-is-mounted'\n\nexport enum Features {\n  /** No features enabled for the `useFocusTrap` hook. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the component that uses this `useFocusTrap` hook. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport function useFocusTrap(\n  container: MutableRefObject<HTMLElement | null>,\n  features: Features = Features.All,\n  {\n    initialFocus,\n    containers,\n  }: {\n    initialFocus?: MutableRefObject<HTMLElement | null>\n    containers?: MutableRefObject<Set<MutableRefObject<HTMLElement | null>>>\n  } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useIsMounted()\n\n  let featuresRestoreFocus = Boolean(features & Features.RestoreFocus)\n  let featuresInitialFocus = Boolean(features & Features.InitialFocus)\n\n  // Capture the currently focused element, before we enable the focus trap.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    restoreElement.current = document.activeElement as HTMLElement\n  }, [featuresRestoreFocus])\n\n  // Restore the focus when we unmount the component.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    return () => {\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n    }\n  }, [featuresRestoreFocus])\n\n  // Handle initial focus\n  useEffect(() => {\n    if (!featuresInitialFocus) return\n    if (!container.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus?.current) {\n      if (initialFocus?.current === activeElement) {\n        previousActiveElement.current = activeElement\n        return // Initial focus ref is already the active element\n      }\n    } else if (container.current.contains(activeElement)) {\n      previousActiveElement.current = activeElement\n      return // Already focused within Dialog\n    }\n\n    // Try to focus the initialFocus ref\n    if (initialFocus?.current) {\n      focusElement(initialFocus.current)\n    } else {\n      if (focusIn(container.current, Focus.First) === FocusResult.Error) {\n        throw new Error('There are no focusable elements inside the <FocusTrap />')\n      }\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n  }, [container, initialFocus, featuresInitialFocus])\n\n  // Handle `Tab` & `Shift+Tab` keyboard events\n  useWindowEvent('keydown', event => {\n    if (!(features & Features.TabLock)) return\n\n    if (!container.current) return\n    if (event.key !== Keys.Tab) return\n\n    event.preventDefault()\n\n    if (\n      focusIn(\n        container.current,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      ) === FocusResult.Success\n    ) {\n      previousActiveElement.current = document.activeElement as HTMLElement\n    }\n  })\n\n  // Prevent programmatically escaping the container\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!(features & Features.FocusLock)) return\n\n      let allContainers = new Set(containers?.current)\n      allContainers.add(container)\n\n      if (!allContainers.size) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n\nfunction contains(containers: Set<MutableRefObject<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.current?.contains(element)) return true\n  }\n\n  return false\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n\n  // Types\n  MutableRefObject,\n  ReactNode,\n} from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (\n  message: StackMessage,\n  type: string,\n  element: MutableRefObject<HTMLElement | null>\n) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n  type,\n  element,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n  type: string\n  element: MutableRefObject<HTMLElement | null>\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  useIsoMorphicEffect(() => {\n    notify(StackMessage.Add, type, element)\n    return () => notify(StackMessage.Remove, type, element)\n  }, [notify, type, element])\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MutableRefObject,\n  Ref,\n  useState,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open?: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n  let [nestedDialogCount, setNestedDialogCount] = useState(0)\n\n  let usesOpenClosedState = useOpenClosed()\n  if (open === undefined && usesOpenClosedState !== null) {\n    // Update the `open` prop based on the open closed state\n    open = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  let containers = useRef<Set<MutableRefObject<HTMLElement | null>>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return dialogState === DialogStates.Open\n  })()\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  let ready = useServerHandoffComplete()\n  let enabled = ready && dialogState === DialogStates.Open\n  let hasNestedDialogs = nestedDialogCount > 1 // 1 is the current dialog\n  let hasParentDialog = useContext(DialogContext) !== null\n\n  // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n  let position = !hasNestedDialogs ? 'leaf' : 'parent'\n\n  useFocusTrap(\n    internalDialogRef,\n    enabled\n      ? match(position, {\n          parent: FocusTrapFeatures.RestoreFocus,\n          leaf: FocusTrapFeatures.All,\n        })\n      : FocusTrapFeatures.None,\n    { initialFocus, containers }\n  )\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false)\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    if (internalDialogRef.current?.contains(target)) return\n\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (hasParentDialog) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState, hasParentDialog])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n\n    // Handle `Escape` to close\n    onKeyDown(event: ReactKeyboardEvent) {\n      if (event.key !== Keys.Escape) return\n      if (dialogState !== DialogStates.Open) return\n      if (hasNestedDialogs) return\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      type=\"Dialog\"\n      element={internalDialogRef}\n      onUpdate={useCallback((message, type, element) => {\n        if (type !== 'Dialog') return\n\n        match(message, {\n          [StackMessage.Add]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count + 1)\n          },\n          [StackMessage.Remove]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count - 1)\n          },\n        })\n      }, [])}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\nimport React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { disposables } from '../../utils/disposables'\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\ntype MenuItemDataRef = MutableRefObject<{ textValue?: string; disabled: boolean }>\n\ninterface StateDefinition {\n  menuState: MenuStates\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  itemsRef: MutableRefObject<HTMLDivElement | null>\n  items: { id: string; dataRef: MenuItemDataRef }[]\n  searchQuery: string\n  activeItemIndex: number | null\n}\n\nenum ActionTypes {\n  OpenMenu,\n  CloseMenu,\n\n  GoToItem,\n  Search,\n  ClearSearch,\n  RegisterItem,\n  UnregisterItem,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseMenu }\n  | { type: ActionTypes.OpenMenu }\n  | { type: ActionTypes.GoToItem; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToItem; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterItem; id: string; dataRef: MenuItemDataRef }\n  | { type: ActionTypes.UnregisterItem; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseMenu](state) {\n    if (state.menuState === MenuStates.Closed) return state\n    return { ...state, activeItemIndex: null, menuState: MenuStates.Closed }\n  },\n  [ActionTypes.OpenMenu](state) {\n    if (state.menuState === MenuStates.Open) return state\n    return { ...state, menuState: MenuStates.Open }\n  },\n  [ActionTypes.GoToItem]: (state, action) => {\n    let activeItemIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.items,\n      resolveActiveIndex: () => state.activeItemIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state\n    return { ...state, searchQuery: '', activeItemIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.items.findIndex(\n      item =>\n        item.dataRef.current.textValue?.startsWith(searchQuery) && !item.dataRef.current.disabled\n    )\n\n    if (match === -1 || match === state.activeItemIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeItemIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterItem]: (state, action) => ({\n    ...state,\n    items: [...state.items, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterItem]: (state, action) => {\n    let nextItems = state.items.slice()\n    let currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null\n\n    let idx = nextItems.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextItems.splice(idx, 1)\n\n    return {\n      ...state,\n      items: nextItems,\n      activeItemIndex: (() => {\n        if (idx === state.activeItemIndex) return null\n        if (currentActiveItem === null) return null\n\n        // If we removed the item before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextItems.indexOf(currentActiveItem)\n      })(),\n    }\n  },\n}\n\nlet MenuContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nMenuContext.displayName = 'MenuContext'\n\nfunction useMenuContext(component: string) {\n  let context = useContext(MenuContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_MENU_TAG = Fragment\ninterface MenuRenderPropArg {\n  open: boolean\n}\n\nexport function Menu<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(\n  props: Props<TTag, MenuRenderPropArg>\n) {\n  let reducerBag = useReducer(stateReducer, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null,\n  } as StateDefinition)\n  let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (menuState !== MenuStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (itemsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseMenu })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<MenuRenderPropArg>(() => ({ open: menuState === MenuStates.Open }), [\n    menuState,\n  ])\n\n  return (\n    <MenuContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(menuState, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })}\n      >\n        {render({ props, slot, defaultTag: DEFAULT_MENU_TAG, name: 'Menu' })}\n      </OpenClosedProvider>\n    </MenuContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-menu-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.First }))\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last }))\n          break\n      }\n    },\n    [dispatch, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (props.disabled) return\n      if (state.menuState === MenuStates.Open) {\n        dispatch({ type: ActionTypes.CloseMenu })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        dispatch({ type: ActionTypes.OpenMenu })\n      }\n    },\n    [dispatch, d, state, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.itemsRef.current?.id,\n    'aria-expanded': props.disabled ? undefined : state.menuState === MenuStates.Open,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Menu.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEMS_TAG = 'div' as const\ninterface ItemsRenderPropArg {\n  open: boolean\n}\ntype ItemsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet ItemsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Items = forwardRefWithAs(function Items<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(\n  props: Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl> &\n    PropsForFeatures<typeof ItemsRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Items.name].join('.'))\n  let itemsRef = useSyncRefs(state.itemsRef, ref)\n\n  let id = `headlessui-menu-items-${useId()}`\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.menuState === MenuStates.Open\n  })()\n\n  useEffect(() => {\n    let container = state.itemsRef.current\n    if (!container) return\n    if (state.menuState !== MenuStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.menuState, state.itemsRef])\n\n  useTreeWalker({\n    container: state.itemsRef.current,\n    enabled: state.menuState === MenuStates.Open,\n    accept(node) {\n      if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLDivElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          if (state.activeItemIndex !== null) {\n            let { id } = state.items[state.activeItemIndex]\n            document.getElementById(id)?.click()\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [dispatch, searchDisposables, state]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let slot = useMemo<ItemsRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeItemIndex === null ? undefined : state.items[state.activeItemIndex]?.id,\n    'aria-labelledby': state.buttonRef.current?.id,\n    id,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEMS_TAG,\n    features: ItemsRenderFeatures,\n    visible,\n    name: 'Menu.Items',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEM_TAG = Fragment\ninterface ItemRenderPropArg {\n  active: boolean\n  disabled: boolean\n}\ntype MenuItemPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'onPointerLeave'\n  | 'onPointerMove'\n  | 'onMouseLeave'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Item<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(\n  props: Props<TTag, ItemRenderPropArg, MenuItemPropsWeControl> & {\n    disabled?: boolean\n    onClick?: (event: { preventDefault: Function }) => void\n  }\n) {\n  let { disabled = false, onClick, ...passthroughProps } = props\n  let [state, dispatch] = useMenuContext([Menu.name, Item.name].join('.'))\n  let id = `headlessui-menu-item-${useId()}`\n  let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false\n\n  useIsoMorphicEffect(() => {\n    if (state.menuState !== MenuStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.menuState])\n\n  let bag = useRef<MenuItemDataRef['current']>({ disabled })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterItem, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterItem, id })\n  }, [bag, id])\n\n  let handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (disabled) return event.preventDefault()\n      dispatch({ type: ActionTypes.CloseMenu })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      if (onClick) return onClick(event)\n    },\n    [dispatch, state.buttonRef, disabled, onClick]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<ItemRenderPropArg>(() => ({ active, disabled }), [active, disabled])\n  let propsWeControl = {\n    id,\n    role: 'menuitem',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEM_TAG,\n    name: 'Menu.Item',\n  })\n}\n\n// ---\n\nMenu.Button = Button\nMenu.Items = Items\nMenu.Item = Item\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n","import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n"],"sourceRoot":""}
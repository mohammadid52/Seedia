{"version":3,"sources":["hooks/useUser.ts","pages/request/RequestView.tsx"],"names":["useUser","profileUrl","userData","fetchProfile","iAmOwnerOfThisProfile","getUniqId","_id","useQuery","fetchUserById","enabled","isFetched","isLoading","data","refetch","otherUserData","TopCard","websiteUrl","views","followingList","useFollow","following","addFollow","removeFollow","className","content","src","profilePicture","avatarPlaceholder","alt","fullName","location","address","city","country","email","onClick","mutate","invert","label","gradient","size","link","RequestView","requestId","useParams","fetchSellerById","requestData","user","customParentMaxWidth","customMaxWidth","pageUrl","window","href","imageUrl","pageTitle","title","description","keywords","getTags","skills","join"],"mappings":"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","file":"static/js/55.05300f35.chunk.js","sourcesContent":["import { fetchUserById } from 'apis/queries'\nimport { getUniqId } from 'helpers'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nconst useUser = (\n  profileUrl: string,\n  userData?: IParent,\n  fetchProfile: boolean = true\n) => {\n  const iAmOwnerOfThisProfile =\n    userData && getUniqId(profileUrl) === userData?._id\n\n  const { isFetched, isLoading, data, refetch } = useQuery(\n    'user',\n    () => fetchUserById(profileUrl),\n    { enabled: !iAmOwnerOfThisProfile && fetchProfile }\n  )\n\n  const otherUserData = isFetched && !isLoading && data.data.data\n\n  return { otherUserData, isFetched, isLoading, iAmOwnerOfThisProfile, refetch }\n}\n\nexport default useUser\n","import { fetchSellerById } from 'apis/queries'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Loading from 'components/Loading'\nimport NarrowLayout from 'containers/NarrowLayout'\nimport useFollow from 'hooks/useFollow'\nimport useUser from 'hooks/useUser'\nimport { IParent, IRequest } from 'interfaces/UniversalInterface'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { getTags } from 'utils/functions'\n\nconst TopCard = ({\n  userData,\n  iAmOwnerOfThisProfile,\n  websiteUrl,\n  views = 0,\n  followingList,\n}: {\n  userData?: IParent\n  iAmOwnerOfThisProfile: boolean\n\n  websiteUrl?: string\n  views?: number\n  followingList?: string[]\n}) => {\n  const { following, addFollow, removeFollow } = useFollow(\n    followingList,\n    userData._id\n  )\n\n  return (\n    <div>\n      <Card\n        className=\"p-6 \"\n        content={\n          <>\n            <div className=\"flex relative items-center justify-between\">\n              {iAmOwnerOfThisProfile && (\n                <span className=\"dark:text-gray-400 text-gray-400 italic text-sm absolute top-0 right-0 \">\n                  View count: {views}\n                </span>\n              )}\n              <div className=\"flex items-center space-x-12\">\n                <div className=\"\">\n                  <span className=\"sr-only\">13RMS</span>\n                  <img\n                    className=\"h-36 w-36 sm:h-36 sm:w-36 border-gradient border-transparent border-4 cursor-pointer rounded-full shadow-xl\"\n                    src={\n                      userData?.profilePicture\n                        ? userData?.profilePicture\n                        : avatarPlaceholder\n                    }\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"space-y-1\">\n                  <h1 className=\"text-2xl leading-6 font-semibold dark:text-white text-gray-900\">\n                    {userData?.fullName}\n                  </h1>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.location?.address\n                      ? `${userData?.location?.address}, `\n                      : ''}\n                    {userData?.location.city\n                      ? `${userData?.location.city}, `\n                      : ''}{' '}\n                    {userData?.location.country}\n                  </h5>\n                  <h5 className=\"text-base leading-6 font-light mt-2 max-w-132 dark:text-gray-400 text-gray-900\">\n                    {userData?.email}\n                  </h5>\n                </div>\n              </div>\n              <div className=\"absolute bottom-0 right-0\">\n                {!iAmOwnerOfThisProfile ? (\n                  <div className=\"grid grid-cols-2 gap-x-4\">\n                    <Button\n                      onClick={() =>\n                        following\n                          ? removeFollow.mutate(userData._id)\n                          : addFollow.mutate(userData._id)\n                      }\n                      invert={following}\n                      label={following ? 'Following' : 'Follow'}\n                      gradient\n                      size=\"lg\"\n                      className=\"px-6\"\n                    />\n                    <Button\n                      label=\"Contact\"\n                      link={websiteUrl}\n                      gradient\n                      className=\"px-6\"\n                      size=\"lg\"\n                    />\n                  </div>\n                ) : (\n                  <span className=\"text-base leading-6 font-light  dark:text-gray-400 text-gray-600\">\n                    Others will see buttons here\n                  </span>\n                )}\n              </div>\n            </div>\n          </>\n        }\n      />\n    </div>\n  )\n}\n\nconst RequestView = ({ userData }: { userData?: IParent }) => {\n  const params: any = useParams()\n  const requestId = params.requestId\n\n  const { isLoading, data, isFetched } = useQuery(\n    `request-view-${requestId}`,\n    () => fetchSellerById(requestId)\n  )\n  const requestData: IRequest = isFetched && !isLoading ? data.data.data : {}\n\n  const { iAmOwnerOfThisProfile } = useUser(\n    requestData?.user?.profileUrl,\n    userData,\n    false\n  )\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  const { user } = requestData\n\n  return (\n    <>\n      <NarrowLayout\n        userData={userData}\n        customParentMaxWidth=\"max-w-360 relative\"\n        customMaxWidth=\"max-w-360\"\n      >\n        <Meta\n          pageUrl={window.location.href}\n          imageUrl={user && user.profilePicture}\n          pageTitle={`${requestData.title} | 13RMS `}\n          title={requestData.title}\n          description={requestData.description}\n          keywords={getTags(\n            `${requestData.description} ${\n              requestData.title\n            } ${requestData.skills.join('')}`\n          )}\n          // userName={''}\n        />\n        <div className=\"flex flex-col gap-y-12\">\n          <TopCard\n            followingList={userData?.following || []}\n            views={requestData.views}\n            iAmOwnerOfThisProfile={iAmOwnerOfThisProfile}\n            userData={user}\n          />\n          <Card\n            content={\n              <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n                <div className=\"sm:col-span-2\">\n                  <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                    Description\n                  </h1>\n                  <div className=\"whitespace-pre-line\">\n                    {requestData.description}\n                  </div>\n                  <br />\n                </div>\n              </div>\n            }\n          />\n          {/* <Card\n          content={\n            <div className=\"dark:text-gray-400 grid grid-cols-1 gap-x-12 sm:grid-cols-3 text-gray-900\">\n              <div className=\"sm:col-span-2\">\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  About the company\n                </h1>\n                <div>\n                  <div className=\"sm:flex items-center\">\n                    <div className=\"mb-4 flex-shrink-0 sm:mb-0 sm:mr-4\">\n                      <img\n                        className=\"h-12 w-12  cursor-pointer  shadow-xl\"\n                        src={\n                          company?.profilePicture\n                            ? company?.profilePicture\n                            : avatarPlaceholder\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                    <h4 className=\"text-lg font-bold\">{business?.name}</h4>\n                  </div>\n                  <div className=\"mt-4\">\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {background?.summary || 'Test summary'}\n                    </p>\n                    <br />\n                    <p className=\"dark:text-gray-400 text-gray-600\">\n                      {business?.additionalInfo || 'Additional Info'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h1 className=\"dark:text-white text-gray-900 text-2xl  mb-4 font-semibold\">\n                  Company Details\n                </h1>\n                <DescriptionItem name={'Company Size'} value={'100'} />\n                <DescriptionItem\n                  name={'Type of business'}\n                  value={business.typeOfBusiness}\n                />\n                <DescriptionItem name={'Year of foundation'} value={'2007'} />\n                <DescriptionItem\n                  valueClassName=\"underline cursor-pointer tracking-wider\"\n                  name={'Website'}\n                  value={project.website}\n                />\n              </div>\n            </div>\n          }\n        /> */}\n        </div>\n      </NarrowLayout>\n    </>\n  )\n}\n\nexport default RequestView\n"],"sourceRoot":""}
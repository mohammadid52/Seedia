{"version":3,"sources":["utils/functions/index.js","components/animation/AnimatedDiv.tsx","components/atoms/NormalFormInput.tsx","components/Copyright.jsx","containers/Layout.tsx","components/atoms/animation/ErrorAnimation.tsx","pages/ResetPassword.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","AnimatedDiv","children","delay","className","rest","div","initial","animate","exit","variants","hidden","visibility","opacity","translateX","visible","transition","NormalFormInput","label","id","name","type","placeholder","error","onChange","gridClass","required","showPasswordButton","optional","fullWidth","textarea","autoComplete","success","info","props","errorClass","useState","showPass","setShowPass","htmlFor","onKeyDown","onKeyPress","onKeyUp","onClick","show","Boolean","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","navigation","href","Copyright","year","Date","getFullYear","item","Layout","title","subtitle","withButton","logo","useTheme","src","alt","defaultOptions","loop","autoplay","animationData","errorAnimation","rendererSettings","preserveAspectRatio","ErrorAnimation","isStopped","isPaused","options","height","width","ResetPassword","route","useParams","showResetFields","setShowResetFields","setError","verifyToken","a","network","post","token","data","message","history","useHistory","updatePassword","newPassword","setSaving","status","push","links","LOGIN","window","location","reload","console","useEffect","validationSchema","Yup","min","confirmNewPassword","oneOf","formik","useFormik","initialValues","onSubmit","values","saving","handleSubmit","handleChange","errors","Button","loading","disabled","loadingText","gradient"],"mappings":"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","file":"static/js/52.fd25713b.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import { motion } from 'framer-motion'\n\nconst AnimatedDiv = ({\n  children,\n  delay = 0.3,\n  className,\n  ...rest\n}: {\n  delay?: number\n  className?: string\n  children: React.ReactNode\n}) => {\n  return (\n    <motion.div\n      className={className}\n      {...rest}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      variants={{\n        hidden: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: 100,\n        },\n        visible: {\n          visibility: 'visible',\n          translateX: 0,\n          opacity: 1,\n          transition: {\n            delay,\n          },\n        },\n        exit: {\n          visibility: 'hidden',\n          opacity: 0,\n          translateX: -100,\n          transition: {\n            delay,\n          },\n        },\n      }}\n    >\n      <>{children}</>\n    </motion.div>\n  )\n}\n\nexport default AnimatedDiv\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","const navigation = [\n  { name: 'Accessibility', href: '#/' },\n  { name: 'User Agreement', href: '#/' },\n  { name: 'Privacy & Policy', href: '#/' },\n  { name: 'Cookies', href: '#/' },\n]\nconst Copyright = () => {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto pt-16 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 lg:flex md:flex sm:grid sm:place-content-center sm:grid-cols-1 flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          {navigation.map((item) => (\n            <div key={item.name} className=\"text-center px-5 py-2\">\n              <li\n                href={item.href}\n                className=\"list-none link-hover text-base text-gray-500 cursor-pointer\"\n              >\n                {item.name}\n              </li>\n            </div>\n          ))}\n        </nav>\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {year} Workflow, Inc. All rights reserved.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Copyright\n","import Copyright from 'components/Copyright'\nimport React from 'react'\nimport AnimatedDiv from 'components/animation/AnimatedDiv'\nimport useTheme from 'hooks/useTheme'\n\nconst Layout = ({\n  title,\n  subtitle,\n  children,\n  withButton,\n}: {\n  title?: string\n  subtitle?: React.ReactNode\n  children: React.ReactNode\n  withButton?: React.ReactNode\n}) => {\n  const { logo } = useTheme()\n\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900 bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <AnimatedDiv\n        // @ts-ignore\n        className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col\"\n      >\n        <img className=\"mx-auto h-32 w-auto\" src={logo} alt=\"13RMS\" />\n        {title && (\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900\">\n            {title}\n          </h2>\n        )}\n        {subtitle && (\n          <p className=\"mt-2 text-center text-sm text-gray-600\">{subtitle}</p>\n        )}\n        {withButton && withButton}\n      </AnimatedDiv>\n\n      {children}\n      <Copyright />\n    </div>\n  )\n}\n\nexport default Layout\n","import errorAnimation from 'assets/animation/error.json'\nimport Lottie from 'react-lottie'\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: errorAnimation,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n}\n\nconst ErrorAnimation = () => {\n  return (\n    <Lottie\n      isStopped={false}\n      isPaused={false}\n      options={defaultOptions}\n      height={300}\n      width={300}\n    />\n  )\n}\n\nexport default ErrorAnimation\n","import ErrorAnimation from 'components/atoms/animation/ErrorAnimation'\nimport Button from 'components/atoms/Button'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { links } from 'constants/Links'\nimport Layout from 'containers/Layout'\nimport { useFormik } from 'formik'\nimport { network } from 'helpers'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst ResetPassword = () => {\n  const route: any = useParams()\n\n  const [showResetFields, setShowResetFields] = useState(false)\n\n  const [error, setError] = useState('')\n\n  const verifyToken = async () => {\n    try {\n      const { data } = await network.post(\n        `/user/verifyResetToken/${route?.token}`\n      )\n      if (data.data.success) {\n        setError('')\n        setShowResetFields(true)\n      } else {\n        setShowResetFields(false)\n        setError(data.message)\n      }\n    } catch (error) {\n      setShowResetFields(false)\n      setError('Something went wrong')\n    }\n  }\n\n  const history = useHistory()\n  const updatePassword = async (newPassword: string) => {\n    try {\n      setSaving(true)\n      const { data } = await network.post(\n        `/user/updatePassword/${route.token}`,\n        {\n          newPassword,\n        }\n      )\n      if (data.status === 'error') {\n        setError(data.message)\n      }\n      history.push(links.LOGIN)\n      window.location.reload()\n    } catch (error) {\n      setError('Something went wrong')\n      console.error(error)\n      setSaving(false)\n    }\n  }\n\n  useEffect(() => {\n    if (route.token) {\n      verifyToken()\n    }\n  }, [])\n\n  const validationSchema = Yup.object({\n    newPassword: Yup.string()\n      .min(6, 'Password must be atleast 6 characters long')\n      .required('Please enter new password'),\n    confirmNewPassword: Yup.string()\n      .oneOf([Yup.ref('newPassword'), null], 'Password must match')\n      .required('Please enter confirm password'),\n  })\n\n  const formik = useFormik({\n    initialValues: {\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    onSubmit: async (values) => {\n      updatePassword(values.confirmNewPassword)\n    },\n    validationSchema,\n  })\n\n  const [saving, setSaving] = useState(false)\n\n  return (\n    <Layout title=\"Set new password\">\n      <div className=\"mt-8 mb-36 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white dark:bg-gray-900 border border-transparent dark:border-gray-700 py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          {error && (\n            <div className=\"flex flex-col items-center justify-center\">\n              <h3 className=\"text-center font-medium text-xl dark:text-gray-400\">\n                {error}\n              </h3>\n              <ErrorAnimation />\n            </div>\n          )}\n          {!error && showResetFields && (\n            <form\n              className=\"flex flex-col space-y-4\"\n              onSubmit={formik.handleSubmit}\n            >\n              <NormalFormInput\n                onChange={formik.handleChange}\n                value={formik.values.newPassword}\n                autoComplete={false}\n                type=\"password\"\n                showPasswordButton\n                label=\"New password\"\n                name=\"newPassword\"\n                error={formik.errors.newPassword || error}\n                id=\"newPassword\"\n              />\n              <NormalFormInput\n                onChange={formik.handleChange}\n                value={formik.values.confirmNewPassword}\n                autoComplete={false}\n                type=\"password\"\n                showPasswordButton\n                label=\"Confirm new password\"\n                name=\"confirmNewPassword\"\n                error={formik.errors.confirmNewPassword || error}\n                id=\"confirmNewPassword\"\n              />\n              <div className=\"mt-5 sm:mt-4 flex justify-end  items-center\">\n                <Button\n                  loading={saving}\n                  disabled={saving}\n                  loadingText=\"Changing password\"\n                  gradient\n                  fullWidth\n                  label=\"Save\"\n                  type=\"submit\"\n                />\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ResetPassword\n"],"sourceRoot":""}
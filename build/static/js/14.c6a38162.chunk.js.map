{"version":3,"sources":["pages/account/student/LocationStep.jsx"],"names":["LocationStep","useState","isLoaded","setIsLoaded","history","useHistory","useUserContext","values","setValues","saving","setSaving","validationSchema","Yup","country","required","pincode","setTimeout","location_within_area","fields","setFields","className","src","alt","initialValues","StudentStepTwo","onSubmit","_values","wait","then","student","location","window","localStorage","setItem","JSON","stringify","accountType","console","log","push","links","DASHBAORD","label","id","name","list","placeholder","selectedItem","onSelect","item","fullWidth","rounded","type","gradient","loading","onClick","goBack","text"],"mappings":"gPAgJeA,UAjIM,WAAO,IAAD,EACOC,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,KAEnBC,EAAUC,cAFS,EAGKC,cAAtBC,EAHiB,EAGjBA,OAAQC,EAHS,EAGTA,UAHS,EASGP,oBAAS,GATZ,mBASlBQ,EATkB,KASVC,EATU,KAWnBC,EAAmBC,IAAW,CAClCC,QAASD,MAAaE,SAAS,sBAC/BC,QAASH,MAAaE,SAAS,wBAgCjCE,YAAW,WACTb,GAAY,KACX,KA/CsB,MAgDGF,mBAAS,CAAEgB,qBAAsB,KAhDpC,mBAgDlBC,EAhDkB,KAgDVC,EAhDU,KAkDzB,OAAQjB,EAGN,sBAAKkB,UAAU,4EAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,sBACVC,IAA8B,YAC9BC,IAAI,aAEN,oBAAIF,UAAU,yDAAd,gCAGA,mBAAGA,UAAU,yCAAb,mGAMF,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,qDAAf,SACE,cAAC,IAAD,CACEG,cAAeC,IACfb,iBAAkBA,EAClBc,SAlDO,SAACC,GAChBhB,GAAU,GACViB,YAAK,KAAMC,MAAK,WAed,OAdAlB,GAAU,GACVF,EAAU,2BACLD,GADI,IAEPsB,QAAQ,2BACHtB,EAAOsB,SADL,IAELC,SAAS,2BACJvB,EAAOuB,UADJ,IAENjB,QAASa,EAAQb,QACjBE,QAASW,EAAQX,QACjBe,SAAUZ,EAAOD,4BAjBzBc,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,UAAU5B,EAAOsB,UAC7DE,OAAOC,aAAaC,QAAQ,cAAe1B,EAAO6B,aAClDC,QAAQC,IAAI,uDAoBHlC,EAAQmC,KAAKC,IAAMC,eA8BtB,SAKE,eAAC,IAAD,CAAMrB,UAAU,YAAhB,UACE,cAAC,IAAD,CACEsB,MAAM,mBACNC,GAAG,UACHC,KAAK,UACL9B,UAAQ,IAGV,cAAC,IAAD,CACE4B,MAAM,cACNC,GAAG,UACHC,KAAK,UACL9B,UAAQ,IAEV,qBAAKM,UAAU,OAAf,SACE,cAAC,IAAD,CACEsB,MAAO,4BACPG,KAtFK,CAAC,CAAEF,GAAI,EAAGC,KAAM,UAuFrBE,YAAa,kBACbC,aAAc7B,EAAOD,qBACrB+B,SAAU,SAACC,GAAD,OACR9B,EAAU,2BACLD,GADI,IAEPD,qBAAsBgC,EAAKL,aAMnC,8BACE,cAAC,IAAD,CACEM,WAAS,EACTC,QAAQ,aACRC,KAAK,SACLC,UAAQ,EACRC,QAAS7C,EACTiC,MAAM,2BAMhB,cAAC,IAAD,CACEa,QAASnD,EAAQoD,OACjBC,KAAK,UACLrC,UAAU,yBAGd,cAAC,IAAD,OAzEF,cAAC,IAAD","file":"static/js/14.c6a38162.chunk.js","sourcesContent":["import Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport TextButton from 'components/atoms/TextButton'\nimport Copyright from 'components/Copyright'\nimport Loading from 'components/Loading'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { links } from 'constants/Links'\nimport { StudentStepTwo } from 'initials'\nimport { useUserContext } from 'context/UserContext'\n\nconst LocationStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n  const { values, setValues } = useUserContext()\n\n  //capture inputs\n\n  const locationList = [{ id: 1, name: 'India' }]\n\n  const [saving, setSaving] = useState(false)\n\n  const validationSchema = Yup.object({\n    country: Yup.string().required('Please add country'),\n    pincode: Yup.string().required('Please add pincode'),\n  })\n\n  // for test purpose\n\n  const addDataToLS = () => {\n    window.localStorage.setItem('student', JSON.stringify(values.student))\n    window.localStorage.setItem('accountType', values.accountType)\n    console.log('Successfully added student account to local storage')\n  }\n\n  const onSubmit = (_values) => {\n    setSaving(true)\n    wait(3000).then(() => {\n      setSaving(false)\n      setValues({\n        ...values,\n        student: {\n          ...values.student,\n          location: {\n            ...values.location,\n            country: _values.country,\n            pincode: _values.pincode,\n            location: fields.location_within_area,\n          },\n        },\n      })\n      addDataToLS()\n      return history.push(links.DASHBAORD)\n    })\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n  const [fields, setFields] = useState({ location_within_area: '' })\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Welcome, Mohammad!\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Create a profile, connect with acquaintances and discuss topics that\n          interest you.\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-6\">\n          <Formik\n            initialValues={StudentStepTwo}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6\">\n              <FormInput\n                label=\"Country / region\"\n                id=\"country\"\n                name=\"country\"\n                required\n              />\n\n              <FormInput\n                label=\"Postal Code\"\n                id=\"pincode\"\n                name=\"pincode\"\n                required\n              />\n              <div className=\"mt-6\">\n                <Selector\n                  label={'Location within this area'}\n                  list={locationList}\n                  placeholder={'Select location'}\n                  selectedItem={fields.location_within_area}\n                  onSelect={(item) =>\n                    setFields({\n                      ...fields,\n                      location_within_area: item.name,\n                    })\n                  }\n                />\n              </div>\n\n              <div>\n                <Button\n                  fullWidth\n                  rounded=\"rounded-lg\"\n                  type=\"submit\"\n                  gradient\n                  loading={saving}\n                  label=\"Finish Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n        <TextButton\n          onClick={history.goBack}\n          text=\"Go back\"\n          className=\"inline-block mt-4\"\n        />\n      </div>\n      <Copyright />\n    </div>\n  )\n}\n\nexport default LocationStep\n"],"sourceRoot":""}
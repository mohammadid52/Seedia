{"version":3,"sources":["components/VerticalProfileCard.tsx","components/SideCard.tsx","pages/posts/SinglePostView.tsx"],"names":["VerticalProfileCard","user","content","isBusiness","useAccountType","defaultContent","className","business","name","company","jobTitle","href","links","getProfile","alt","src","coverPicture","profilePicture","avatarPlaceholder","fullName","news","readers","SideCard","secondary","cardTitle","map","_news","idx","SinglePostView","userData","route","useRouter","postUrl","match","params","useQuery","fetchPostById","data","isLoading","isFetched","isSuccess","post","pageTitle","firstColClass","firstCol","secondCol","userId","_id","thirdColClass","thirdCol"],"mappings":"iGAAA,mCA2DeA,IAtDa,SAAC,GAMtB,IAAD,IALJC,EAKI,EALJA,KAKI,IAJJC,eAII,MAJM,KAIN,EACIC,EAAeC,YAAeH,GAA9BE,WAEFE,EACJ,qCACE,mBAAGC,UAAU,qDAAb,SACGH,EAAU,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAMM,gBAAT,aAAG,EAAgBC,KAAnB,OAA0BP,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMQ,eAAhC,aAA0B,EAAeC,WAEtD,mBACEJ,UAAU,oDACVK,KAAMC,IAAMC,WAAWZ,GAFzB,SAIE,qBAAKK,UAAU,OAAf,oCAKN,OACE,sBAAKA,UAAU,aAAf,UACE,qBACEQ,IAAI,GACJC,KACM,OAAJd,QAAI,IAAJA,OAAA,EAAAA,EAAMe,cAAN,OACIf,QADJ,IACIA,OADJ,EACIA,EAAMe,aACN,qDAENV,UAAU,6CAEZ,qBAAKA,UAAU,4BAAf,SACE,qBACEQ,IAAI,GACJC,IAAKd,EAAKgB,eAAiBhB,EAAKgB,eAAiBC,IACjDZ,UAAU,oIAGd,sBAAKA,UAAS,sBAAiBJ,EAAU,GAAK,kBAA9C,UACE,mBACES,KAAMC,IAAMC,WAAWZ,GAAM,GAC7BK,UAAU,oEAFZ,SAIGL,EAAKkB,WAEPjB,GAAWG,U,iCCrDpB,4BAGMe,EAAO,CACX,CAAEZ,KAAM,oCAAqCa,QAAS,UACtD,CAAEb,KAAM,oCAAqCa,QAAS,UAEtD,CAAEb,KAAM,oCAAqCa,QAAS,WA6BzCC,IA1BE,WACf,OACE,cAAC,IAAD,CACEhB,UAAU,GACViB,WAAS,EACTC,UAAU,aACVtB,QACE,qBAAKI,UAAU,6BAAf,SACE,oBAAIA,UAAU,wBAAd,SACGmB,cAAIL,GAAM,SAACM,EAAOC,GAAR,OACT,qBAAcrB,UAAU,QAAxB,UACE,oBAAIA,UAAU,iFAAd,SACGoB,EAAMlB,OAET,oBAAGF,UAAU,yCAAb,6BACcoB,EAAML,QADpB,gBAJOM,c,iCCpBvB,0GAuEeC,UA3DQ,SAAC,GAAyC,IAAD,EAAtCC,EAAsC,EAAtCA,SAClBC,EAAaC,cACXC,GAAR,OAAoBF,QAApB,IAAoBA,GAApB,UAAoBA,EAAOG,aAA3B,aAAoB,EAAcC,QAA1BF,QAER,EAAkDG,mBAAS,QAAD,OAChDH,IACR,kBAAMI,YAAcJ,MAFdK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,UAK9BC,GAAeH,GAAaC,GAAaC,EAAYH,EAAKA,KAAKA,KAAO,GAEtEpC,EAAI,OAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAAMxC,KAEnB,OACE,sBAAKK,UAAU,uDAAf,UACE,cAAC,IAAD,CAAiBuB,SAAUA,IAC3B,cAAC,IAAD,CAAMa,UAAS,wBAEf,qBACEpC,UAAS,+DADX,SAGE,cAAC,IAAD,CACEqC,cAAa,0CACbC,SACE,qBAAKtC,UAAU,yBAAf,SACGiC,IAAcD,EACb,cAAC,IAAD,CAAqBrC,KAAMA,IAE3B,cAAC,IAAD,MAIN4C,UACE,qBAAKvC,UAAU,8CAAf,SACGgC,IAAcC,EACb,cAAC,IAAD,IAEA,cAAC,IAAD,CAAMV,SAAUA,EAAUiB,OAAQjB,EAASkB,IAAKN,KAAMA,MAI5DO,cAAc,WACdC,SACE,sBAAK3C,UAAU,aAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD","file":"static/js/47.6b68e6e5.chunk.js","sourcesContent":["import { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst VerticalProfileCard = ({\n  user,\n  content = null,\n}: {\n  user: IParent\n  content?: React.ReactNode\n}) => {\n  const { isBusiness } = useAccountType(user)\n\n  const defaultContent = (\n    <>\n      <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n        {isBusiness ? user?.business?.name : user?.company?.jobTitle}\n      </p>\n      <a\n        className=\"dark:text-white text-gray-900 text-lg font-medium\"\n        href={links.getProfile(user)}\n      >\n        <div className=\"mt-2\">View full profile</div>\n      </a>\n    </>\n  )\n\n  return (\n    <div className=\"plain-card\">\n      <img\n        alt=\"\"\n        src={\n          user?.coverPicture\n            ? user?.coverPicture\n            : 'https://source.unsplash.com/1600x900/?nature,water'\n        }\n        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n      />\n      <div className=\"flex justify-center -mt-8\">\n        <img\n          alt=\"\"\n          src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n          className=\"rounded-full  border-gradient border-transparent  lg:h-16 lg:w-16 h-12 w-12 dark:border-gray-800 border-white  border-2 -mt-3\"\n        />\n      </div>\n      <div className={`text-center ${content ? '' : 'px-3 pb-6 pt-2'}`}>\n        <a\n          href={links.getProfile(user, true)}\n          className=\"dark:text-white cursor-pointer text-gray-900 text-base font-bold \"\n        >\n          {user.fullName}\n        </a>\n        {content || defaultContent}\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalProfileCard\n","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news â€¢ {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { fetchPostById } from 'apis/queries'\nimport Meta from 'components/atoms/Meta/Meta'\nimport Post from 'components/posts/Post'\nimport SideCard from 'components/SideCard'\nimport Spinner from 'components/Spinner'\nimport VerticalProfileCard from 'components/VerticalProfileCard'\nimport { useRouter } from 'hooks/useRouter'\nimport { IParent, IPost } from 'interfaces/UniversalInterface'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport { useQuery } from 'react-query'\n\nconst SinglePostView = ({ userData }: { userData: IParent }) => {\n  const route: any = useRouter()\n  const { postUrl } = route?.match?.params\n\n  const { data, isLoading, isFetched, isSuccess } = useQuery(\n    `post-${postUrl}`,\n    () => fetchPostById(postUrl)\n  )\n\n  const post: IPost = !isLoading && isFetched && isSuccess ? data.data.data : {}\n\n  const user = post?.user\n\n  return (\n    <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n      <DashboardHeader userData={userData} />\n      <Meta pageTitle={`Post | Feed | 13RMS`} />\n\n      <div\n        className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n      >\n        <DashboardLayout\n          firstColClass={`   max-h-152 lg:block  xl:block w-full `}\n          firstCol={\n            <div className=\"flex flex-col gap-y-12\">\n              {isFetched && !isLoading ? (\n                <VerticalProfileCard user={user} />\n              ) : (\n                <Spinner />\n              )}\n            </div>\n          }\n          secondCol={\n            <div className=\"flex gap-y-4 mx-auto lg:max-w-2xl  flex-col\">\n              {isLoading && !isFetched ? (\n                <Spinner />\n              ) : (\n                <Post userData={userData} userId={userData._id} post={post} />\n              )}\n            </div>\n          }\n          thirdColClass=\"lg:block\"\n          thirdCol={\n            <div className=\"space-y-12\">\n              <SideCard />\n              <SideCard />\n              {/* <Following\n                  showSingleCard\n                  list={userData?.following}\n                  interests={userData?.background?.interests}\n                /> */}\n            </div>\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SinglePostView\n"],"sourceRoot":""}
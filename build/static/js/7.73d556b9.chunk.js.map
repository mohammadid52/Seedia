{"version":3,"sources":["components/Dropdown/Dropdown.tsx","pages/DashboardLayout.tsx","components/SideCard.tsx","components/posts/PostBottom.tsx","hooks/useOnScreen.ts","components/posts/Post.tsx"],"names":["Dropdown","list","as","className","Button","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","map","item","Item","active","style","zIndex","onClick","e","stopPropagation","classNames","Icon","name","DashboardLayout","firstCol","secondCol","thirdCol","firstColClass","firstColStyles","thirdColClass","thirdColStyles","mainClass","minHeight","news","readers","SideCard","secondary","cardTitle","content","_news","idx","label","PostBottom","AiOutlineLike","FaRegCommentDots","AiOutlineShareAlt","FiSend","useOnScreen","ref","rootMargin","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","disconnect","Post","post","userId","userData","user","postId","_id","toString","mutate","useMutation","viewPost","postRef","useRef","isCardOnScreen","isViewed","viewedBy","includes","iAmOwnerOfThisPost","setNotification","useNotifications","saveMutations","saveUnsavePost","featureMutations","featurePost","deleteMutations","deletePost","setTimeout","isSaved","savedPosts","isFeatured","featuredPosts","saved","setSaved","featured","setFeatured","commonDropdownList","id","nanoid","action","buttonText","buttonUrl","links","myItems","show","title","FaBookmark","FaRegBookmark","AiOutlineLink","navigator","clipboard","writeText","window","origin","postById","postUrl","dropdownList","fullName","firstName","myDropdownList","AiFillStar","AiOutlineStar","AiOutlineEdit","AiOutlineDelete","src","profilePicture","avatarPlaceholder","alt","href","getProfileById","profileUrl","other","template","followers","length","moment","postedOn","fromNow","text"],"mappings":"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","file":"static/js/7.73d556b9.chunk.js","sourcesContent":["/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport map from 'lodash/map'\nimport { IProduct } from 'interfaces/UniversalInterface'\nimport { IconType } from 'react-icons/lib'\n\ntype Item = {\n  id: string\n  onClick: (product?: IProduct) => void\n  name: string\n  Icon?: IconType\n}\n\nconst Dropdown = ({ list }: { list: Item[] }) => {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"rounded-full flex items-center text-gray-400 hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-yellow-100 focus:ring-yellow-500\">\n          <span className=\"sr-only\">Open options</span>\n          <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            {map(list, (item) => (\n              <Menu.Item>\n                {({ active }) => (\n                  <div\n                    style={{ zIndex: 999 }}\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      if (typeof item.onClick === 'function') {\n                        item.onClick()\n                      }\n                    }}\n                    className={classNames(\n                      active\n                        ? 'bg-gray-100 dark:bg-gray-600 dark:text-white text-gray-900'\n                        : 'text-gray-700 dark:bg-gray-700 dark:text-white',\n                      'items-center px-4 py-2 flex text-sm cursor-pointer'\n                    )}\n                  >\n                    {item.Icon && <item.Icon className=\"mr-2\" />}\n                    {item.name}\n                  </div>\n                )}\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","import React from 'react'\n\nconst DashboardLayout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  firstColClass,\n  firstColStyles,\n  thirdColClass,\n  thirdColStyles,\n  mainClass = '',\n}: {\n  firstColClass?: string\n  mainClass?: string\n  firstColStyles?: any\n  firstCol?: React.ReactNode\n  thirdColClass?: string\n  thirdColStyles?: any\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n}) => {\n  return (\n    <div className=\"flex-grow pt-24 w-full px-4 md:max-w-6xl lg:max-w-7xl sm:max-w-5xl mx-auto xl:px-8 lg:flex relative\">\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 px-6 sm:px-4 lg:px-0  min-w-0 bg-gray-100 dark:bg-gray-900 xl:flex\">\n        <div\n          style={{ ...firstColStyles }}\n          className={`${firstColClass}  dark:bg-gray-900 xl:flex-shrink-0 xl:w-64 bg-gray-100`}\n        >\n          <div\n            className=\"h-full py-6\n          \"\n          >\n            {/* Start left column area */}\n            <div className=\"h-full  relative\" style={{ minHeight: '12rem' }}>\n              {firstCol}\n            </div>\n            {/* End left column area */}\n          </div>\n        </div>\n\n        <div className=\"bg-gray-100 dark:bg-gray-900 lg:min-w-0 lg:pl-6 pl-0 lg:flex-1 \">\n          <div className=\"h-full py-6 px-0 lg:px-6 xl:px-8\">\n            {/* Start main area*/}\n            <div className=\"relative h-full \" style={{}}>\n              {secondCol}\n            </div>\n            {/* End main area */}\n          </div>\n        </div>\n      </div>\n\n      <div\n        style={{ ...thirdColStyles }}\n        className={`${thirdColClass} bg-gray-100 dark:bg-gray-900 px-4 lg:px-0 lg:flex-shrink-0 `}\n      >\n        <div className=\"h-full pl-0 lg:pl-6  py-6 \">\n          {/* Start right column area */}\n          <div className=\"h-full relative\" style={{ minHeight: '16rem' }}>\n            {thirdCol}\n          </div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardLayout\n","import Card from 'components/atoms/Card'\nimport { map } from 'lodash'\n\nconst news = [\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n\n  { name: 'WHO sets global vaccination goals', readers: '54,460' },\n]\n\nconst SideCard = () => {\n  return (\n    <Card\n      className=\"\"\n      secondary\n      cardTitle=\"13RMS News\"\n      content={\n        <div className=\"text-left  cursor-pointer \">\n          <ul className=\"flex flex-col gap-y-4\">\n            {map(news, (_news, idx: number) => (\n              <li key={idx} className=\" pl-2\">\n                <h6 className=\"text-xs font-semibold mb-1 uppercase link-hover dark:text-white text-gray-900 \">\n                  {_news.name}\n                </h6>\n                <p className=\"text-gray-500 uppercase text-xs italic\">\n                  Top news • {_news.readers} readers\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      }\n    />\n  )\n}\n\nexport default SideCard\n","import { AiOutlineLike } from 'react-icons/ai'\nimport { IconType } from 'react-icons/lib'\nimport { FaRegCommentDots } from 'react-icons/fa'\nimport { AiOutlineShareAlt } from 'react-icons/ai'\nimport { FiSend } from 'react-icons/fi'\n\nconst Button = ({ Icon, label }: { Icon: IconType; label: string }) => {\n  return (\n    <button className=\"flex m-2 hover:bg-gray-200 text-sm text-gray-700 dark:text-gray-400 items-center justify-center py-2 rounded-lg transition-all px-3 duration-300 dark:hover:bg-gray-700\">\n      <Icon className=\"mr-2\" />\n      {label}\n    </button>\n  )\n}\n\nconst PostBottom = () => {\n  return (\n    <div className=\"grid grid-cols-4 px-2 mb-2\">\n      <Button Icon={AiOutlineLike} label=\"Like\" />\n      <Button Icon={FaRegCommentDots} label=\"Comment\" />\n      <Button Icon={AiOutlineShareAlt} label=\"Share\" />\n      <Button Icon={FiSend} label=\"Send\" />\n    </div>\n  )\n}\n\nexport default PostBottom\n","import { useEffect, useState } from 'react'\n\nconst useOnScreen = (ref: any, rootMargin: string = '0px') => {\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIntersecting(entry.isIntersecting),\n      {\n        rootMargin,\n      }\n    )\n\n    if (ref.current) {\n      observer.observe(ref.current!)\n      // Remove the observer as soon as the component is unmounted\n    }\n    return () => {\n      observer.disconnect()\n    }\n  }, [ref])\n\n  return isIntersecting\n}\n\nexport default useOnScreen\n","import {\n  saveUnsavePost,\n  viewPost,\n  featurePost,\n  deletePost,\n} from 'apis/mutations'\nimport Dropdown from 'components/Dropdown/Dropdown'\nimport PostBottom from 'components/posts/PostBottom'\nimport { links } from 'constants/Links'\nimport useOnScreen from 'hooks/useOnScreen'\nimport { IPost, IParent } from 'interfaces/UniversalInterface'\nimport moment from 'moment'\nimport { useEffect, useState, useRef } from 'react'\nimport { FaRegBookmark, FaBookmark } from 'react-icons/fa'\nimport { useMutation } from 'react-query'\nimport { nanoid } from 'nanoid'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport {\n  AiOutlineStar,\n  AiFillStar,\n  AiOutlineLink,\n  AiOutlineEdit,\n  AiOutlineDelete,\n} from 'react-icons/ai'\nimport { useNotifications } from 'context/NotificationContext'\n\nconst Post = ({\n  post,\n  userId,\n  userData,\n}: {\n  post: IPost\n  userId: string\n  userData: IParent\n}) => {\n  const user = post.user\n  const postId: string = post._id.toString()\n\n  const { mutate } = useMutation(() => viewPost(postId))\n\n  const postRef = useRef(null)\n  const isCardOnScreen = useOnScreen(postRef)\n\n  const isViewed = post.viewedBy.includes(userId)\n\n  const iAmOwnerOfThisPost = user._id.toString() === userId\n  const { setNotification } = useNotifications()\n\n  const saveMutations = useMutation(saveUnsavePost)\n  const featureMutations = useMutation(featurePost)\n  const deleteMutations = useMutation(deletePost)\n\n  useEffect(() => {\n    if (isCardOnScreen && !isViewed && !iAmOwnerOfThisPost) {\n      setTimeout(() => {\n        mutate()\n      }, 300)\n    }\n  }, [isCardOnScreen, isViewed])\n\n  const isSaved = userData?.savedPosts?.includes(postId.toString())\n  const isFeatured = userData?.featuredPosts?.includes(postId.toString())\n\n  const [saved, setSaved] = useState(isSaved)\n  const [featured, setFeatured] = useState(isFeatured)\n\n  const commonDropdownList = [\n    {\n      id: nanoid(),\n      name: saved ? 'Unsave' : 'Save for later',\n      onClick: () => {\n        if (saved) {\n          // @ts-ignore\n          saveMutations.mutate({\n            action: 'unsave',\n            postId: postId.toString(),\n          })\n          setSaved(false)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post unsaved.',\n          })\n        } else {\n          // @ts-ignore\n          saveMutations.mutate({ action: 'save', postId: postId.toString() })\n          setSaved(true)\n          setNotification({\n            buttonText: 'My items',\n            buttonUrl: links.myItems(),\n            show: true,\n            title: 'Post saved.',\n          })\n        }\n      },\n      Icon: saved ? FaBookmark : FaRegBookmark,\n    },\n    {\n      Icon: AiOutlineLink,\n      id: nanoid(),\n      name: 'Copy link to post',\n      onClick: () => {\n        navigator.clipboard.writeText(\n          window.origin + links.postById(post.postUrl)\n        )\n      },\n    },\n  ]\n\n  const dropdownList = [\n    ...commonDropdownList,\n    {\n      id: '3',\n      name: `Unfollow ${user?.fullName || user.firstName}`,\n      onClick: () => {},\n    },\n  ]\n\n  // Show this if the post is mine\n  const myDropdownList = [\n    ...commonDropdownList,\n    {\n      id: '1',\n      name: 'Feature on top of profile',\n      onClick: () => {\n        if (featured) {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'unfeature',\n            postId: postId.toString(),\n          })\n          setFeatured(false)\n          setNotification({\n            show: true,\n            title: 'Post removed from featured list.',\n          })\n        } else {\n          // @ts-ignore\n          featureMutations.mutate({\n            action: 'feature',\n            postId: postId.toString(),\n          })\n          setNotification({\n            show: true,\n            title: 'Post added to featured list.',\n          })\n          setFeatured(true)\n        }\n      },\n      Icon: featured ? AiFillStar : AiOutlineStar,\n    },\n    {\n      id: '4',\n      name: `Edit post`,\n      Icon: AiOutlineEdit,\n      onClick: () => {},\n    },\n    {\n      id: '5',\n      name: `Delete post`,\n      Icon: AiOutlineDelete,\n      onClick: () => {\n        deleteMutations.mutate(postId)\n      },\n    },\n  ]\n\n  return (\n    <div\n      ref={postRef}\n      className=\"rounded-lg overflow-x-hidden  dark:bg-gray-800 border border-gray-200 bg-white dark:border-gray-700 \"\n    >\n      <div className=\"flex w-full items-center justify-between px-6\">\n        <div className=\"flex  py-4\">\n          <div className=\"mr-4 flex-shrink-0\">\n            <img\n              src={\n                user.profilePicture ? user.profilePicture : avatarPlaceholder\n              }\n              alt=\"13RMS\"\n              className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <a\n              href={links.getProfileById(\n                user?.profileUrl,\n                user?.other?.template,\n                'public'\n              )}\n            >\n              <h4 className=\"text-base hover:underline  dark:text-white font-bold\">\n                {user?.fullName || '--'}\n              </h4>\n            </a>\n            <span className=\"text-gray-500 text-xs dark:text-gray-500\">\n              {user?.followers?.length || 0} followers{' '}\n              <span className=\"text-xs dark:text-gray-500 text-gray-500 font-medium\">\n                • {moment(post.postedOn).fromNow()}\n              </span>\n            </span>\n          </div>\n        </div>\n        <div className=\"relative\">\n          <Dropdown list={iAmOwnerOfThisPost ? myDropdownList : dropdownList} />\n        </div>\n      </div>\n      <div className=\"px-6 pb-4\">\n        <p className=\"text-gray-700 dark:text-gray-400 text-sm whitespace-pre-line\">\n          {post.text}\n        </p>\n      </div>\n      {post.links && post.links.length > 0 && (\n        <img className=\"w-full\" src={post.links[0]} alt=\"Mountain\" />\n      )}\n\n      {/* <div className=\"px-6 pt-4 pb-2\">\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #photography\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #travel\n        </span>\n        <span className=\"inline-block bg-gray-200 dark:bg-gray-700 dark:text-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n          #winter\n        </span>\n      </div> */}\n\n      <PostBottom />\n    </div>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}
{"version":3,"sources":["utils/functions/index.js","components/atoms/Modal.tsx","components/atoms/form/FormError.tsx","components/atoms/FormInput.tsx","components/atoms/NormalFormInput.tsx","components/alerts/Error.tsx","components/Spinner.tsx","components/atoms/FormSelector.tsx","assets/svg/placeholder.png","pages/DashboardLayout.tsx","components/DiscoverButton.tsx","components/VerticalProfileCard.tsx","components/event/CreateEvent.tsx","pages/dashboard/PostModal.tsx","pages/dashboard/PostPhotoModal.tsx","pages/dashboard/PostInput.tsx","assets/svg/no-posts.svg","pages/groups/InviteUserModal.tsx","pages/groups/SingleGroupView.tsx"],"names":["eclipse","str","len","length","substring","join","arr","key","joinPattern","map","d","doResize","e","textbox","target","txt","value","cols","arraytxt","split","rows","i","parseInt","plural","sumOfMonths","diff","removedWords","getTags","filter","tag","includes","getFromNowTime","time","moment","fromNow","Modal","open","setOpen","children","header","onClose","disableBackdropClose","hideCloseBtn","fixedBottom","disablePadding","Root","show","as","Fragment","static","style","zIndex","className","noop","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","type","onClick","FormError","error","FormInput","label","id","name","placeholder","gridClass","required","showPasswordButton","optional","hideBorders","textarea","setUnsavedChanges","withButton","disabled","textClass","errorClass","info","useState","showPass","setShowPass","useField","field","meta","setValue","onChange","htmlFor","autoFocus","touched","Boolean","NormalFormInput","fullWidth","autoComplete","success","props","onKeyDown","onKeyPress","onKeyUp","Error","errors","idx","Spinner","FormSelector","list","selectedItem","onSelect","border","helpers","setTouched","setError","selectedOption","undefined","Label","Button","onBlur","Options","item","Option","hasOwnProperty","active","classNames","selected","DashboardLayout","firstCol","secondCol","thirdCol","firstColClass","firstColStyles","thirdColClass","thirdColStyles","mainClass","minHeight","DiscoverCard","extraItems","useQuery","fetchEvents","isFetched","isLoading","data","shortEventsData","href","links","groups","ev","viewEvent","_id","eventName","link","VerticalProfileCard","user","content","isBusiness","useAccountType","defaultContent","business","company","jobTitle","getProfile","alt","src","coverPicture","profilePicture","avatarPlaceholder","fullName","CreateEvent","validationSchema","Yup","min","max","eventDescription","initialValues","startDate","Date","endDate","startTime","endTime","timezone","formRef","useRef","setNotification","useNotifications","useMutation","createEvent","onSuccess","message","eventId","title","buttonText","buttonUrl","mutate","isError","values","setValues","upload","uploadMultipleImages","a","b","finalImageList","img","coverPhoto","find","originalname","location","profilePhoto","setCoverPhoto","setProfilePhoto","uploadFunction","fd","FormData","append","setTimeout","onSubmit","profileImageSelectorRef","coverImageSelectorRef","ref","files","accept","enableReinitialize","innerRef","current","click","showFileExplorerForCover","URL","createObjectURL","showFileExplorerForProfile","text","t","toString","rounded","loading","gradient","size","PostModal","setNewPostAdded","usePostContext","addPost","postUrl","postById","modifiedData","postData","PostPhotoModal","isPhoto","media","setMedia","uploadMediaToServer","postType","altText","nanoid","url","postImageRef","onAltText","setOnAltText","setAltText","invert","controls","controlsList","preventDefault","PostInput","customButtons","showPostModal","setShowPostModal","showOtherModals","setShowOtherModals","showEventModal","setShowEventModal","defaultButtons","Icon","HiOutlinePhotograph","BsCameraVideo","bgColor","BiCalendarEvent","RiArticleLine","Card","InviteUserModal","followingList","group","refetchGroup","selectedUsers","setSelectedUsers","config","users","fetchUsers","isSuccess","sendInvite","unselectAll","sendingInvites","errorSendingInvites","localUsers","setLocalUsers","useEffect","getType","loadingText","targetIdArray","groupId","onSendInvite","toLowerCase","searchedList","firstName","lastName","isPersonal","alreadyMember","members","g","requestSent","requests","findIndex","remove","unshift","onUserClick","checked","companyName","background","education","userId","ExitGroup","showModal","setShowModal","history","useHistory","exitGroup","push","targetId","SingleGroupView","userData","useParams","isMember","verifyMember","FEED","fetchGroupById","refetch","groupData","Loading","isOwner","createdBy","isAdmin","admin","authorized","DashboardHeader","Meta","pageTitle","following","createdOn","format","followers","groupName","CgPoll","NoPosts","cardTitle","slice","member","groupDescription","groupRules","_admin"],"mappings":"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","file":"static/js/26.feb009aa.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const maxSize = Math.max(image.width, image.height)\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n\nexport const eclipse = (str = '', len = 50) => {\n  if (str.length > len) {\n    return str.substring(0, len) + '...'\n  } else return str\n}\n\nexport const join = (arr, key, joinPattern = ',') =>\n  arr.map((d) => d[key]).join(joinPattern)\n\nexport const toDataURL = (url, callback) => {\n  var xhr = new XMLHttpRequest()\n  xhr.onload = function () {\n    var reader = new FileReader()\n    reader.onloadend = function () {\n      callback(reader.result)\n    }\n    reader.readAsDataURL(xhr.response)\n  }\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.send()\n}\nexport const doResize = (e) => {\n  const textbox = e.target\n  var maxrows = 50\n  var txt = textbox.value\n  var cols = textbox.cols\n\n  var arraytxt = txt?.split('\\n')\n  var rows = arraytxt.length\n\n  for (let i = 0; i < arraytxt.length; i++)\n    // @ts-ignore\n    rows += parseInt(arraytxt[i].length / cols)\n\n  if (rows > maxrows) textbox.rows = maxrows\n  else textbox.rows = rows\n}\n\nexport const plural = (str = '', len = 0) => {\n  if (len > 1) {\n    return `${str}s`\n  } else {\n    return str\n  }\n}\n\nexport const sumOfMonths = (diff = 0) => {\n  if (diff <= 12) {\n    return `${diff} ${plural('month', diff)}`\n  } else if (diff % 12 === 0) {\n    return `${diff / 12} ${plural('year', diff)}`\n  } else {\n    return `${12 - (diff % 12)} ${plural('year', diff)} ${diff % 12} ${plural(\n      'month',\n      diff\n    )}`\n  }\n}\n\nexport const removedWords = [\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'or',\n  'for',\n  'nor',\n  'so',\n  'yet',\n  'at',\n  'by',\n  'from',\n  'in',\n  'into',\n  'of',\n  'on',\n  'to',\n  'with',\n  'am',\n  'are',\n  'be',\n  'been',\n  'can',\n  'could',\n  'did',\n  'do',\n  'does',\n  'had',\n  'has',\n  'have',\n  'is',\n  'may',\n  'might',\n  'must',\n  'ought to',\n  'shall',\n  'should',\n  'was',\n  'were',\n  'will',\n  'would',\n]\n\nexport const getTags = (str) => {\n  if (str && str.length > 0) {\n    return str.split(' ').filter((tag) => !removedWords.includes(tag))\n  }\n}\n\nexport const getFromNowTime = (time) => moment(time).fromNow()\n","import React, { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { noop } from 'lodash'\n\nconst Modal = ({\n  open = false,\n  setOpen,\n  children,\n  header,\n  onClose,\n  disableBackdropClose = true,\n  hideCloseBtn = false,\n  fixedBottom,\n  disablePadding = false,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  header?: string\n\n  disableBackdropClose?: boolean\n  hideCloseBtn?: boolean\n  disablePadding?: boolean\n  fixedBottom?: React.ReactNode\n  onClose?: () => void\n}) => {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        style={{ zIndex: 9999 }}\n        className=\"fixed inset-0 overflow-y-auto\"\n        open={open}\n        onClose={!disableBackdropClose ? (onClose ? onClose : setOpen) : noop}\n      >\n        <div\n          className={`pb-20 flex items-end justify-center min-h-screen pt-4 px-4 text-center sm:block sm:p-0`}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed dark:bg-black inset-0 bg-gray-500 opacity-50 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div\n              className={`inline-block align-bottom  bg-white dark:bg-gray-900 rounded-lg ${\n                disablePadding ? '' : 'px-4 sm:p-6'\n              } pt-5  text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top   pb-4`}\n            >\n              {!hideCloseBtn && (\n                <div className=\"hidden sm:block absolute top-0 right-0 pt-6 pr-6\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-white dark:bg-gray-900 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n                    onClick={() => (onClose ? onClose() : setOpen(false))}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              )}\n              <div className=\"modal-body\">\n                {header && (\n                  <div className=\"modal-header divider dark:divider px-4\">\n                    <h3 className=\"dark:text-white text-gray-900 text-xl font-normal\">\n                      {header}\n                    </h3>\n                  </div>\n                )}\n                <div className=\"\">{children}</div>\n                {fixedBottom && (\n                  <div className=\"absolute dark:border-gray-800 border-t bg-white dark:bg-gray-900 bottom-0 mx-6 inset-x-0\">\n                    {fixedBottom}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\nexport default Modal\n","import { Transition } from '@headlessui/react'\n\nconst FormError = ({ show, error }: { show: boolean; error: string }) => {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition duration-100 ease-out\"\n      enterFrom=\"transform scale-95 opacity-0\"\n      enterTo=\"transform scale-100 opacity-100\"\n      leave=\"transition duration-75 ease-out\"\n      leaveFrom=\"transform scale-100 opacity-100\"\n      leaveTo=\"transform scale-95 opacity-0\"\n      className=\"mt-2\"\n    >\n      <p className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\">\n        {error}\n      </p>\n    </Transition>\n  )\n}\n\nexport default FormError\n","import { Transition } from '@headlessui/react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport FormError from 'components/atoms/form/FormError'\nimport { useField } from 'formik'\nimport React, { useState } from 'react'\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai'\n\nconst FormInput = ({\n  label,\n  id,\n  name = '',\n  type = 'text',\n  placeholder,\n  error,\n  value = '',\n\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  hideBorders = false,\n  textarea = false,\n  setUnsavedChanges = () => {},\n  withButton,\n  disabled,\n  rows,\n  textClass = 'sm:text-sm',\n  cols,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  hideBorders?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  value?: string\n\n  gridClass?: string\n  props?: any\n  rows?: number\n  cols?: number\n  showPasswordButton?: boolean\n  textarea?: boolean\n  info?: string\n  disabled?: boolean\n  withButton?: any\n  textClass?: string\n\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue } = helpers\n\n  const onChange = (e: any) => {\n    setUnsavedChanges(true)\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={gridClass}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required ? (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          ) : (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\"></span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      {textarea ? (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <textarea\n              rows={rows}\n              cols={cols}\n              autoFocus\n              // ref={inputRef}\n              id={id}\n              placeholder={placeholder}\n              onChange={onChange}\n              className={`block border w-full pr-2 ${\n                error ? errorClass : ''\n              } ${textClass} p-2 ${\n                hideBorders\n                  ? 'border-transparent'\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 transition-all  dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 top-0 right-0 p-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <FormError\n            show={Boolean(meta.touched && meta.error)}\n            error={meta.error}\n          />\n          {/* <Transition\n            show={Boolean(meta.touched && meta.error)}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n            className=\"mt-2\"\n          >\n            <p\n              className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n              id={`${name || id}-error`}\n            >\n              {meta.error}\n            </p>\n          </Transition> */}\n        </div>\n      ) : (\n        <div>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              disabled={disabled}\n              id={id}\n              // ref={inputRef}\n              autoFocus\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`unstyled block border w-full pr-2 ${\n                error ? errorClass : ''\n              } sm:text-sm p-2 ${\n                hideBorders\n                  ? 'border-transparent '\n                  : 'dark:border-gray-700 border-gray-300'\n              } rounded-md dark:bg-gray-900 dark:text-white`}\n            />\n            <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n              {meta.touched && meta.error && (\n                <div className=\" pointer-events-none\">\n                  <ExclamationCircleIcon\n                    className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                    aria-hidden=\"true\"\n                  />\n                </div>\n              )}\n\n              {showPasswordButton && field.value && (\n                <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                  {showPass ? (\n                    <AiOutlineEyeInvisible\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <AiOutlineEye\n                      className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex mt-2 items-center justify-between\">\n            <Transition\n              show={Boolean(meta.touched && meta.error)}\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <p\n                className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name || id}-error`}\n              >\n                {meta.error}\n              </p>\n            </Transition>\n            {!Boolean(meta.touched && meta.error) && <div />}\n            {withButton &&\n            !Boolean(meta.touched && meta.error) &&\n            field.value.length > 3 ? (\n              withButton\n            ) : (\n              <div className=\"\" />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default FormInput\n","import { useState } from 'react'\nimport { ExclamationCircleIcon } from '@heroicons/react/solid'\nimport {\n  AiFillCheckCircle,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai'\nimport { Transition } from '@headlessui/react'\nimport { doResize } from 'utils/functions'\n\nconst NormalFormInput = ({\n  label,\n  id,\n  name,\n  type = 'text',\n  placeholder,\n  error,\n  value,\n  onChange,\n  gridClass,\n  required,\n  showPasswordButton = false,\n  optional = false,\n  fullWidth = false,\n  textarea = false,\n  className = '',\n  rows = 4,\n  cols = 100,\n  autoComplete = true,\n  success = null,\n  info = '',\n  ...props\n}: {\n  label?: string\n  id?: string\n  name?: string\n  required?: boolean\n  optional?: boolean\n  type?: string\n  placeholder?: string\n  error?: string\n  className?: string\n  value: string | undefined\n  success?: boolean | null\n  onChange: (e: any) => void\n  gridClass?: string\n  props?: any\n  showPasswordButton?: boolean\n  fullWidth?: boolean\n  autoComplete?: boolean\n  textarea?: boolean\n  rows?: number\n  cols?: number\n  info?: string\n}) => {\n  const errorClass = `border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500`\n  const [showPass, setShowPass] = useState(false)\n  return (\n    <div className={`${gridClass} ${fullWidth ? 'w-full' : ''}`}>\n      <div className=\"flex justify-between\">\n        <label\n          htmlFor={name}\n          className=\"block dark:text-white text-sm font-medium text-gray-700\"\n        >\n          {label}{' '}\n          {required && (\n            <span className=\"text-red-500 dark:text-red-400 font-medium text-base\">\n              *\n            </span>\n          )}\n        </label>\n        {optional && (\n          <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n            Optional\n          </span>\n        )}\n      </div>\n\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          {textarea ? (\n            <textarea\n              {...props}\n              id={id}\n              value={value}\n              onKeyDown={doResize}\n              onKeyPress={doResize}\n              onKeyUp={doResize}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              rows={rows}\n              cols={cols}\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          ) : (\n            <input\n              {...props}\n              id={id}\n              autoComplete={autoComplete ? 'true' : 'false'}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder={placeholder}\n              type={\n                showPasswordButton ? (showPass ? 'text' : 'password') : type\n              }\n              className={`block border w-full pr-10 ${\n                error\n                  ? errorClass\n                  : 'focus:ring-yellow-500 focus:border-yellow-500 border-gray-300'\n              } sm:text-sm p-2 rounded-md transition-all dark:placeholder-gray-600 dark:bg-gray-900 dark:border-gray-700 dark:text-white ${className}`}\n            />\n          )}\n\n          <div className=\"flex items-center absolute transition-all duration-200 inset-y-0 right-0 pr-3 \">\n            {error ? (\n              <div className=\" pointer-events-none\">\n                <ExclamationCircleIcon\n                  className=\"h-5 w-5 text-red-500 dark:text-red-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : success !== null && success === true ? (\n              <div className=\" pointer-events-none\">\n                <AiFillCheckCircle\n                  className=\"h-5 w-5 text-green-500 dark:text-gren-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            ) : null}\n\n            {showPasswordButton && value && (\n              <div className=\"ml-2\" onClick={() => setShowPass(!showPass)}>\n                {showPass ? (\n                  <AiOutlineEyeInvisible\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  <AiOutlineEye\n                    className=\"h-5 w-5 text-gray-400 cursor-pointer hover:text-gray-500\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {info && (\n          <p\n            className=\"transition-all mt-1 duration-200 text-sm text-right text-gray-600 dark:text-gray-500\"\n            id={`${name || id}-info`}\n          >\n            {info}\n          </p>\n        )}\n\n        <Transition\n          show={Boolean(error)}\n          enter=\"transition duration-100 ease-out\"\n          enterFrom=\"transform scale-95 opacity-0\"\n          enterTo=\"transform scale-100 opacity-100\"\n          leave=\"transition duration-75 ease-out\"\n          leaveFrom=\"transform scale-100 opacity-100\"\n          className=\"mt-1\"\n          leaveTo=\"transform scale-95 opacity-0\"\n        >\n          <p\n            className=\"transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n            id={`${name || id}-error`}\n          >\n            {error}\n          </p>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\nexport default NormalFormInput\n","import { XCircleIcon } from '@heroicons/react/solid'\nimport { map } from 'lodash'\n\nconst Error = ({ errors }: { errors: string[] }) => {\n  return (\n    <div className=\"rounded-md bg-red-50 dark:bg-gray-900 border dark:border-gray-700 border-transparent p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon\n            className=\"h-5 w-5 dark:text-red-300 text-red-400\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800 dark:text-red-500\">\n            There were {errors.length} errors with your submission\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-400\">\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {map(errors, (error, idx) => (\n                <li key={idx}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","const Spinner = () => {\n  return (\n    <div className=\" flex m-4 justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-24 w-24 border-t-2 border-b-2 border-pink-500\"></div>\n    </div>\n  )\n}\n\nexport default Spinner\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { classNames } from 'utils/classNames'\nimport { useField } from 'formik'\n\ninterface SelecterProps {\n  list: { name: string; id?: string }[]\n  placeholder?: string\n  label?: string\n  required?: boolean\n  selectedItem?: string\n  onSelect?: (event: any) => void\n  border?: boolean\n  name: string\n  setUnsavedChanges?: React.Dispatch<React.SetStateAction<boolean>>\n  className?: string\n}\n\nconst FormSelector = ({\n  list,\n  placeholder = '',\n  label = '',\n  required = false,\n  selectedItem,\n  onSelect = () => {},\n  border = true,\n  name,\n  className = '',\n  setUnsavedChanges,\n}: SelecterProps) => {\n  const [field, meta, helpers] = useField(name)\n\n  const { setValue, setTouched, setError } = helpers\n\n  const onOptionSelect = (selectedOption: { name: string }) => {\n    setValue(selectedOption.name)\n    onSelect(selectedOption)\n    setTouched(true)\n    setError(undefined)\n    if (typeof setUnsavedChanges === 'function') {\n      setUnsavedChanges(true)\n    }\n  }\n\n  return (\n    <Listbox {...field} onChange={onOptionSelect}>\n      {({ open }) => (\n        <div className={className}>\n          {label && (\n            <Listbox.Label className=\"block dark:text-white text-sm font-medium text-gray-700\">\n              {label}{' '}\n              {required && (\n                <span className=\"text-red-500 font-medium text-base\">*</span>\n              )}\n            </Listbox.Label>\n          )}\n          <div className=\"mt-1 relative\">\n            <Listbox.Button\n              onBlur={() => {\n                setError('This field is required')\n              }}\n              className={`bg-white dark:bg-gray-900 relative w-full ${\n                border ? 'border' : ''\n              } dark:border-gray-700 border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm`}\n            >\n              <span\n                className={`block truncate ${\n                  !field?.value\n                    ? 'dark:text-gray-500 text-gray-400 '\n                    : 'dark:text-white text-gray-900'\n                }`}\n              >\n                {field?.value?.length > 0\n                  ? field?.value\n                  : selectedItem || placeholder}\n              </span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            {meta.touched && meta.error && (\n              <p\n                className=\"mt-2 transition-all duration-200 text-sm text-red-600 dark:text-red-500\"\n                id={`${name}-error`}\n              >\n                {meta.error}\n              </p>\n            )}\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                static\n                className=\"pl-0 absolute scroll-dark-md z-10 mt-1 w-full bg-white dark:bg-gray-700 shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n              >\n                {list.map((item, idx) => (\n                  <Listbox.Option\n                    disabled={item.hasOwnProperty('disabled')}\n                    key={item.name + idx}\n                    className={({ active }) =>\n                      classNames(\n                        active\n                          ? 'text-white bg-gradient-to-r from-pink-500 to-yellow-500'\n                          : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={item}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span\n                          className={classNames(\n                            selected ? 'font-semibold ' : 'font-normal',\n                            'block truncate dark:text-white text-left'\n                          )}\n                        >\n                          {item.name}\n                        </span>\n\n                        {selected ? (\n                          <CheckIcon\n                            className={classNames(\n                              active ? 'text-white' : 'text-indigo-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4 h-5 w-5'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </div>\n      )}\n    </Listbox>\n    //     )\n    //   }}\n    // </Field>\n  )\n}\nexport default FormSelector\n","export default __webpack_public_path__ + \"static/media/placeholder.c69d1bed.png\";","import React from 'react'\n\nconst DashboardLayout = ({\n  firstCol,\n  secondCol,\n  thirdCol,\n  firstColClass,\n  firstColStyles,\n  thirdColClass,\n  thirdColStyles,\n  mainClass = '',\n}: {\n  firstColClass?: string\n  mainClass?: string\n  firstColStyles?: any\n  firstCol?: React.ReactNode\n  thirdColClass?: string\n  thirdColStyles?: any\n  secondCol?: React.ReactNode\n  thirdCol?: React.ReactNode\n}) => {\n  return (\n    <div className=\"flex-grow pt-24 w-full px-4 md:max-w-6xl lg:max-w-7xl sm:max-w-5xl mx-auto xl:px-8 lg:flex relative\">\n      {/* Left sidebar & main wrapper */}\n      <div className=\"flex-1 px-6 sm:px-4 lg:px-0  min-w-0 bg-gray-100 dark:bg-gray-900 xl:flex\">\n        {firstCol && (\n          <div\n            style={{ ...firstColStyles }}\n            className={`${firstColClass}  dark:bg-gray-900 xl:flex-shrink-0 xl:w-64 bg-gray-100`}\n          >\n            <div\n              className=\"h-full py-6\n          \"\n            >\n              {/* Start left column area */}\n              <div className=\"h-full  relative\" style={{ minHeight: '12rem' }}>\n                {firstCol}\n              </div>\n              {/* End left column area */}\n            </div>\n          </div>\n        )}\n\n        {secondCol && (\n          <div className=\"bg-gray-100 dark:bg-gray-900 lg:min-w-0 lg:pl-6 pl-0 lg:flex-1 \">\n            <div className=\"h-full py-6 px-0 lg:px-6 xl:px-8\">\n              {/* Start main area*/}\n              <div className=\"relative h-full \" style={{}}>\n                {secondCol}\n              </div>\n              {/* End main area */}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div\n        style={{ ...thirdColStyles }}\n        className={`${thirdColClass} bg-gray-100 dark:bg-gray-900 px-4 lg:px-0 lg:flex-shrink-0 `}\n      >\n        <div className=\"h-full pl-0 lg:pl-6  py-6 \">\n          {/* Start right column area */}\n          <div className=\"h-full relative\" style={{ minHeight: '16rem' }}>\n            {thirdCol}\n          </div>\n          {/* End right column area */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardLayout\n","import { links } from 'constants/Links'\nimport { useQuery } from 'react-query'\nimport { fetchEvents } from 'apis/queries'\n\nconst DiscoverCard = ({\n  extraItems,\n}: {\n  extraItems?: { name: string; link: string }[]\n}) => {\n  const { isFetched, isLoading, data } = useQuery('short-event-names', () =>\n    fetchEvents(true)\n  )\n\n  const shortEventsData: { _id: string; eventName: string }[] =\n    isFetched && !isLoading ? data?.data?.data : []\n  return (\n    <div className=\"rounded-lg  border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n      <div className=\"\">\n        <div className=\"p-4 flex flex-col gap-y-3 text-xs font-medium text-link\">\n          <a href={links.groups()} className=\"hover:underline cursor-pointer\">\n            Groups\n          </a>\n          <div className=\"flex flex-col\">\n            <div className=\" cursor-pointer flex  items-center justify-between\">\n              <div className=\"hover:underline \">Events</div>\n              <div className=\"text-gray-900 dark:text-gray-500 text-base hover:bg-gray-700 rounded-full h-6 transition-all w-6 flex items-center justify-center\">\n                +\n              </div>\n            </div>\n            {shortEventsData &&\n              shortEventsData.length > 0 &&\n              shortEventsData.map((ev) => (\n                <a\n                  href={links.viewEvent(ev._id)}\n                  className=\"py-2 text-xs font-medium text-gray-500 dark:text-gray-500 hover:underline cursor-pointer\"\n                >\n                  {ev.eventName}\n                </a>\n              ))}\n          </div>\n          <div className=\"hover:underline cursor-pointer\">Followed Hastags</div>\n          {extraItems &&\n            extraItems.length > 0 &&\n            extraItems.map((item) => (\n              <a\n                href={item.link}\n                key={item.name}\n                className=\"hover:underline cursor-pointer\"\n              >\n                {item.name}\n              </a>\n            ))}\n        </div>\n        <div className=\"flex items-center cursor-pointer hover:bg-gray-200 transition-all dark:hover:bg-gray-700 gap-y-2  justify-center px-4 border-t py-4  text-sm font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700\">\n          <p>Discover more</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverCard\n","import { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IParent } from 'interfaces/UniversalInterface'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst VerticalProfileCard = ({\n  user,\n  content = null,\n}: {\n  user: IParent\n  content?: React.ReactNode\n}) => {\n  const { isBusiness } = useAccountType(user)\n\n  const defaultContent = (\n    <>\n      <p className=\"text-sm font-medium dark:text-white text-gray-500 \">\n        {isBusiness ? user?.business?.name : user?.company?.jobTitle}\n      </p>\n      <a\n        className=\"dark:text-white text-gray-900 text-lg font-medium\"\n        href={links.getProfile(user)}\n      >\n        <div className=\"mt-2\">View full profile</div>\n      </a>\n    </>\n  )\n\n  return (\n    <div className=\"plain-card\">\n      <img\n        alt=\"\"\n        src={\n          user?.coverPicture\n            ? user?.coverPicture\n            : 'https://source.unsplash.com/1600x900/?nature,water'\n        }\n        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n      />\n      <div className=\"flex justify-center -mt-8\">\n        <img\n          alt=\"\"\n          src={user.profilePicture ? user.profilePicture : avatarPlaceholder}\n          className=\"rounded-full border-solid lg:h-16 lg:w-16 h-12 w-12 dark:border-gray-800 border-white  border-2 -mt-3\"\n        />\n      </div>\n      <div className={`text-center ${content ? '' : 'px-3 pb-6 pt-2'}`}>\n        <a\n          href={links.getProfile(user, true)}\n          className=\"dark:text-white cursor-pointer text-gray-900 text-base font-bold \"\n        >\n          {user.fullName}\n        </a>\n        {content || defaultContent}\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalProfileCard\n","import { createEvent, uploadMultipleImages } from 'apis/mutations'\nimport placeholder from 'assets/svg/placeholder.png'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport FormSelector from 'components/atoms/FormSelector'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { Form, Formik } from 'formik'\nimport { IEvent } from 'interfaces/UniversalInterface'\nimport { map } from 'lodash'\nimport React, { useRef, useState } from 'react'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { useMutation } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\nimport { timezone } from 'values/values'\nimport * as Yup from 'yup'\n\nconst CreateEvent = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const validationSchema = Yup.object({\n    eventName: Yup.string().required('Event Name is required').min(10).max(150),\n    eventDescription: Yup.string()\n      .required('Event Description is required')\n      .min(10)\n      .max(600),\n\n    // startTime\n  })\n\n  // @ts-ignore\n  const initialValues: IEvent = {\n    eventName: '',\n    eventDescription: '',\n    startDate: new Date(),\n    endDate: new Date(),\n    startTime: '',\n    endTime: '',\n    timezone: '',\n  }\n\n  const formRef = useRef()\n  const { setNotification } = useNotifications()\n\n  const { mutate, isLoading, isError, error } = useMutation(createEvent, {\n    onSuccess: (data) => {\n      // console.log(data)\n      const message = data.data.message\n      const eventId = data.data.data\n      setNotification({\n        show: true,\n        title: message,\n        buttonText: 'View',\n        buttonUrl: links.viewEvent(eventId),\n      })\n    },\n  })\n\n  const [values, setValues] = useState(null)\n\n  const upload = useMutation(uploadMultipleImages, {\n    onSuccess: (a, b) => {\n      if (values) {\n        if (a.data.data && a.data.data.length) {\n          const finalImageList: any[] = map(a.data.data, (img) => img)\n\n          mutate({\n            ...values,\n            coverPhoto: finalImageList.find(\n              (img) => img.originalname === coverPhoto.name\n            )?.location,\n\n            profilePhoto: finalImageList.find(\n              (img) => img.originalname === profilePhoto.name\n            )?.location,\n          })\n        } else {\n          mutate({\n            ...values,\n          })\n        }\n        setOpen(false)\n        setCoverPhoto(null)\n        setProfilePhoto(null)\n      }\n    },\n  })\n\n  const uploadFunction = () => {\n    const fd = new FormData()\n\n    fd.append('images', profilePhoto)\n    fd.append('images', coverPhoto)\n\n    setTimeout(() => {\n      upload.mutate(fd)\n    }, 500)\n  }\n\n  const onSubmit = async (values: any) => {\n    setValues({ ...values })\n    uploadFunction()\n  }\n\n  const profileImageSelectorRef = useRef()\n\n  const showFileExplorerForProfile = () =>\n    //@ts-ignore\n    profileImageSelectorRef?.current?.click()\n\n  const coverImageSelectorRef = useRef()\n\n  const showFileExplorerForCover = () =>\n    //@ts-ignore\n    coverImageSelectorRef?.current?.click()\n\n  const [profilePhoto, setProfilePhoto] = useState<any>()\n\n  const [coverPhoto, setCoverPhoto] = useState<any>()\n\n  return (\n    <Modal disablePadding setOpen={setOpen} header=\"Create event\" open={open}>\n      <div className=\" min-w-200 pb-4  max-w-200 min-h-164 max-h-164 overflow-y-auto\">\n        <div className=\"px-1\">\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={coverImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setCoverPhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n          {/* HIDDEN IMAGE INPUT */}\n          <input\n            // @ts-ignore\n            ref={profileImageSelectorRef}\n            className=\"hidden\"\n            type=\"file\"\n            onChange={(e) => setProfilePhoto(e.target.files[0])}\n            accept=\"image/x-png,image/jpeg\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            enableReinitialize\n            innerRef={formRef}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            <Form className=\"space-y-6 \">\n              <div className=\" overflow-hidden  bg-white dark:bg-gray-900\">\n                <div className=\"relative  group\">\n                  <div className=\"absolute top-0 right-0 p-4\">\n                    <AiOutlineEdit className=\"bg-gray-100   transition-all hover:bg-gray-300 duration-300 rounded-full p-2 text-gray-700 h-8 w-8\" />\n                  </div>\n                  <img\n                    alt=\"\"\n                    onClick={() => showFileExplorerForCover()}\n                    src={\n                      coverPhoto ? URL.createObjectURL(coverPhoto) : placeholder\n                    }\n                    className=\"w-full lg:h-36 sm:h-24 object-cover h-20\"\n                  />\n                </div>\n                <div className=\"flex  relative justify-start mr-8 ml-8 -mt-12\">\n                  <img\n                    onClick={() => showFileExplorerForProfile()}\n                    alt=\"\"\n                    src={\n                      profilePhoto\n                        ? URL.createObjectURL(profilePhoto)\n                        : avatarPlaceholder\n                    }\n                    className=\" border-solid  lg:h-24 lg:w-24 h-16 w-16  border-white border-2 -mt-3\"\n                  />\n                </div>\n              </div>\n              <div className=\"px-8 space-y-4\">\n                <h3 className=\"dark:text-white text-gray-900 font-semibold \">\n                  Details\n                </h3>\n                <FormInput\n                  label=\"Event Name\"\n                  id=\"eventName\"\n                  name=\"eventName\"\n                  required\n                />\n\n                <FormSelector\n                  label=\"Timezone\"\n                  required\n                  name=\"timezone\"\n                  selectedItem={timezone[0].text}\n                  list={timezone.map((t) => ({ name: t.text, id: t.value }))}\n                  placeholder=\"What is the purpose of this group?\"\n                />\n\n                <div className=\"flex items-center justify-between w-full gap-x-2\">\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startDate\"\n                        label=\"Start date\"\n                        type=\"date\"\n                      />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"startTime\"\n                        label=\"Start time\"\n                        required\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 \">\n                    <div className=\"mx-2\">\n                      <FormInput name=\"endDate\" label=\"End date\" type=\"date\" />\n                    </div>\n                    <div className=\"mx-2\">\n                      <FormInput\n                        name=\"endTime\"\n                        required\n                        label=\"End time\"\n                        type=\"time\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <FormInput\n                  label=\"Description\"\n                  required\n                  id=\"eventDescription\"\n                  name=\"eventDescription\"\n                  placeholder=\"Ex. Topics, schedule, etc.\"\n                  textarea\n                  rows={2}\n                  cols={255}\n                />\n              </div>\n\n              {isError && (\n                <div className=\"px-8\">\n                  <Error errors={[error.toString()]} />\n                </div>\n              )}\n              <div className=\"flex p-4 items-center justify-end\">\n                <Button\n                  rounded=\"rounded-full\"\n                  loading={upload.isLoading || isLoading}\n                  disabled={upload.isLoading || isLoading}\n                  gradient\n                  size=\"lg\"\n                  type=\"submit\"\n                  label=\"Submit\"\n                />\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default CreateEvent\n","import { addPost } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Modal from 'components/atoms/Modal'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { Form, Formik } from 'formik'\nimport { useRef } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostModal = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const initialValues = {\n    text: '',\n  }\n  const formRef = useRef()\n\n  const onSubmit = (values: { text: string }) => {\n    const modifiedData = {\n      postData: { text: values.text },\n    }\n    mutate(modifiedData)\n  }\n\n  return (\n    <Modal setOpen={setOpen} header=\"Create a post\" open={open}>\n      <div className=\" min-w-132 min-h-56 max-h-132 overflow-y-auto\">\n        <Formik\n          innerRef={formRef}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            <FormInput\n              gridClass=\"hideBorders\"\n              hideBorders\n              textClass=\"text-sm text-gray-700 dark:text-gray-100 sm:text-lg\"\n              placeholder=\"What do you want to talk about?\"\n              rows={10}\n              name=\"text\"\n              id=\"text\"\n              textarea\n            />\n            <div className=\"mt-5 m-1 sm:mt-4 flex justify-end  items-center\">\n              <Button\n                gradient\n                loading={isLoading}\n                // @ts-ignore\n                disabled={formRef?.current?.values.text.length <= 0}\n                type=\"submit\"\n                label=\"Post\"\n                size=\"lg\"\n              />\n            </div>\n            {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n          </Form>\n        </Formik>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import { addPost, uploadMediaToServer } from 'apis/mutations'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport NormalFormInput from 'components/atoms/NormalFormInput'\nimport { links } from 'constants/Links'\nimport { useNotifications } from 'context/NotificationContext'\nimport { usePostContext } from 'context/PostContext'\nimport { nanoid } from 'nanoid'\nimport React, { useRef, useState } from 'react'\nimport { useMutation } from 'react-query'\n\nconst PostPhotoModal = ({\n  open,\n  setOpen,\n  isPhoto = true,\n}: {\n  open: boolean\n  isPhoto: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const { setNotification } = useNotifications()\n  const { setNewPostAdded } = usePostContext()\n  const { mutate, isLoading, isError, error } = useMutation(addPost, {\n    onSuccess: (data) => {\n      const postUrl = data.data.data\n      setNewPostAdded(true)\n      setOpen(false)\n      setNotification({\n        show: true,\n        title: 'New post added.',\n        buttonText: 'View',\n        buttonUrl: links.postById(postUrl),\n      })\n    },\n  })\n\n  const [media, setMedia] = useState(null)\n\n  const upload = useMutation(uploadMediaToServer, {\n    onSuccess: (a) => {\n      const modifiedData = {\n        postData: {\n          postType: 'withPhoto',\n          text: altText || '',\n          links: [\n            {\n              id: nanoid(12),\n              url: a.data.data.location,\n              type: isPhoto ? 'image' : 'video',\n            },\n          ],\n        },\n      }\n      mutate(modifiedData)\n    },\n  })\n\n  const postImageRef: any = useRef()\n\n  const onImageSelect = (e: any) => {\n    const img = e.target.files[0]\n    setMedia(img)\n  }\n\n  const showFileExplorer = () => postImageRef?.current?.click()\n\n  const onCancel = () => {\n    setMedia(null)\n    setOpen(false)\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('image', media)\n\n    upload.mutate(fd)\n  }\n\n  const [onAltText, setOnAltText] = useState(false)\n  const [altText, setAltText] = useState('')\n\n  const onAltTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target\n    setAltText(value)\n  }\n\n  return (\n    <Modal\n      disablePadding\n      setOpen={setOpen}\n      header={`Edit your ${isPhoto ? 'photo' : 'video'}`}\n      open={open}\n    >\n      <div className=\" min-w-132 max-w-132 min-h-56 max-h-132 flex items-center justify-center overflow-y-auto\">\n        {media ? (\n          <div className=\"\">\n            {onAltText ? (\n              <div className=\"px-12\">\n                <h4 className=\"mb-1 text-gray-600 dark:text-gray-500\">\n                  Alt text\n                </h4>\n                <p className=\"dark:text-gray-700 text-gray-400 mb-2\">\n                  Alt text describes images for people who have trouble seeing\n                  them. If you don’t add alt text, it may be automatically\n                  generated after you post. You can edit it anytime.\n                </p>\n                <NormalFormInput\n                  value={altText}\n                  onChange={onAltTextChange}\n                  textarea\n                  rows={6}\n                />\n                <div className=\"mt-5 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    onClick={() => {\n                      setAltText('')\n                      setOnAltText(false)\n                    }}\n                    invert\n                    label=\"Cancel\"\n                    size=\"sm\"\n                  />\n                  <Button\n                    gradient\n                    rounded=\"rounded-full\"\n                    label=\"Save\"\n                    onClick={() => {\n                      setOnAltText(false)\n                    }}\n                    size=\"sm\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div>\n                {isPhoto ? (\n                  <img\n                    className=\"w-full\"\n                    src={URL.createObjectURL(media)}\n                    alt=\"\"\n                  />\n                ) : (\n                  <video\n                    controls\n                    className=\"w-full\"\n                    controlsList=\"nodownload\"\n                    src={URL.createObjectURL(media)}\n                  />\n                )}\n              </div>\n            )}\n            <div className=\"absolute bottom-5 left-5 pt-4 mb-2 pl-4\">\n              <Button\n                onClick={() => setOnAltText(!onAltText)}\n                invert={!onAltText}\n                label=\"Alt text\"\n              />\n            </div>\n          </div>\n        ) : (\n          <Button\n            onClick={showFileExplorer}\n            label={`Select ${isPhoto ? 'image' : 'video'} to share`}\n            gradient\n            invert\n            size=\"lg\"\n          />\n        )}\n\n        {/* HIDDEN IMAGE INPUT */}\n        <input\n          // @ts-ignore\n          ref={postImageRef}\n          className=\"hidden\"\n          type=\"file\"\n          onChange={onImageSelect}\n          accept={isPhoto ? 'image/*' : 'video/*'}\n        />\n      </div>\n      <div className=\"mt-5 border-t border-gray-200 dark:border-gray-700 pt-4 gap-x-4 px-4 m-1 sm:mt-4 flex justify-end  items-center\">\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          onClick={onCancel}\n          invert\n          label=\"Cancel\"\n          size=\"lg\"\n        />\n        <Button\n          gradient\n          rounded=\"rounded-full\"\n          loading={isLoading || upload.isLoading}\n          label=\"Done\"\n          onClick={onSubmit}\n          size=\"lg\"\n        />\n      </div>\n      {isError && <p className=\"text-red-500 text-sm\">{error}</p>}\n    </Modal>\n  )\n}\n\nexport default PostPhotoModal\n","import Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport CreateEvent from 'components/event/CreateEvent'\nimport PostModal from 'pages/dashboard/PostModal'\nimport PostPhotoModal from 'pages/dashboard/PostPhotoModal'\nimport React, { useState } from 'react'\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst PostInput = ({\n  profilePicture,\n  customButtons = null,\n  placeholder = 'Start a post',\n  disabled,\n}: {\n  profilePicture?: string\n  customButtons?: React.ReactNode\n  placeholder?: string\n  disabled?: boolean\n}) => {\n  const [showPostModal, setShowPostModal] = useState(false)\n  const [showOtherModals, setShowOtherModals] = useState('init')\n  const [showEventModal, setShowEventModal] = useState(false)\n\n  const defaultButtons = (\n    <>\n      <Button\n        gradient\n        invert\n        // className=\"dark:border-gray-600\"\n        Icon={HiOutlinePhotograph}\n        label=\"Photo\"\n        onClick={() => setShowOtherModals('photo')}\n      />\n      <Button\n        gradient\n        Icon={BsCameraVideo}\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        invert\n        onClick={() => setShowOtherModals('video')}\n        label=\"Video\"\n      />\n      <Button\n        gradient\n        Icon={BiCalendarEvent}\n        // className=\"dark:border-gray-600\"\n        invert\n        bgColor=\"blue\"\n        onClick={() => setShowEventModal(true)}\n        label=\"Event\"\n      />\n      <Button\n        gradient\n        Icon={RiArticleLine}\n        invert\n        // className=\"dark:border-gray-600\"\n        bgColor=\"blue\"\n        label=\"Write articles\"\n      />\n    </>\n  )\n\n  return (\n    <>\n      {!disabled && (\n        <PostModal open={showPostModal} setOpen={setShowPostModal} />\n      )}\n      {(showOtherModals === 'photo' || showOtherModals === 'video') && (\n        <PostPhotoModal\n          isPhoto={showOtherModals === 'photo'}\n          open\n          setOpen={() => setShowOtherModals('init')}\n        />\n      )}\n      <CreateEvent open={showEventModal} setOpen={setShowEventModal} />\n      <Card\n        content={\n          <div className=\"flex flex-col space-y-8\">\n            <div className=\"flex w-full\">\n              <img\n                src={profilePicture ? profilePicture : avatarPlaceholder}\n                alt=\"13RMS\"\n                className=\"sm:h-14 h-12 w-12 sm:w-14  border-gradient border-transparent border-2 rounded-full\"\n              />\n              <div\n                onClick={() => setShowPostModal(true)}\n                className=\"cursor-pointer sm:h-14 h-12  transition-all duration-300 hover:bg-gray-200 dark:hover:bg-gray-700 ml-4 w-full rounded-full bg-white flex items-center text-gray-500 dark:text-gray-400 justify-start px-4 text-left dark:bg-gray-800 border border-gray-400 dark:border-gray-700\"\n              >\n                {placeholder}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              {customButtons || defaultButtons}\n            </div>\n          </div>\n        }\n      />\n    </>\n  )\n}\n\nexport default PostInput\n","export default __webpack_public_path__ + \"static/media/no-posts.25d46d19.svg\";","import { XIcon } from '@heroicons/react/solid'\nimport { sendInvite } from 'apis/mutations'\nimport { fetchUsers } from 'apis/queries'\nimport Error from 'components/alerts/Error'\nimport Button from 'components/atoms/Button'\nimport Modal from 'components/atoms/Modal'\nimport Spinner from 'components/Spinner'\nimport useAccountType from 'hooks/useAccountType'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport { findIndex, remove } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useMutation, useQuery } from 'react-query'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst InviteUserModal = ({\n  open,\n  setOpen,\n  followingList,\n  group,\n  refetchGroup,\n}: {\n  open: boolean\n  group: IGroup\n  followingList: string[]\n  refetchGroup: any\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const [selectedUsers, setSelectedUsers] = useState<IParent[]>([])\n\n  const config = {\n    users: followingList,\n  }\n  const { data, isFetched, isLoading, isSuccess } = useQuery(`user-list`, () =>\n    fetchUsers(config)\n  )\n\n  const {\n    mutate,\n    isLoading: sendingInvites,\n    error: errorSendingInvites,\n  } = useMutation(sendInvite, {\n    onSuccess: () => {\n      setOpen(false)\n      unselectAll()\n      refetchGroup()\n    },\n  })\n\n  const onUserClick = (user: IParent) => {\n    const selectedIdx = findIndex(selectedUsers, ['_id', user._id])\n    if (selectedIdx !== -1) {\n      // selected\n      remove(selectedUsers, ['_id', user._id])\n    } else {\n      selectedUsers.unshift(user)\n\n      // not selected\n    }\n    setSelectedUsers([...selectedUsers])\n  }\n\n  const unselectAll = () => {\n    setSelectedUsers([])\n  }\n\n  const unselect = (userId: string) => {\n    remove(selectedUsers, ['_id', userId])\n    setSelectedUsers([...selectedUsers])\n  }\n\n  const users: IParent[] =\n    !isLoading && isFetched && isSuccess ? data.data.data.users : []\n\n  const [localUsers, setLocalUsers] = useState<IParent[]>([])\n  useEffect(() => {\n    if (users && users.length > 0) {\n      setLocalUsers([...users])\n    }\n  }, [users])\n\n  const { getType } = useAccountType()\n\n  const onSendInvite = () => {\n    const targetIdArray = selectedUsers.map((user) => user._id)\n    mutate({ targetIdArray, groupId: group._id })\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.toLowerCase()\n    let searchedList = users.filter((user) => {\n      return (\n        user.firstName.toLowerCase().includes(value) ||\n        user.lastName.toLowerCase().includes(value) ||\n        user.fullName.toLowerCase().includes(value)\n      )\n    })\n    setLocalUsers([...searchedList])\n  }\n\n  return (\n    <Modal\n      fixedBottom={\n        <div>\n          {!isLoading && isFetched && (\n            <div className=\"flex items-center justify-end  p-4\">\n              <Button\n                label={`Invite ${\n                  selectedUsers.length > 0 ? selectedUsers.length : ''\n                }`}\n                size=\"lg\"\n                loading={sendingInvites}\n                loadingText=\"Sending invites\"\n                onClick={() => onSendInvite()}\n                disabled={selectedUsers.length <= 0}\n                gradient\n                rounded=\"rounded-full\"\n              />\n            </div>\n          )}\n        </div>\n      }\n      header=\"Invite connections\"\n      open={open}\n      setOpen={setOpen}\n    >\n      <div className=\"lg:min-w-160 min-w-132 max-w-256\">\n        {!isLoading && isFetched ? (\n          <div>\n            <div className=\"w-full\">\n              <input\n                type=\"search\"\n                placeholder=\"Search by name\"\n                className=\"w-full py-2 px-4 outline-none border-none focus:ring-1 text-gray-600 dark:text-gray-400 text-sm focus:ring-yellow-500 bg-transparent h-full\"\n                onChange={onChange}\n              />\n            </div>\n            <div className=\"grid grid-cols-5 p-2 border-t border-gray-200 dark:border-gray-800\">\n              <div className=\"col-span-3 min-h-136 pb-12  max-h-136 flex flex-col  overflow-y-scroll overflow-x-hidden \">\n                {localUsers.map((user: IParent) => {\n                  const { isBusiness, isPersonal } = getType(user)\n                  const alreadyMember = Boolean(\n                    // @ts-ignore\n                    group.members.find((g) => g._id === user._id)\n                  )\n                  const requestSent = Boolean(\n                    // @ts-ignore\n                    group.requests.find((g) => g === user._id)\n                  )\n                  return (\n                    <div\n                      key={user._id}\n                      className={`p-2 py-4 relative cursor-pointer border-b border-gray-200 dark:border-gray-700 ${\n                        alreadyMember || requestSent\n                          ? 'dark:bg-gray-800 opacity-75 bg-gray-100 pointer-events-none'\n                          : 'dark:hover:bg-gray-800 hover:bg-gray-100'\n                      }  transition-all`}\n                      onClick={() => onUserClick(user)}\n                    >\n                      <div className=\"flex  cursor-pointer items-center \">\n                        <input\n                          id=\"users\"\n                          // onChange={(e) => onUserClick(user)}\n                          name=\"candidates\"\n                          checked={Boolean(\n                            selectedUsers.find((d) => d._id === user._id)\n                          )}\n                          type=\"checkbox\"\n                          className=\"focus:ring-yellow-500 mr-4 h-5 w-5 text-yellow-600 border-gray-300 rounded\"\n                        />\n                        <img\n                          src={user.profilePicture || avatarPlaceholder}\n                          alt=\"\"\n                          className=\"rounded-full mr-2 h-12 w-12\"\n                        />\n                        <div>\n                          <h4 className=\"dark:text-white text-gray-900\">\n                            {user.fullName}\n                          </h4>\n                          <p className=\"dark:text-gray-500 text-gray-600 text-sm\">\n                            {isBusiness\n                              ? user?.business?.name\n                              : isPersonal\n                              ? user?.company?.companyName\n                              : user?.background?.education &&\n                                user?.background?.education[0].name}\n                          </p>\n                        </div>\n                      </div>\n                      {(alreadyMember || requestSent) && (\n                        <p className=\"absolute text-xs italic dark:text-gray-500 text-gray-400 bottom-1 right-2 \">\n                          {alreadyMember ? 'Already member' : 'Request sent'}\n                        </p>\n                      )}\n                    </div>\n                  )\n                })}\n              </div>\n              <div className=\"col-span-2 ml-2\">\n                <div className=\"border-b text-sm border-gray-200 dark:border-gray-800  text-gray-500 dark:text-gray-400 p-4 flex items-center justify-between\">\n                  <p>{selectedUsers.length} selected</p>\n                  <button\n                    onClick={unselectAll}\n                    className=\"font-medium dark:text-gray-300\"\n                  >\n                    Unselect all\n                  </button>\n                </div>\n                <div className=\"p-4 pr-0 flex flex-col gap-y-4 max-w-56 min-w-56  max-h-136 pb-20 overflow-y-scroll mx-2\">\n                  {selectedUsers &&\n                    selectedUsers.length > 0 &&\n                    selectedUsers.map((user: IParent) => (\n                      <div className=\"flex  items-center  justify-between\">\n                        <div className=\"flex items-center\">\n                          <img\n                            src={user.profilePicture || avatarPlaceholder}\n                            alt=\"\"\n                            className=\"rounded-full mr-2 h-8 w-8\"\n                          />\n                          <h4 className=\"dark:text-white\">{user.fullName}</h4>\n                        </div>\n                        <div\n                          onClick={() => unselect(user._id)}\n                          className=\"dark:hover:bg-gray-700 transition-all rounded-full p-0.5\"\n                        >\n                          <XIcon\n                            className=\"cursor-pointer h-5 w-5   dark:text-gray-400\"\n                            aria-hidden=\"true\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"flex items-center justify-center\">\n            <Spinner />\n          </div>\n        )}\n        <div>\n          {errorSendingInvites && (\n            <Error errors={[errorSendingInvites.toString()]} />\n          )}\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default InviteUserModal\n","import { fetchGroupById } from 'apis/queries'\nimport { exitGroup } from 'apis/mutations'\nimport NoPosts from 'assets/svg/no-posts.svg'\nimport Button from 'components/atoms/Button'\nimport Card from 'components/atoms/Card'\nimport Meta from 'components/atoms/Meta/Meta'\nimport DiscoverCard from 'components/DiscoverButton'\nimport Loading from 'components/Loading'\nimport Spinner from 'components/Spinner'\nimport VerticalProfileCard from 'components/VerticalProfileCard'\nimport { links } from 'constants/Links'\nimport useAccountType from 'hooks/useAccountType'\nimport { IGroup, IParent } from 'interfaces/UniversalInterface'\nimport moment from 'moment'\nimport PostInput from 'pages/dashboard/PostInput'\nimport DashboardHeader from 'pages/DashboardHeader'\nimport DashboardLayout from 'pages/DashboardLayout'\nimport InviteUserModal from 'pages/groups/InviteUserModal'\nimport { useEffect, useState } from 'react'\nimport { BsCameraVideo } from 'react-icons/bs'\nimport { CgPoll } from 'react-icons/cg'\nimport { HiOutlinePhotograph } from 'react-icons/hi'\nimport { useMutation, useQuery } from 'react-query'\nimport { useHistory, useParams } from 'react-router'\nimport Modal from 'components/atoms/Modal'\nimport { avatarPlaceholder } from 'state/Redux/constants'\n\nconst ExitGroup = ({\n  userId,\n  groupId,\n}: {\n  userId: string\n  groupId: string\n}) => {\n  const [showModal, setShowModal] = useState(false)\n  const history = useHistory()\n  const { mutate } = useMutation(exitGroup, {\n    onSuccess: () => {\n      history.push(links.groups())\n    },\n  })\n\n  return (\n    <>\n      <Modal header=\"Confirm\" open={showModal} setOpen={setShowModal}>\n        <div className=\" \">\n          <p className=\"dark:text-gray-400 text-gray-500 text-lg\">\n            Are you sure you want to exit this group?\n          </p>\n          <div className=\"flex items-center p-4 justify-end\">\n            <Button\n              label=\"Confirm\"\n              gradient\n              onClick={() => mutate({ targetId: userId, groupId: groupId })}\n            />\n          </div>\n        </div>\n      </Modal>\n      <div className=\"rounded-lg border dark:border-gray-700  border-gray-200  overflow-hidden lg:max-w-xs bg-white dark:bg-gray-800 \">\n        <h1\n          onClick={() => setShowModal(true)}\n          className=\"text-center hover:bg-red-500 hover:text-white rounded-lg p-2 cursor-pointer text-red-500\"\n        >\n          Exit group\n        </h1>\n      </div>\n    </>\n  )\n}\n\nconst SingleGroupView = ({ userData }: { userData: IParent }) => {\n  const params: any = useParams()\n  const groupId = params.groupId\n\n  // check if the current user is a member of group\n  const verifyMember = () => {\n    let isMember = false\n    if (groupId) {\n      if (\n        !userData ||\n        userData?.groups === undefined ||\n        userData?.groups?.length === 0\n      ) {\n        isMember = false\n      } else if (userData.groups.includes(groupId)) {\n        isMember = true\n      } else {\n        isMember = false\n      }\n    } else {\n      isMember = false\n    }\n    return isMember\n  }\n\n  const history = useHistory()\n\n  const isMember = verifyMember()\n  useEffect(() => {\n    if (!isMember) {\n      history.push(links.FEED)\n    }\n  }, [groupId, isMember])\n\n  const { data, isLoading, isFetched, refetch } = useQuery('group-data', () =>\n    fetchGroupById(groupId)\n  )\n  const groupData: IGroup = isFetched && !isLoading && data.data.data\n\n  const { getType } = useAccountType(userData)\n  const [showModal, setShowModal] = useState(false)\n\n  if (isLoading && !isFetched) {\n    return <Loading />\n  }\n\n  const isOwner = groupData?.createdBy?.toString() === userData._id\n  const isAdmin = groupData?.admin?.includes(userData._id)\n\n  const authorized = isOwner || isAdmin\n\n  return (\n    isMember && (\n      <div className=\"relative  dark:bg-gray-900 bg-gray-100 min-h-screen \">\n        <DashboardHeader userData={userData} />\n        <Meta pageTitle={`Post | Feed | 13RMS`} />\n\n        {authorized && (\n          <InviteUserModal\n            refetchGroup={refetch}\n            group={groupData}\n            followingList={userData.following}\n            open={showModal}\n            setOpen={setShowModal}\n          />\n        )}\n\n        <div\n          className={`h-auto pt-4 relative flow-root  transition-all duration-500 `}\n        >\n          <DashboardLayout\n            firstColClass={`   max-h-152 lg:block  xl:block w-full `}\n            firstCol={\n              <div className=\"flex flex-col gap-y-12\">\n                {isFetched && !isLoading ? (\n                  <>\n                    <VerticalProfileCard\n                      content={\n                        <div>\n                          <div>\n                            <div className=\"ml-2 flex-shrink-0 items-center justify-center flex\">\n                              <p className=\"px-2 inline-flex text-sm items-center justify-center leading-5 font-semibold rounded-md bg-gray-100 text-gray-800 dark:bg-gray-600 dark:text-gray-200\">\n                                {isOwner\n                                  ? 'Owner'\n                                  : isAdmin\n                                  ? 'Admin'\n                                  : 'Member'}\n                              </p>\n                            </div>\n\n                            <p className=\"mb-4 text-gray-600 dark:text-gray-400 text-sm tracking-wide mt-1\">\n                              Group created:{' '}\n                              {moment(groupData.createdOn).format('MMM YYYY')}\n                            </p>\n                            {authorized && (\n                              <div className=\"flex border-t py-2 text-xs font-medium text-gray-500 dark:text-gray-500 border-gray-200 dark:border-gray-700 transition-all  item-center px-4 cursor-pointer justify-between\">\n                                <h6 className=\"font-medium \">\n                                  Requests to join\n                                </h6>\n                                <a\n                                  href={links.followers()}\n                                  className=\"hover:underline text-link cursor-pointer font-semibold\"\n                                >\n                                  {groupData?.requests?.length || 0}\n                                </a>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      }\n                      user={userData}\n                    />\n                    <DiscoverCard />\n                    {!isOwner && (\n                      <ExitGroup groupId={groupId} userId={userData._id} />\n                    )}\n\n                    {/* <Modal\n                      setOpen={setShowCreateGroupModal}\n                      header=\"Create group\"\n                      open={showCreateGroupModal}\n                    >\n                      <div className=\" min-w-132 max-w-164 min-h-56 max-h-132 overflow-y-auto\">\n                        <CreateGroup\n                          refetchGroup={refetch}\n                          groupData={groupData}\n                          onSuccess={() => setShowCreateGroupModal(false)}\n                        />\n                      </div>\n                    </Modal>\n\n                    {authorized && (\n                      <Button\n                        label=\"Edit group details\"\n                        gradient\n                        onClick={() => setShowCreateGroupModal(true)}\n                        // link={links.editGroup(groupData._id)}\n                      />\n                    )} */}\n                  </>\n                ) : (\n                  <Spinner />\n                )}\n              </div>\n            }\n            secondCol={\n              <div className=\"\">\n                {isLoading && !isFetched ? (\n                  <Spinner />\n                ) : (\n                  <div className=\"flex gap-y-12 mx-auto lg:max-w-2xl  flex-col\">\n                    <div className=\"rounded-lg border dark:border-gray-700  border-gray-200 overflow-hidden  bg-white dark:bg-gray-800\">\n                      <img\n                        alt=\"\"\n                        src={\n                          groupData?.coverPicture\n                            ? groupData?.coverPicture\n                            : 'https://source.unsplash.com/1600x900/?nature,water'\n                        }\n                        className=\"w-full lg:h-28 sm:h-24 object-cover h-20\"\n                      />\n                      <div className=\"flex justify-start mx-8 -mt-5\">\n                        <img\n                          alt=\"\"\n                          src={\n                            groupData.profilePicture\n                              ? groupData.profilePicture\n                              : avatarPlaceholder\n                          }\n                          className=\" border-solid lg:h-16 lg:w-16 h-12 w-12  border-white border-2 -mt-3\"\n                        />\n                      </div>\n                      <div className=\"text-left mx-8 mt-2 pb-6 pt-2\">\n                        <h3 className=\"dark:text-white text-gray-900 text-2xl font-medium \">\n                          {groupData.groupName}\n                        </h3>\n                      </div>\n                    </div>\n\n                    <PostInput\n                      // for now\n                      disabled\n                      placeholder=\"Start a post in this group\"\n                      customButtons={\n                        <>\n                          <Button\n                            gradient\n                            invert\n                            Icon={HiOutlinePhotograph}\n                            label=\"Photo\"\n                          />\n                          <Button\n                            gradient\n                            Icon={BsCameraVideo}\n                            invert\n                            label=\"Video\"\n                          />\n                          <Button gradient Icon={CgPoll} invert label=\"Poll\" />\n                        </>\n                      }\n                      profilePicture={userData?.profilePicture}\n                    />\n\n                    <Card\n                      content={\n                        <div className=\"m-4 text-center flex items-center justify-center flex-col\">\n                          <img\n                            src={NoPosts}\n                            alt=\"\"\n                            className=\"h-28 sm:h-32 lg:h-36 xl:h-40 w-full\"\n                          />\n                          <h3 className=\"mt-4 text-xl font-medium dark:text-gray-300 text-gray-900\">\n                            Create the first post\n                          </h3>\n                          <p className=\"mt-1 text-base text-gray-500\">\n                            Get the conversation going. Be the first to post in\n                            this group!\n                          </p>\n                        </div>\n                      }\n                    />\n                  </div>\n                )}\n              </div>\n            }\n            thirdColClass=\"lg:block\"\n            thirdCol={\n              <div className=\"space-y-12 lg:max-w-84 max-w-sm\">\n                <Card\n                  cardTitle={`${groupData.members.length} member${\n                    groupData.members.length > 1 ? 's' : ''\n                  }`}\n                  content={\n                    <div className=\"mt-4 flex-shrink-0 sm:mt-0 \">\n                      <div className=\"flex overflow-hidden -space-x-2\">\n                        {groupData.members\n                          .slice(0, 4)\n                          // @ts-ignore\n                          .map((member: IParent) => (\n                            <img\n                              key={member._id}\n                              className=\"inline-block lg:h-12 lg:w-12 h-12 w-12 rounded-full ring-2 dark:ring-transparent ring-white\"\n                              src={member.profilePicture}\n                              alt={''}\n                            />\n                          ))}\n                      </div>\n                      {authorized && (\n                        <Button\n                          onClick={() => setShowModal(true)}\n                          gradient\n                          rounded=\"rounded-full\"\n                          className=\"mt-4\"\n                          label=\"Invite connections\"\n                        />\n                      )}\n                    </div>\n                  }\n                />\n                <Card\n                  cardTitle=\"About this group\"\n                  content={\n                    <p className=\"text-gray-900 dark:text-gray-200 line-clamp \">\n                      {groupData.groupDescription}\n                    </p>\n                  }\n                />\n                {groupData.groupRules && (\n                  <Card\n                    cardTitle=\"Group rules\"\n                    content={\n                      <p className=\"text-gray-900 dark:text-gray-200 line-clamp \">\n                        {groupData.groupRules}\n                      </p>\n                    }\n                  />\n                )}\n                <Card\n                  cardTitle=\"Admin\"\n                  content={\n                    <div>\n                      {/* Start */}\n                      {/* @ts-ignore */}\n                      {groupData.admin.map((_admin: IParent) => {\n                        const { isBusiness, isPersonal } = getType(_admin)\n                        return (\n                          <div className=\"flex \">\n                            <div className=\"mr-4 mt-2 flex-shrink-0\">\n                              <img\n                                alt=\"\"\n                                src={\n                                  _admin.profilePicture\n                                    ? _admin.profilePicture\n                                    : avatarPlaceholder\n                                }\n                                className=\"rounded-full border-solid lg:h-12 lg:w-12 h-12 w-12  border-white border-2 -mt-3\"\n                              />\n                            </div>\n                            <div>\n                              <a\n                                href={links.getProfile(_admin)}\n                                className=\"text-base  dark:text-white font-semibold\"\n                              >\n                                {_admin.fullName}\n                              </a>\n                              <p className=\"mt-1 text-sm dark:text-gray-500\">\n                                {isBusiness\n                                  ? _admin?.business?.name\n                                  : isPersonal\n                                  ? _admin?.company?.companyName\n                                  : _admin?.background?.education &&\n                                    _admin?.background?.education[0].name}\n                              </p>\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  }\n                />\n\n                {/* <Following\n                  showSingleCard\n                  list={userData?.following}\n                  interests={userData?.background?.interests}\n                /> */}\n              </div>\n            }\n          />\n        </div>\n      </div>\n    )\n  )\n}\n\nexport default SingleGroupView\n"],"sourceRoot":""}
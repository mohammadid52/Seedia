{"version":3,"sources":["pages/account/personal/PersonalSecondStep.jsx"],"names":["StudentSecondStep","useState","isLoaded","setIsLoaded","history","useHistory","useForm","jobTitle","jobType","id","name","latestCompany","fields","onChange","errors","setFields","setErrors","setTimeout","saving","setSaving","className","src","alt","label","required","type","error","value","list","selectedItem","onSelect","item","onClick","isValid","trimmedLen","field","trim","length","validateForm","wait","then","push","fullWidth","rounded","gradient","loading","size"],"mappings":"6MA0KeA,UAhKW,WAAO,IAAD,EACEC,oBAAS,GADX,mBACvBC,EADuB,KACbC,EADa,KAExBC,EAAUC,cAFc,EAqB6BC,YAXpC,CACrBC,SAAU,GACVC,QAAS,CAAEC,GAAI,GAAIC,KAAM,IACzBC,cAAe,IAGY,CAC3BJ,SAAU,GACVI,cAAe,KAGTC,EArBsB,EAqBtBA,OAAQC,EArBc,EAqBdA,SAAUC,EArBI,EAqBJA,OAAQC,EArBJ,EAqBIA,UAAWC,EArBf,EAqBeA,UA+B7CC,YAAW,WACTd,GAAY,KACX,KAtD2B,MAwDFF,oBAAS,GAxDP,mBAwDvBiB,EAxDuB,KAwDfC,EAxDe,KA0E9B,OAAQjB,EAGN,sBAAKkB,UAAU,4EAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,qBACEA,UAAU,sBACVC,IAA8B,YAC9BC,IAAI,aAEN,oBAAIF,UAAU,yDAAd,sBAGA,oBAAGA,UAAU,yCAAb,wDAC6C,uBAD7C,qBAMF,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,sDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACEG,MAAM,wBACNd,GAAG,WACHC,KAAK,WACLG,SAAUA,EACVW,UAAQ,EACRC,KAAK,OACLC,MAAOZ,EAAOP,SACdoB,MAAOf,EAAOL,WAEhB,qBAAKa,UAAU,OAAf,SACE,cAAC,IAAD,CACEG,MAAO,WACPK,KAvGE,CACd,CAAEnB,GAAI,IAAKC,KAAM,iBACjB,CAAED,GAAI,IAAKC,KAAM,iBAsGLmB,aACEjB,EAAOJ,QAAQC,GACXG,EAAOJ,QACP,CAAEC,GAAI,EAAGC,KAAM,cAErBoB,SAAU,SAACC,GAAD,OACRhB,EAAU,2BACLH,GADI,IAEPJ,QAAS,CAAEC,GAAIsB,EAAKtB,GAAIC,KAAMqB,EAAKrB,cAK3C,cAAC,IAAD,CACEa,MAAM,iBACNd,GAAG,gBACHC,KAAK,gBACLG,SAAUA,EACVa,MAAOZ,EAAOH,cACda,UAAQ,EACRG,MAAOf,EAAOD,gBAGhB,8BACE,cAAC,IAAD,CACEqB,QA7EG,YAhCI,WACnB,IAAIC,GAAU,EAERC,EAAa,SAACC,GAAD,OAAWvB,EAAOuB,GAAOC,OAAOC,QAoBnD,OAlBIH,EAAW,aAAe,GAC5BD,GAAU,EACVnB,EAAOP,SAAW,kCAElB0B,GAAU,EACVnB,EAAOP,SAAW,IAGhB2B,EAAW,kBAAoB,GACjCD,GAAU,EACVnB,EAAOH,cAAgB,6BAEvBsB,GAAU,EACVnB,EAAOH,cAAgB,IAGzBK,EAAU,eAAKF,IAERmB,GAUSK,KAEdnB,GAAU,GACVoB,YAAK,KAAMC,MAAK,WAEd,OADArB,GAAU,GACHf,EAAQqC,KAAK,gDAwEZC,WAAS,EACTC,QAAQ,aACRC,UAAQ,EACRC,QAAS3B,EACTK,MAAM,qBAKd,qBAAKH,UAAU,OAAf,SACE,cAAC,IAAD,CACEY,QA7EK,WACb5B,EAAQqC,KAAK,YA6ELE,QAAQ,aACRC,UAAQ,EACRE,KAAK,KACLvB,MAAM,iBAIZ,cAAC,IAAD,OAhFF,cAAC,IAAD","file":"static/js/13.f86748ac.chunk.js","sourcesContent":["import Button from 'components/atoms/Button'\nimport FormInput from 'components/atoms/FormInput'\nimport Selector from 'components/atoms/Selector'\nimport Copyright from 'components/Copyright'\nimport Loading from 'components/Loading'\nimport useForm from 'hooks/useForm'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { wait } from 'utils/wait'\n\nconst StudentSecondStep = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n\n  //capture inputs\n\n  const jobList = [\n    { id: '1', name: 'Web Developer' },\n    { id: '2', name: 'Web Designer' },\n  ]\n  const INITIAL_FIELDS = {\n    jobTitle: '',\n    jobType: { id: '', name: '' },\n    latestCompany: '',\n  }\n\n  const ERROR_INITIAL_FIELDS = {\n    jobTitle: '',\n    latestCompany: '',\n  }\n\n  const { fields, onChange, errors, setFields, setErrors } = useForm(\n    INITIAL_FIELDS,\n    ERROR_INITIAL_FIELDS\n  )\n\n  const validateForm = () => {\n    let isValid = true\n\n    const trimmedLen = (field) => fields[field].trim().length\n\n    if (trimmedLen('jobTitle') <= 0) {\n      isValid = false\n      errors.jobTitle = 'Job title could not be empty.'\n    } else {\n      isValid = true\n      errors.jobTitle = ''\n    }\n\n    if (trimmedLen('latestCompany') <= 0) {\n      isValid = false\n      errors.latestCompany = 'This field is important.'\n    } else {\n      isValid = true\n      errors.latestCompany = ''\n    }\n\n    setErrors({ ...errors })\n\n    return isValid\n  }\n\n  setTimeout(() => {\n    setIsLoaded(true)\n  }, 1000)\n\n  const [saving, setSaving] = useState(false)\n\n  const nextStep = () => {\n    const isValid = validateForm()\n    if (isValid) {\n      setSaving(true)\n      wait(3000).then(() => {\n        setSaving(false)\n        return history.push('/account/personal/edit-profile/location')\n      })\n    } else {\n    }\n  }\n\n  const goBack = () => {\n    history.push('/signup')\n  }\n\n  return !isLoaded ? (\n    <Loading />\n  ) : (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-start py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md flex items-center flex-col \">\n        <img\n          className=\"mx-auto h-32 w-auto\"\n          src={process.env.PUBLIC_URL + '/logo.png'}\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Step Two\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Your profile helps you find new people and <br />\n          oppurtunites\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\n          <div className=\"space-y-6\">\n            <FormInput\n              label=\"Most recent job title\"\n              id=\"jobTitle\"\n              name=\"jobTitle\"\n              onChange={onChange}\n              required\n              type=\"text\"\n              error={errors.jobTitle}\n              value={fields.jobTitle}\n            />\n            <div className=\"mt-6\">\n              <Selector\n                label={'Job Type'}\n                list={jobList}\n                selectedItem={\n                  fields.jobType.id\n                    ? fields.jobType\n                    : { id: 0, name: 'Select One' }\n                }\n                onSelect={(item) =>\n                  setFields({\n                    ...fields,\n                    jobType: { id: item.id, name: item.name },\n                  })\n                }\n              />\n            </div>\n            <FormInput\n              label=\"Latest Company\"\n              id=\"latestCompany\"\n              name=\"latestCompany\"\n              onChange={onChange}\n              error={errors.latestCompany}\n              required\n              value={fields.latestCompany}\n            />\n\n            <div>\n              <Button\n                onClick={nextStep}\n                fullWidth\n                rounded=\"rounded-lg\"\n                gradient\n                loading={saving}\n                label=\"Next Step\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"my-4\">\n          <Button\n            onClick={goBack}\n            rounded=\"rounded-lg\"\n            gradient\n            size=\"sm\"\n            label=\"Go back\"\n          />\n        </div>\n      </div>\n      <Copyright />\n    </div>\n  )\n}\n\nexport default StudentSecondStep\n"],"sourceRoot":""}